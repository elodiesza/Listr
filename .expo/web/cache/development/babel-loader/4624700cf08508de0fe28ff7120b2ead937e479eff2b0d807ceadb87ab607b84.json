{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport PropTypes from 'prop-types';\nimport { RecyclerListView, DataProvider, LayoutProvider } from 'recyclerlistview';\nimport moment from 'moment';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar CalendarScroller = function (_Component) {\n  _inherits(CalendarScroller, _Component);\n  var _super = _createSuper(CalendarScroller);\n  function CalendarScroller(props) {\n    var _this;\n    _classCallCheck(this, CalendarScroller);\n    _this = _super.call(this, props);\n    _this.goToDate = function (date, delay) {\n      var data = _this.state.data;\n      var _loop = function _loop(i) {\n        if (data[i].isSame(date, 'month')) {\n          if (delay) {\n            setTimeout(function () {\n              return _this.rlv && _this.rlv.scrollToIndex(i, false);\n            }, delay);\n          } else {\n            _this.rlv && _this.rlv.scrollToIndex(i, false);\n          }\n          return 1;\n        }\n      };\n      for (var i = 0; i < data.length; i++) {\n        if (_loop(i)) break;\n      }\n    };\n    _this.scrollLeft = function () {\n      var _this$state = _this.state,\n        currentIndex = _this$state.currentIndex,\n        numVisibleItems = _this$state.numVisibleItems;\n      if (currentIndex === 0) {\n        return;\n      }\n      var newIndex = Math.max(currentIndex - numVisibleItems, 0);\n      _this.rlv && _this.rlv.scrollToIndex(newIndex, true);\n    };\n    _this.scrollRight = function () {\n      var _this$state2 = _this.state,\n        currentIndex = _this$state2.currentIndex,\n        numVisibleItems = _this$state2.numVisibleItems,\n        numMonths = _this$state2.numMonths;\n      var newIndex = Math.min(currentIndex + numVisibleItems, numMonths - 1);\n      _this.rlv && _this.rlv.scrollToIndex(newIndex, true);\n    };\n    _this.shiftMonthsForward = function (currentMonth) {\n      _this.shiftMonths(currentMonth, _this.state.numMonths / 3);\n    };\n    _this.shiftMonthsBackward = function (currentMonth) {\n      _this.shiftMonths(currentMonth, _this.state.numMonths * 2 / 3);\n    };\n    _this.shiftMonths = function (currentMonth, offset) {\n      var prevVisMonth = currentMonth.clone();\n      var newStartMonth = prevVisMonth.clone().subtract(Math.floor(offset), 'months');\n      _this.updateMonths(prevVisMonth, newStartMonth);\n    };\n    _this.updateMonths = function (prevVisMonth, newStartMonth) {\n      if (_this.shifting) {\n        return;\n      }\n      var _this$props = _this.props,\n        minDate = _this$props.minDate,\n        maxDate = _this$props.maxDate,\n        restrictMonthNavigation = _this$props.restrictMonthNavigation;\n      var data = [];\n      var _newStartMonth = newStartMonth;\n      if (minDate && restrictMonthNavigation && newStartMonth.isBefore(minDate, 'month')) {\n        _newStartMonth = moment(minDate);\n      }\n      for (var i = 0; i < _this.state.numMonths; i++) {\n        var date = _newStartMonth.clone().add(i, 'months');\n        if (maxDate && restrictMonthNavigation && date.isAfter(maxDate, 'month')) {\n          break;\n        }\n        data.push(date);\n      }\n      if (data.length < _this.props.maxSimultaneousMonths) {\n        return;\n      }\n      var _loop2 = function _loop2(_i) {\n        if (data[_i].isSame(prevVisMonth, 'month')) {\n          _this.shifting = true;\n          _this.rlv && _this.rlv.scrollToIndex(_i, false);\n          setTimeout(function () {\n            _this.rlv && _this.rlv.scrollToIndex(_i, false);\n            _this.shifting = false;\n          }, 800);\n          return 1;\n        }\n      };\n      for (var _i = 0; _i < data.length; _i++) {\n        if (_loop2(_i)) break;\n      }\n      _this.setState({\n        data: data,\n        dataProvider: _this.dataProvider.cloneWithRows(data)\n      });\n    };\n    _this.onVisibleIndicesChanged = function (all, now) {\n      var _this$state3 = _this.state,\n        data = _this$state3.data,\n        numMonths = _this$state3.numMonths,\n        _currentMonth = _this$state3.currentMonth;\n      var _this$props2 = _this.props,\n        updateMonthYear = _this$props2.updateMonthYear,\n        onMonthChange = _this$props2.onMonthChange;\n      var currentIndex = now[0] || all[0];\n      var currentMonth = data[currentIndex];\n      if (!_currentMonth || !_currentMonth.isSame(currentMonth, 'month')) {\n        var currMonth = currentMonth && currentMonth.clone();\n        onMonthChange && onMonthChange(currMonth);\n      }\n      updateMonthYear && updateMonthYear(currentMonth, true);\n      if (currentIndex === 0) {\n        _this.shiftMonthsBackward(currentMonth);\n      } else if (currentIndex > numMonths - 3) {\n        _this.shiftMonthsForward(currentMonth);\n      }\n      _this.setState({\n        currentMonth: currentMonth,\n        currentIndex: currentIndex\n      });\n    };\n    _this.onLayout = function (event) {\n      var containerWidth = event.nativeEvent.layout.width;\n      _this.setState(_objectSpread({\n        numVisibleItems: Math.floor(containerWidth / _this.state.itemWidth)\n      }, _this.updateLayout(_this.props.renderMonthParams.styles)));\n    };\n    _this.rowRenderer = function (type, rowMonth, i, extState) {\n      var _this$props3 = _this.props,\n        updateMonthYear = _this$props3.updateMonthYear,\n        renderMonth = _this$props3.renderMonth;\n      var _updateMonthYear = updateMonthYear(rowMonth),\n        month = _updateMonthYear.currentMonth,\n        year = _updateMonthYear.currentYear;\n      return renderMonth && renderMonth(_objectSpread(_objectSpread({}, extState), {}, {\n        month: month,\n        year: year\n      }));\n    };\n    _this.updateLayout = function (dims) {\n      var itemWidth = dims.containerWidth;\n      var itemHeight = dims.containerHeight;\n      if (dims.dayWrapper && dims.dayWrapper.height) {\n        itemHeight = dims.dayWrapper.height * 6;\n      }\n      var layoutProvider = new LayoutProvider(function () {\n        return 0;\n      }, function (type, dim) {\n        dim.width = itemWidth;\n        dim.height = itemHeight;\n      });\n      return {\n        layoutProvider: layoutProvider,\n        itemHeight: itemHeight,\n        itemWidth: itemWidth\n      };\n    };\n    _this.dataProvider = new DataProvider(function (r1, r2) {\n      return r1 !== r2;\n    });\n    _this.updateMonthsData = function (data) {\n      return {\n        data: data,\n        numMonths: data.length,\n        dataProvider: _this.dataProvider.cloneWithRows(data)\n      };\n    };\n    _this.state = _objectSpread(_objectSpread(_objectSpread({}, _this.updateLayout(props.renderMonthParams.styles)), _this.updateMonthsData(props.data)), {}, {\n      numVisibleItems: 1\n    });\n    return _this;\n  }\n  _createClass(CalendarScroller, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(prevProps, prevState) {\n      return this.state.data !== prevState.data || this.state.itemHeight !== prevState.itemHeight || this.state.itemWidth !== prevState.itemWidth || this.props.renderMonthParams !== prevProps.renderMonthParams;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var newState = {};\n      var updateState = false;\n      if (this.props.renderMonthParams.styles !== prevProps.renderMonthParams.styles) {\n        updateState = true;\n        newState = this.updateLayout(this.props.renderMonthParams.styles);\n      }\n      if (this.props.data !== prevProps.data) {\n        updateState = true;\n        newState = _objectSpread(_objectSpread({}, newState), this.updateMonthsData(this.props.data));\n      }\n      if (Platform.OS === 'android' && this.props.renderMonthParams.selectedStartDate !== prevProps.renderMonthParams.selectedStartDate) {\n        this.goToDate(this.props.renderMonthParams.selectedStartDate, 100);\n      }\n      if (updateState) {\n        this.setState(newState);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var _this$state4 = this.state,\n        data = _this$state4.data,\n        numMonths = _this$state4.numMonths,\n        height = _this$state4.itemHeight,\n        width = _this$state4.itemWidth,\n        layoutProvider = _this$state4.layoutProvider,\n        dataProvider = _this$state4.dataProvider;\n      if (!data || numMonths === 0 || !height) {\n        return null;\n      }\n      return _jsx(View, {\n        style: {\n          width: width,\n          height: height\n        },\n        onLayout: this.onLayout,\n        children: _jsx(RecyclerListView, {\n          ref: function ref(rlv) {\n            return _this2.rlv = rlv;\n          },\n          layoutProvider: layoutProvider,\n          dataProvider: dataProvider,\n          rowRenderer: this.rowRenderer,\n          extendedState: this.props.renderMonthParams,\n          initialRenderIndex: this.props.initialRenderIndex,\n          onVisibleIndicesChanged: this.onVisibleIndicesChanged,\n          isHorizontal: this.props.horizontal,\n          scrollViewProps: {\n            showsHorizontalScrollIndicator: false,\n            snapToInterval: this.props.horizontal ? width : height\n          }\n        })\n      });\n    }\n  }]);\n  return CalendarScroller;\n}(Component);\nCalendarScroller.propTypes = {\n  data: PropTypes.array.isRequired,\n  initialRenderIndex: PropTypes.number,\n  renderMonth: PropTypes.func,\n  renderMonthParams: PropTypes.object.isRequired,\n  minDate: PropTypes.any,\n  maxDate: PropTypes.any,\n  maxSimultaneousMonths: PropTypes.number,\n  horizontal: PropTypes.bool,\n  updateMonthYear: PropTypes.func,\n  onMonthChange: PropTypes.func\n};\nCalendarScroller.defaultProps = {\n  data: [],\n  renderMonthParams: {\n    styles: {}\n  }\n};\nexport { CalendarScroller as default };","map":{"version":3,"names":["React","Component","View","Platform","PropTypes","RecyclerListView","DataProvider","LayoutProvider","moment","jsx","_jsx","CalendarScroller","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","goToDate","date","delay","data","state","_loop","i","isSame","setTimeout","rlv","scrollToIndex","length","scrollLeft","_this$state","currentIndex","numVisibleItems","newIndex","Math","max","scrollRight","_this$state2","numMonths","min","shiftMonthsForward","currentMonth","shiftMonths","shiftMonthsBackward","offset","prevVisMonth","clone","newStartMonth","subtract","floor","updateMonths","shifting","_this$props","minDate","maxDate","restrictMonthNavigation","_newStartMonth","isBefore","add","isAfter","push","maxSimultaneousMonths","_loop2","_i","setState","dataProvider","cloneWithRows","onVisibleIndicesChanged","all","now","_this$state3","_currentMonth","_this$props2","updateMonthYear","onMonthChange","currMonth","onLayout","event","containerWidth","nativeEvent","layout","width","_objectSpread","itemWidth","updateLayout","renderMonthParams","styles","rowRenderer","type","rowMonth","extState","_this$props3","renderMonth","_updateMonthYear","month","year","currentYear","dims","itemHeight","containerHeight","dayWrapper","height","layoutProvider","dim","r1","r2","updateMonthsData","_createClass","key","value","shouldComponentUpdate","prevProps","prevState","componentDidUpdate","newState","updateState","OS","selectedStartDate","render","_this2","_this$state4","style","children","ref","extendedState","initialRenderIndex","isHorizontal","horizontal","scrollViewProps","showsHorizontalScrollIndicator","snapToInterval","propTypes","array","isRequired","number","func","object","any","bool","defaultProps","default"],"sources":["/Users/elodie/Documents/GIT/todo/node_modules/react-native-calendar-picker/CalendarPicker/Scroller.js"],"sourcesContent":["// This is a bi-directional infinite scroller.\n// As the beginning & end are reached, the dates are recalculated and the current\n// index adjusted to match the previous visible date.\n// RecyclerListView helps to efficiently recycle instances, but the data that\n// it's fed is finite. Hence the data must be shifted at the ends to appear as\n// an infinite scroller.\n\nimport React, { Component } from 'react';\nimport { View, Platform } from 'react-native';\nimport PropTypes from 'prop-types';\nimport { RecyclerListView, DataProvider, LayoutProvider } from 'recyclerlistview';\nimport moment from 'moment';\n\nexport default class CalendarScroller extends Component {\n  static propTypes = {\n    data: PropTypes.array.isRequired,\n    initialRenderIndex: PropTypes.number,\n    renderMonth: PropTypes.func,\n    renderMonthParams: PropTypes.object.isRequired,\n    minDate: PropTypes.any,\n    maxDate: PropTypes.any,\n    maxSimultaneousMonths: PropTypes.number,\n    horizontal: PropTypes.bool,\n    updateMonthYear: PropTypes.func,\n    onMonthChange: PropTypes.func,\n  }\n\n  static defaultProps = {\n    data: [],\n    renderMonthParams: { styles: {} },\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.updateLayout = dims => {\n      const itemWidth = dims.containerWidth;\n      let itemHeight = dims.containerHeight;\n      if (dims.dayWrapper && dims.dayWrapper.height) {\n        itemHeight = dims.dayWrapper.height * 6; // max 6 row weeks per month\n      }\n\n      const layoutProvider = new LayoutProvider(\n        () => 0, // only 1 view type\n        (type, dim) => {\n          dim.width = itemWidth;\n          dim.height = itemHeight;\n        }\n      );\n\n      return { layoutProvider, itemHeight, itemWidth };\n    };\n\n    this.dataProvider = new DataProvider((r1, r2) => {\n      return r1 !== r2;\n    });\n\n    this.updateMonthsData = data => {\n      return {\n        data,\n        numMonths: data.length,\n        dataProvider: this.dataProvider.cloneWithRows(data),\n      };\n    };\n\n    this.state = {\n      ...this.updateLayout(props.renderMonthParams.styles),\n      ...this.updateMonthsData(props.data),\n      numVisibleItems: 1, // updated in onLayout\n    };\n  }\n\n  shouldComponentUpdate(prevProps, prevState) {\n    return this.state.data !== prevState.data ||\n      this.state.itemHeight !== prevState.itemHeight ||\n      this.state.itemWidth !== prevState.itemWidth ||\n      this.props.renderMonthParams !== prevProps.renderMonthParams;\n  }\n\n  componentDidUpdate(prevProps) {\n    let newState = {};\n    let updateState = false;\n\n    if (this.props.renderMonthParams.styles !== prevProps.renderMonthParams.styles) {\n      updateState = true;\n      newState = this.updateLayout(this.props.renderMonthParams.styles);\n    }\n\n    if (this.props.data !== prevProps.data) {\n      updateState = true;\n      newState = {...newState, ...this.updateMonthsData(this.props.data)};\n    }\n\n    if (Platform.OS === 'android' &&\n        this.props.renderMonthParams.selectedStartDate !== prevProps.renderMonthParams.selectedStartDate)\n    {\n      // Android unexpectedly jumps to previous month on first selected date.\n      // Scroll RLV to selected date's month.\n      this.goToDate(this.props.renderMonthParams.selectedStartDate, 100);\n    }\n\n    if (updateState) {\n      this.setState(newState);\n    }\n  }\n\n  goToDate = (date, delay) => {\n    const data = this.state.data;\n    for (let i = 0; i < data.length; i++) {\n      if (data[i].isSame(date, 'month')) {\n        if (delay) {\n          setTimeout(() =>  this.rlv && this.rlv.scrollToIndex(i, false), delay);\n        }\n        else {\n          this.rlv && this.rlv.scrollToIndex(i, false);\n        }\n        break;\n      }\n    }\n  }\n\n  // Scroll left, guarding against start index.\n  scrollLeft = () => {\n    const { currentIndex, numVisibleItems } = this.state;\n    if (currentIndex === 0) {\n      return;\n    }\n    const newIndex = Math.max(currentIndex - numVisibleItems, 0);\n    this.rlv && this.rlv.scrollToIndex(newIndex, true);\n  }\n\n  // Scroll right, guarding against end index.\n  scrollRight = () => {\n    const { currentIndex, numVisibleItems, numMonths } = this.state;\n    const newIndex = Math.min(currentIndex + numVisibleItems, numMonths - 1);\n    this.rlv && this.rlv.scrollToIndex(newIndex, true);\n  }\n\n  // Shift dates when end of list is reached.\n  shiftMonthsForward = currentMonth => {\n    this.shiftMonths(currentMonth, this.state.numMonths / 3);\n  }\n\n  // Shift dates when beginning of list is reached.\n  shiftMonthsBackward = currentMonth => {\n    this.shiftMonths(currentMonth, this.state.numMonths * 2/3);\n  }\n\n  shiftMonths = (currentMonth, offset) => {\n    const prevVisMonth = currentMonth.clone();\n    const newStartMonth = prevVisMonth.clone().subtract(Math.floor(offset), 'months');\n    this.updateMonths(prevVisMonth, newStartMonth);\n  }\n\n  updateMonths = (prevVisMonth, newStartMonth) => {\n    if (this.shifting) {\n      return;\n    }\n    const {\n      minDate,\n      maxDate,\n      restrictMonthNavigation,\n    } = this.props;\n    const data = [];\n    let _newStartMonth = newStartMonth;\n    if (minDate && restrictMonthNavigation && newStartMonth.isBefore(minDate, 'month')) {\n      _newStartMonth = moment(minDate);\n    }\n    for (let i = 0; i < this.state.numMonths; i++) {\n      let date = _newStartMonth.clone().add(i, 'months');\n      if (maxDate && restrictMonthNavigation && date.isAfter(maxDate, 'month')) {\n        break;\n      }\n      data.push(date);\n    }\n    // Prevent reducing range when the minDate - maxDate range is small.\n    if (data.length < this.props.maxSimultaneousMonths) {\n      return;\n    }\n\n    // Scroll to previous date\n    for (let i = 0; i < data.length; i++) {\n      if (data[i].isSame(prevVisMonth, 'month')) {\n        this.shifting = true;\n        this.rlv && this.rlv.scrollToIndex(i, false);\n        // RecyclerListView sometimes returns position to old index after\n        // moving to the new one. Set position again after delay.\n        setTimeout(() => {\n          this.rlv && this.rlv.scrollToIndex(i, false);\n          this.shifting = false; // debounce\n        }, 800);\n        break;\n      }\n    }\n    this.setState({\n      data,\n      dataProvider: this.dataProvider.cloneWithRows(data),\n    });\n  }\n\n  // Track which dates are visible.\n  onVisibleIndicesChanged = (all, now) => {\n    const {\n      data,\n      numMonths,\n      currentMonth: _currentMonth,\n    } = this.state;\n\n    const {\n      updateMonthYear,\n      onMonthChange,\n    } = this.props;\n\n    // \"now\" contains the inflight indices, whereas \"all\" reflects indices\n    // after scrolling has settled. Prioritize \"now\" for faster header updates.\n    const currentIndex = now[0] || all[0];\n    const currentMonth = data[currentIndex]; // a Moment date\n\n    // Fire month/year update on month changes.  This is\n    // necessary for the header and onMonthChange updates.\n    if (!_currentMonth || !_currentMonth.isSame(currentMonth, 'month')) {\n      const currMonth = currentMonth && currentMonth.clone();\n      onMonthChange && onMonthChange(currMonth);\n    }\n\n    updateMonthYear && updateMonthYear(currentMonth, true);\n\n    if (currentIndex === 0) {\n      this.shiftMonthsBackward(currentMonth);\n    } else if (currentIndex > numMonths - 3) {\n      this.shiftMonthsForward(currentMonth);\n    }\n    this.setState({\n      currentMonth,\n      currentIndex,\n    });\n  }\n\n  onLayout = event => {\n    const containerWidth = event.nativeEvent.layout.width;\n    this.setState({\n      numVisibleItems: Math.floor(containerWidth / this.state.itemWidth),\n      ...this.updateLayout(this.props.renderMonthParams.styles),\n    });\n  }\n\n  rowRenderer = (type, rowMonth, i, extState) => {\n    const { updateMonthYear, renderMonth } = this.props;\n    const { currentMonth: month, currentYear: year } = updateMonthYear(rowMonth);\n    return renderMonth && renderMonth({...extState, month, year});\n  }\n\n  render() {\n    const {\n      data,\n      numMonths,\n      itemHeight: height,\n      itemWidth: width,\n      layoutProvider,\n      dataProvider,\n    } = this.state;\n    if (!data || numMonths === 0 || !height) {\n      return null;\n    }\n    return (\n      <View style={{ width, height }} onLayout={this.onLayout}>\n        <RecyclerListView\n          ref={rlv => this.rlv = rlv}\n          layoutProvider={layoutProvider}\n          dataProvider={dataProvider}\n          rowRenderer={this.rowRenderer}\n          extendedState={this.props.renderMonthParams}\n          initialRenderIndex={this.props.initialRenderIndex}\n          onVisibleIndicesChanged={this.onVisibleIndicesChanged}\n          isHorizontal={this.props.horizontal}\n          scrollViewProps={{\n            showsHorizontalScrollIndicator: false,\n            snapToInterval: this.props.horizontal ? width : height,\n          }}\n        />\n      </View>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}