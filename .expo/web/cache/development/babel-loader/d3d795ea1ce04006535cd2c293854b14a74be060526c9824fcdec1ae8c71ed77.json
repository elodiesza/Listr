{"ast":null,"code":"import ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { container } from \"../styles\";\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport Account from \"./Settings/Account\";\nimport About from \"./Settings/About\";\nimport Help from \"./Settings/Help\";\nimport Preferences from \"./Settings/Preferences\";\nimport Data from \"./Settings/Data\";\nimport SettingsHome from \"./Settings/SettingsHome\";\nimport DeleteDB from \"./Settings/DeleteDB\";\nimport Linkdata from \"./Settings/Linkdata\";\nimport background from \"../assets/images/design/background.jpg\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar SettingsNavigator = function SettingsNavigator(_ref) {\n  var db = _ref.db,\n    tasks = _ref.tasks,\n    setTasks = _ref.setTasks,\n    tracks = _ref.tracks,\n    setTracks = _ref.setTracks,\n    load = _ref.load,\n    loadx = _ref.loadx,\n    statuslist = _ref.statuslist,\n    setStatuslist = _ref.setStatuslist,\n    statusrecords = _ref.statusrecords,\n    setStatusrecords = _ref.setStatusrecords,\n    logs = _ref.logs,\n    setLogs = _ref.setLogs;\n  return _jsxs(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false,\n      cardStyle: {\n        backgroundColor: 'transparent'\n      }\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"SettingsHome\",\n      component: SettingsHome\n    }), _jsx(Stack.Screen, {\n      name: \"Account\",\n      component: Account\n    }), _jsx(Stack.Screen, {\n      name: \"About\",\n      component: About\n    }), _jsx(Stack.Screen, {\n      name: \"Data\",\n      component: Data\n    }), _jsx(Stack.Screen, {\n      name: \"Preferences\",\n      component: function component() {\n        return Preferences({\n          db: db\n        });\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Help\",\n      component: Help\n    }), _jsx(Stack.Screen, {\n      name: \"DeleteDB\",\n      component: function component() {\n        return DeleteDB({\n          db: db,\n          tasks: tasks,\n          setTasks: setTasks,\n          tracks: tracks,\n          setTracks: setTracks,\n          load: load,\n          loadx: loadx,\n          statuslist: statuslist,\n          setStatuslist: setStatuslist,\n          statusrecords: statusrecords,\n          setStatusrecords: setStatusrecords,\n          logs: logs,\n          setLogs: setLogs\n        });\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Linkdata\",\n      component: function component() {\n        return Linkdata({\n          db: db,\n          tasks: tasks,\n          setTasks: setTasks,\n          tracks: tracks,\n          setTracks: setTracks,\n          load: load,\n          loadx: loadx,\n          statuslist: statuslist,\n          setStatuslist: setStatuslist,\n          statusrecords: statusrecords,\n          setStatusrecords: setStatusrecords,\n          logs: logs,\n          setLogs: setLogs\n        });\n      }\n    })]\n  });\n};\nfunction Settings(_ref2) {\n  var db = _ref2.db,\n    tasks = _ref2.tasks,\n    setTasks = _ref2.setTasks,\n    tracks = _ref2.tracks,\n    setTracks = _ref2.setTracks,\n    load = _ref2.load,\n    loadx = _ref2.loadx,\n    statuslist = _ref2.statuslist,\n    setStatuslist = _ref2.setStatuslist,\n    statusrecords = _ref2.statusrecords,\n    setStatusrecords = _ref2.setStatusrecords,\n    logs = _ref2.logs,\n    setLogs = _ref2.setLogs;\n  return _jsx(ImageBackground, {\n    source: background,\n    resizeMode: \"cover\",\n    style: container.container,\n    children: _jsxs(SafeAreaView, {\n      style: container.container,\n      children: [_jsx(View, {\n        style: container.header,\n        children: _jsx(Text, {\n          style: container.headertitle,\n          children: \"SETTINGS\"\n        })\n      }), _jsx(SettingsNavigator, {\n        db: db,\n        tasks: tasks,\n        setTasks: setTasks,\n        tracks: tracks,\n        setTracks: setTracks,\n        load: load,\n        loadx: loadx,\n        statusrecords: statusrecords,\n        setStatusrecords: setStatusrecords,\n        statuslist: statuslist,\n        setStatuslist: setStatuslist,\n        logs: logs,\n        setLogs: setLogs\n      })]\n    })\n  });\n}\nexport default Settings;","map":{"version":3,"names":["container","createNativeStackNavigator","Account","About","Help","Preferences","Data","SettingsHome","DeleteDB","Linkdata","background","jsx","_jsx","jsxs","_jsxs","Stack","SettingsNavigator","_ref","db","tasks","setTasks","tracks","setTracks","load","loadx","statuslist","setStatuslist","statusrecords","setStatusrecords","logs","setLogs","Navigator","screenOptions","headerShown","cardStyle","backgroundColor","children","Screen","name","component","Settings","_ref2","ImageBackground","source","resizeMode","style","SafeAreaView","View","header","Text","headertitle"],"sources":["/Users/elodie/Documents/GIT/todo/screens/Settings.tsx"],"sourcesContent":["import { ImageBackground, View, Text, StyleSheet, Pressable,SafeAreaView } from 'react-native';\nimport { container,colors } from '../styles';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport Account from './Settings/Account';\nimport About from './Settings/About';\nimport Help from './Settings/Help';\nimport Preferences from './Settings/Preferences';\nimport Data from './Settings/Data';\nimport SettingsHome from './Settings/SettingsHome';\nimport DeleteDB from './Settings/DeleteDB';\nimport Linkdata from './Settings/Linkdata';\nimport background from '../assets/images/design/background.jpg';\n\nconst Stack = createNativeStackNavigator();\n\nconst SettingsNavigator =({db, tasks, setTasks, tracks, setTracks, load, loadx, \n  statuslist, setStatuslist, statusrecords, setStatusrecords, logs, setLogs})=> {\n\n\n    return (\n    <Stack.Navigator screenOptions={{headerShown:false, cardStyle:{backgroundColor:'transparent'}}}> \n      <Stack.Screen name=\"SettingsHome\" component={SettingsHome} />\n      <Stack.Screen name=\"Account\" component={Account} />\n      <Stack.Screen name=\"About\" component={About}/>\n      <Stack.Screen name=\"Data\" component={Data}/>\n      <Stack.Screen name=\"Preferences\" component={()=>Preferences({db})} />\n      <Stack.Screen name=\"Help\" component={Help} />\n      <Stack.Screen\n        name=\"DeleteDB\"\n        component={()=>DeleteDB({db, tasks, setTasks, tracks, setTracks, load, loadx,\n          statuslist, setStatuslist, statusrecords, setStatusrecords, logs, setLogs})} />\n      <Stack.Screen\n        name=\"Linkdata\"\n        component={()=>Linkdata({db, tasks, setTasks, tracks, setTracks, load, loadx,\n          statuslist, setStatuslist, statusrecords, setStatusrecords, logs, setLogs})} />\n\n    </Stack.Navigator>\n  );\n}\n\nfunction Settings({db, tasks, setTasks, tracks, setTracks,load, loadx, \n  statuslist, setStatuslist, statusrecords, setStatusrecords, logs, setLogs}) {\n\n\n  return (\n    <ImageBackground source={background} resizeMode=\"cover\" style={container.container}>\n      <SafeAreaView style={container.container}>\n          <View style={container.header}>\n              <Text style={container.headertitle}>SETTINGS</Text>\n          </View>\n          <SettingsNavigator db={db} tasks={tasks} setTasks={setTasks} \n          tracks={tracks} setTracks={setTracks} \n          load={load} loadx={loadx} \n          statusrecords={statusrecords} setStatusrecords={setStatusrecords}\n          statuslist={statuslist} setStatuslist={setStatuslist} logs={logs} setLogs={setLogs}\n          />\n      </SafeAreaView>\n    </ImageBackground>\n  );\n}\n\nexport default Settings;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}