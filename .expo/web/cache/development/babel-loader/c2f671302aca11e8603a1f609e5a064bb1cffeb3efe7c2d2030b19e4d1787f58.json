{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { container, colors } from \"../styles\";\nimport { MaterialIcons } from '@expo/vector-icons';\nimport Modal from 'react-native-modal';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar width = Dimensions.get('window').width;\nfunction DeleteSection(_ref) {\n  var deleteSectionVisible = _ref.deleteSectionVisible,\n    setDeleteSectionVisible = _ref.setDeleteSectionVisible,\n    db = _ref.db,\n    selectedTab = _ref.selectedTab,\n    setSelectedTab = _ref.setSelectedTab,\n    sections = _ref.sections,\n    setSections = _ref.setSections,\n    tasks = _ref.tasks,\n    setTasks = _ref.setTasks,\n    selectedSection = _ref.selectedSection,\n    setSelectedSection = _ref.setSelectedSection,\n    progress = _ref.progress,\n    setProgress = _ref.setProgress,\n    statusrecords = _ref.statusrecords,\n    setStatusrecords = _ref.setStatusrecords;\n  function DeleteSectionDB() {\n    var id = sections.filter(function (c) {\n      return c.section == selectedSection;\n    }).map(function (c) {\n      return c.id;\n    })[0];\n    db.transaction(function (tx) {\n      tx.executeSql('DELETE FROM sections WHERE id = ?', [id], function (txObj, resultSet) {\n        if (resultSet.rowsAffected > 0) {\n          var existingSections = _toConsumableArray(sections).filter(function (c) {\n            return c.id !== id;\n          });\n          setSections(existingSections);\n        }\n      }, function (txObj, error) {\n        return console.log(error);\n      });\n    });\n    db.transaction(function (tx) {\n      tx.executeSql('DELETE FROM tasks WHERE track = ? AND section = ?', [selectedTab, selectedSection], function (txObj, resultSet) {\n        if (resultSet.rowsAffected > 0) {\n          var existingTasks = _toConsumableArray(tasks).filter(function (c) {\n            return c.section !== selectedSection || c.track !== selectedTab;\n          });\n          setTasks(existingTasks);\n        }\n      }, function (txObj, error) {\n        return console.log(error);\n      });\n    });\n    db.transaction(function (tx) {\n      tx.executeSql('DELETE FROM progress WHERE track = ? AND list = ?', [selectedTab, selectedSection], function (txObj, resultSet) {\n        if (resultSet.rowsAffected > 0) {\n          var existingProgress = _toConsumableArray(progress).filter(function (c) {\n            return c.list !== selectedSection || c.track !== selectedTab;\n          });\n          setProgress(existingProgress);\n        }\n      }, function (txObj, error) {\n        return console.log(error);\n      });\n    });\n    db.transaction(function (tx) {\n      tx.executeSql('DELETE FROM statusrecords WHERE track = ? AND section = ?', [selectedTab, selectedSection], function (txObj, resultSet) {\n        if (resultSet.rowsAffected > 0) {\n          var existingStatusrecords = _toConsumableArray(statusrecords).filter(function (c) {\n            return c.section !== selectedSection || c.track !== selectedTab;\n          });\n          setStatusrecords(existingStatusrecords);\n        }\n      }, function (txObj, error) {\n        return console.log(error);\n      });\n    });\n    setSelectedSection('');\n    setDeleteSectionVisible(false);\n  }\n  ;\n  return _jsx(Modal, {\n    isVisible: deleteSectionVisible,\n    onBackdropPress: function onBackdropPress() {\n      setDeleteSectionVisible(!deleteSectionVisible);\n    },\n    backdropColor: \"white\",\n    avoidKeyboard: true,\n    style: {\n      margin: 0,\n      justifyContent: 'flex-end',\n      alignItems: 'center',\n      width: width\n    },\n    children: _jsx(TouchableOpacity, {\n      onPressOut: function onPressOut() {\n        return setDeleteSectionVisible(!deleteSectionVisible);\n      },\n      activeOpacity: 1,\n      children: _jsx(TouchableWithoutFeedback, {\n        children: _jsxs(View, {\n          style: [container.newModal, {\n            alignItems: 'center'\n          }],\n          children: [_jsxs(View, {\n            style: {\n              width: \"100%\",\n              flexDirection: 'row',\n              alignItems: 'center',\n              justifyContent: 'flex-start'\n            },\n            children: [_jsx(Pressable, {\n              onPress: function onPress() {\n                return setDeleteSectionVisible(!deleteSectionVisible);\n              },\n              children: _jsx(MaterialIcons, {\n                name: \"keyboard-arrow-left\",\n                size: 25,\n                color: colors.primary.blue\n              })\n            }), _jsxs(Text, {\n              style: {\n                left: 20,\n                flexWrap: 'wrap'\n              },\n              children: [\"Delete \", selectedSection, \" and its tasks definitely ?\"]\n            })]\n          }), _jsx(Pressable, {\n            onPress: function onPress() {\n              return DeleteSectionDB();\n            },\n            style: [container.button, {\n              flexDirection: 'row',\n              alignItems: 'center',\n              justifyContent: 'center',\n              height: 40,\n              width: 150,\n              marginRight: 5\n            }],\n            children: _jsx(Text, {\n              children: \" DELETE \"\n            })\n          })]\n        })\n      })\n    })\n  });\n}\n;\nexport default DeleteSection;","map":{"version":3,"names":["container","colors","MaterialIcons","Modal","jsx","_jsx","jsxs","_jsxs","width","Dimensions","get","DeleteSection","_ref","deleteSectionVisible","setDeleteSectionVisible","db","selectedTab","setSelectedTab","sections","setSections","tasks","setTasks","selectedSection","setSelectedSection","progress","setProgress","statusrecords","setStatusrecords","DeleteSectionDB","id","filter","c","section","map","transaction","tx","executeSql","txObj","resultSet","rowsAffected","existingSections","_toConsumableArray","error","console","log","existingTasks","track","existingProgress","list","existingStatusrecords","isVisible","onBackdropPress","backdropColor","avoidKeyboard","style","margin","justifyContent","alignItems","children","TouchableOpacity","onPressOut","activeOpacity","TouchableWithoutFeedback","View","newModal","flexDirection","Pressable","onPress","name","size","color","primary","blue","Text","left","flexWrap","button","height","marginRight"],"sources":["/Users/elodie/Documents/GIT/todo/modal/DeleteSection.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Dimensions,TouchableWithoutFeedback,TouchableOpacity, StyleSheet, TextInput, Pressable, Text, View, FlatList } from 'react-native';\nimport { useForm, Controller, set } from 'react-hook-form';\nimport { container,colors } from '../styles';\nimport { MaterialIcons, Feather } from '@expo/vector-icons';\nimport Modal from 'react-native-modal';\n\nconst width = Dimensions.get('window').width;\n\nfunction DeleteSection({deleteSectionVisible, setDeleteSectionVisible, db, selectedTab, setSelectedTab, sections, setSections, tasks, setTasks, selectedSection, setSelectedSection, progress, setProgress, statusrecords, setStatusrecords}) {\n\n\n  function DeleteSectionDB() {\n    const id= sections.filter(c=>c.section==selectedSection).map(c=>c.id)[0];\n    db.transaction(tx=> {\n        tx.executeSql('DELETE FROM sections WHERE id = ?', [id],\n        (txObj, resultSet) => {\n            if (resultSet.rowsAffected > 0) {\n                let existingSections = [...sections].filter(c=>c.id!==id);\n                setSections(existingSections);\n              }\n        },\n        (txObj, error) => console.log(error)\n        );       \n    })  \n    db.transaction(tx=> {\n        tx.executeSql('DELETE FROM tasks WHERE track = ? AND section = ?', [selectedTab, selectedSection],\n        (txObj, resultSet) => {\n            if (resultSet.rowsAffected > 0) {\n                let existingTasks = [...tasks].filter(c=>(c.section!==selectedSection || c.track!==selectedTab));\n                setTasks(existingTasks);\n              }\n        },\n        (txObj, error) => console.log(error)\n        );       \n    })   \n    db.transaction(tx=> {\n        tx.executeSql('DELETE FROM progress WHERE track = ? AND list = ?', [selectedTab, selectedSection],\n        (txObj, resultSet) => {\n            if (resultSet.rowsAffected > 0) {\n                let existingProgress = [...progress].filter(c=>(c.list!==selectedSection || c.track!==selectedTab));\n                setProgress(existingProgress);\n              }\n        },\n        (txObj, error) => console.log(error)\n        );       \n    })\n    db.transaction(tx=> {\n      tx.executeSql('DELETE FROM statusrecords WHERE track = ? AND section = ?', [selectedTab, selectedSection],\n      (txObj, resultSet) => {\n          if (resultSet.rowsAffected > 0) {\n              let existingStatusrecords = [...statusrecords].filter(c=>(c.section!==selectedSection || c.track!==selectedTab));\n              setStatusrecords(existingStatusrecords);\n            }\n      },\n      (txObj, error) => console.log(error)\n      );       \n  })   \n    setSelectedSection('');\n    setDeleteSectionVisible(false);  \n  };\n \n\n  return (\n    <Modal\n      isVisible={deleteSectionVisible}\n      onBackdropPress={() => {\n        setDeleteSectionVisible(!deleteSectionVisible);\n      }}\n        backdropColor='white'\n        avoidKeyboard={true}\n        style={{margin: 0,justifyContent:'flex-end',alignItems:'center', width:width}}\n    > \n      <TouchableOpacity onPressOut={() => setDeleteSectionVisible(!deleteSectionVisible)} activeOpacity={1}>\n        <TouchableWithoutFeedback>\n            <View style={[container.newModal,{alignItems:'center'}]}>\n                <View style={{width:\"100%\",flexDirection:'row', alignItems:'center', justifyContent:'flex-start'}}>\n                    <Pressable onPress={() => setDeleteSectionVisible(!deleteSectionVisible)}>\n                        <MaterialIcons name=\"keyboard-arrow-left\" size={25} color={colors.primary.blue}/>\n                    </Pressable>\n                    <Text style={{left:20, flexWrap:'wrap'}}>Delete {selectedSection} and its tasks definitely ?</Text>\n                </View>\n                <Pressable onPress={()=>DeleteSectionDB()} style={[container.button,{flexDirection:'row', alignItems:'center',justifyContent:'center',height:40, width:150, marginRight:5}]}>\n                    <Text> DELETE </Text>\n                </Pressable>\n          </View> \n        </TouchableWithoutFeedback>\n      </TouchableOpacity>\n    </Modal>\n  );\n};\n\nexport default DeleteSection;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}