{"ast":null,"code":"import Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { container, colors } from \"../styles\";\nimport { MaterialIcons } from '@expo/vector-icons';\nimport Modal from 'react-native-modal';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar width = Dimensions.get('window').width;\nfunction DeleteDBvalid(_ref) {\n  var deleteVisible = _ref.deleteVisible,\n    setDeleteVisible = _ref.setDeleteVisible,\n    db = _ref.db,\n    setSections = _ref.setSections,\n    setTasks = _ref.setTasks,\n    setTracks = _ref.setTracks,\n    setProgress = _ref.setProgress,\n    setStatusrecords = _ref.setStatusrecords,\n    setStatuslist = _ref.setStatuslist,\n    setLogs = _ref.setLogs,\n    selectedData = _ref.selectedData;\n  function Delete() {\n    if (selectedData == 'tasks') {\n      db.transaction(function (tx) {\n        tx.executeSql('DROP TABLE IF EXISTS tasks', null, function (txObj, resultSet) {\n          return setTasks([]);\n        }, function (txObj, error) {\n          return console.log('error selecting tasks');\n        });\n      });\n    } else if (selectedData == 'sections') {\n      db.transaction(function (tx) {\n        tx.executeSql('DROP TABLE IF EXISTS sections', null, function (txObj, resultSet) {\n          return setSections([]);\n        }, function (txObj, error) {\n          return console.log('error selecting sections');\n        });\n      });\n    } else if (selectedData == 'tracks') {\n      db.transaction(function (tx) {\n        tx.executeSql('DROP TABLE IF EXISTS tracks', null, function (txObj, resultSet) {\n          return setTracks([]);\n        }, function (txObj, error) {\n          return console.log('error selecting tracks');\n        });\n      });\n    } else if (selectedData == 'statusrecords') {\n      db.transaction(function (tx) {\n        tx.executeSql('DROP TABLE IF EXISTS statusrecords', null, function (txObj, resultSet) {\n          return setStatusrecords([]);\n        }, function (txObj, error) {\n          return console.log('error selecting status records');\n        });\n      });\n    } else if (selectedData == 'statuslist') {\n      db.transaction(function (tx) {\n        tx.executeSql('DROP TABLE IF EXISTS statuslist', null, function (txObj, resultSet) {\n          return setStatuslist([]);\n        }, function (txObj, error) {\n          return console.log('error selecting status list');\n        });\n      });\n    } else if (selectedData == 'progress') {\n      db.transaction(function (tx) {\n        tx.executeSql('DROP TABLE IF EXISTS progress', null, function (txObj, resultSet) {\n          return setProgress([]);\n        }, function (txObj, error) {\n          return console.log('error selecting progress');\n        });\n      });\n    } else if (selectedData == 'logs') {\n      db.transaction(function (tx) {\n        tx.executeSql('DROP TABLE IF EXISTS logs', null, function (txObj, resultSet) {\n          return setLogs([]);\n        }, function (txObj, error) {\n          return console.log('error selecting logs');\n        });\n      });\n    }\n    setDeleteVisible(false);\n  }\n  ;\n  return _jsx(Modal, {\n    isVisible: deleteVisible,\n    onBackdropPress: function onBackdropPress() {\n      setDeleteVisible(false);\n    },\n    backdropColor: \"white\",\n    avoidKeyboard: true,\n    style: {\n      margin: 0,\n      justifyContent: 'flex-end',\n      alignItems: 'center',\n      width: width\n    },\n    children: _jsx(TouchableOpacity, {\n      onPressOut: function onPressOut() {\n        return setDeleteVisible(false);\n      },\n      activeOpacity: 1,\n      children: _jsx(TouchableWithoutFeedback, {\n        children: _jsxs(View, {\n          style: [container.newModal, {\n            alignItems: 'center'\n          }],\n          children: [_jsxs(View, {\n            style: {\n              width: \"100%\",\n              flexDirection: 'row',\n              alignItems: 'center',\n              justifyContent: 'flex-start'\n            },\n            children: [_jsx(Pressable, {\n              onPress: function onPress() {\n                return setDeleteVisible(false);\n              },\n              children: _jsx(MaterialIcons, {\n                name: \"keyboard-arrow-left\",\n                size: 25,\n                color: colors.primary.blue\n              })\n            }), _jsxs(Text, {\n              style: {\n                left: 20,\n                flexWrap: 'wrap'\n              },\n              children: [\"Delete \", selectedData, \" data definitely ?\"]\n            })]\n          }), _jsx(Pressable, {\n            onPress: function onPress() {\n              return Delete();\n            },\n            style: [container.button, {\n              flexDirection: 'row',\n              alignItems: 'center',\n              justifyContent: 'center',\n              height: 40,\n              width: 150,\n              marginRight: 5\n            }],\n            children: _jsx(Text, {\n              children: \" DELETE \"\n            })\n          })]\n        })\n      })\n    })\n  });\n}\n;\nexport default DeleteDBvalid;","map":{"version":3,"names":["container","colors","MaterialIcons","Modal","jsx","_jsx","jsxs","_jsxs","width","Dimensions","get","DeleteDBvalid","_ref","deleteVisible","setDeleteVisible","db","setSections","setTasks","setTracks","setProgress","setStatusrecords","setStatuslist","setLogs","selectedData","Delete","transaction","tx","executeSql","txObj","resultSet","error","console","log","isVisible","onBackdropPress","backdropColor","avoidKeyboard","style","margin","justifyContent","alignItems","children","TouchableOpacity","onPressOut","activeOpacity","TouchableWithoutFeedback","View","newModal","flexDirection","Pressable","onPress","name","size","color","primary","blue","Text","left","flexWrap","button","height","marginRight"],"sources":["/Users/elodie/Documents/GIT/todo/modal/DeleteDBvalid.tsx"],"sourcesContent":["import { Dimensions,TouchableWithoutFeedback,TouchableOpacity, StyleSheet, TextInput, Pressable, Text, View, FlatList } from 'react-native';\nimport { container,colors } from '../styles';\nimport { MaterialIcons, Feather } from '@expo/vector-icons';\nimport Modal from 'react-native-modal';\n\nconst width = Dimensions.get('window').width;\n\nfunction DeleteDBvalid({deleteVisible, setDeleteVisible, db, setSections, setTasks, setTracks, setProgress, setStatusrecords, setStatuslist, setLogs, selectedData}) {\n\n\n  function Delete() {\n    if (selectedData=='tasks') {\n      db.transaction(tx=>{tx.executeSql('DROP TABLE IF EXISTS tasks', null,\n      (txObj, resultSet) => setTasks([]),\n      (txObj, error) => console.log('error selecting tasks')\n      )})\n    }\n    else if (selectedData=='sections') {\n      db.transaction(tx=>{tx.executeSql('DROP TABLE IF EXISTS sections', null,\n      (txObj, resultSet) => setSections([]),\n      (txObj, error) => console.log('error selecting sections')\n      )})\n    } \n    else if (selectedData=='tracks') {\n      db.transaction(tx=>{tx.executeSql('DROP TABLE IF EXISTS tracks', null,\n      (txObj, resultSet) => setTracks([]),\n      (txObj, error) => console.log('error selecting tracks')\n      )})\n    }\n    else if (selectedData=='statusrecords') {\n      db.transaction(tx=>{tx.executeSql('DROP TABLE IF EXISTS statusrecords', null,\n      (txObj, resultSet) => setStatusrecords([]),\n      (txObj, error) => console.log('error selecting status records')\n      )})\n    }\n    else if (selectedData=='statuslist') {\n      db.transaction(tx=>{tx.executeSql('DROP TABLE IF EXISTS statuslist', null,\n      (txObj, resultSet) => setStatuslist([]),\n      (txObj, error) => console.log('error selecting status list')\n      )})\n    }\n    else if (selectedData=='progress') {\n      db.transaction(tx=>{tx.executeSql('DROP TABLE IF EXISTS progress', null,\n      (txObj, resultSet) => setProgress([]),\n      (txObj, error) => console.log('error selecting progress')\n      )})\n    }\n    else if (selectedData=='logs') {\n      db.transaction(tx=>{tx.executeSql('DROP TABLE IF EXISTS logs', null,\n      (txObj, resultSet) => setLogs([]),\n      (txObj, error) => console.log('error selecting logs')\n      )})\n    }\n    setDeleteVisible(false);\n  };\n \n\n  return (\n    <Modal\n      isVisible={deleteVisible}\n      onBackdropPress={() => {\n        setDeleteVisible(false);\n      }}\n        backdropColor='white'\n        avoidKeyboard={true}\n        style={{margin: 0,justifyContent:'flex-end',alignItems:'center', width:width}}\n    > \n      <TouchableOpacity onPressOut={() => setDeleteVisible(false)} activeOpacity={1}>\n        <TouchableWithoutFeedback>\n            <View style={[container.newModal,{alignItems:'center'}]}>\n                <View style={{width:\"100%\",flexDirection:'row', alignItems:'center', justifyContent:'flex-start'}}>\n                    <Pressable onPress={() => setDeleteVisible(false)}>\n                        <MaterialIcons name=\"keyboard-arrow-left\" size={25} color={colors.primary.blue}/>\n                    </Pressable>\n                    <Text style={{left:20, flexWrap:'wrap'}}>Delete {selectedData} data definitely ?</Text>\n                </View>\n                <Pressable onPress={()=>Delete()} style={[container.button,{flexDirection:'row', alignItems:'center',justifyContent:'center',height:40, width:150, marginRight:5}]}>\n                    <Text> DELETE </Text>\n                </Pressable>\n          </View> \n        </TouchableWithoutFeedback>\n      </TouchableOpacity>\n    </Modal>\n  );\n};\n\nexport default DeleteDBvalid;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}