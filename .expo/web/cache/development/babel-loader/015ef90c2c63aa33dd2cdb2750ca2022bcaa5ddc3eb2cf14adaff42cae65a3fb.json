{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { colors, container, paleColor } from \"../styles\";\nimport { useEffect, useState } from 'react';\nimport { Feather, MaterialIcons, Entypo, Ionicons } from '@expo/vector-icons';\nimport NewSection from \"../modal/NewSection\";\nimport NewTask from \"../modal/NewTask\";\nimport Task from \"../components/Task\";\nimport { SwipeListView } from 'react-native-swipe-list-view';\nimport ProgressBar from \"../components/ProgressBar\";\nimport NewProgress from \"../modal/NewProgress\";\nimport NewTrack from \"../modal/NewTrack\";\nimport NewStatus from \"../modal/NewStatus\";\nimport Status from \"../components/Status\";\nimport DeleteTrack from \"../modal/DeleteTrack\";\nimport DeleteSection from \"../modal/DeleteSection\";\nimport background from \"../assets/images/design/background.jpg\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar width = Dimensions.get('window').width;\nfunction Tracks(_ref) {\n  var tracks = _ref.tracks,\n    setTracks = _ref.setTracks,\n    db = _ref.db,\n    sections = _ref.sections,\n    setSections = _ref.setSections,\n    tasks = _ref.tasks,\n    setTasks = _ref.setTasks,\n    progress = _ref.progress,\n    setProgress = _ref.setProgress,\n    statuslist = _ref.statuslist,\n    setStatuslist = _ref.setStatuslist,\n    statusrecords = _ref.statusrecords,\n    setStatusrecords = _ref.setStatusrecords,\n    settings = _ref.settings;\n  var today = new Date();\n  var thisYear = today.getFullYear();\n  var thisMonth = today.getMonth();\n  var day = today.getDate();\n  var _useState = useState('UNLISTED'),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedTab = _useState2[0],\n    setSelectedTab = _useState2[1];\n  var _useState3 = useState(selectedTab == undefined ? colors.primary.default : tracks.filter(function (c) {\n      return c.track == selectedTab;\n    }).map(function (c) {\n      return c.color;\n    })[0]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedTabColor = _useState4[0],\n    setSelectedTabColor = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    newSectionVisible = _useState6[0],\n    setNewSectionVisible = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    newTrackVisible = _useState8[0],\n    setNewTrackVisible = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    newTaskVisible = _useState10[0],\n    setNewTaskVisible = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    deleteTrackVisible = _useState12[0],\n    setDeleteTrackVisible = _useState12[1];\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    deleteSectionVisible = _useState14[0],\n    setDeleteSectionVisible = _useState14[1];\n  var _useState15 = useState(false),\n    _useState16 = _slicedToArray(_useState15, 2),\n    newProgressVisible = _useState16[0],\n    setNewProgressVisible = _useState16[1];\n  var _useState17 = useState(false),\n    _useState18 = _slicedToArray(_useState17, 2),\n    newStatusVisible = _useState18[0],\n    setNewStatusVisible = _useState18[1];\n  var _useState19 = useState(''),\n    _useState20 = _slicedToArray(_useState19, 2),\n    selectedSection = _useState20[0],\n    setSelectedSection = _useState20[1];\n  var _useState21 = useState(true),\n    _useState22 = _slicedToArray(_useState21, 2),\n    showSection = _useState22[0],\n    setShowSection = _useState22[1];\n  var _useState23 = useState(false),\n    _useState24 = _slicedToArray(_useState23, 2),\n    showArchive = _useState24[0],\n    setShowArchive = _useState24[1];\n  var arrowArray = function arrowArray() {\n    var arrowArray = [];\n    var sectionLength = sections.filter(function (c) {\n      return c.track == selectedTab;\n    }).length;\n    for (var i = 0; i < sectionLength; i++) {\n      arrowArray.push({\n        'index': i,\n        'arrow': true\n      });\n    }\n    return arrowArray;\n  };\n  var _useState25 = useState(arrowArray()),\n    _useState26 = _slicedToArray(_useState25, 2),\n    arrow = _useState26[0],\n    setArrow = _useState26[1];\n  var updateArrowAtIndex = function updateArrowAtIndex(index, newArrowValue) {\n    setArrow(function (prevArrowArray) {\n      return prevArrowArray.map(function (item) {\n        if (item.index === index) {\n          return _objectSpread(_objectSpread({}, item), {}, {\n            arrow: newArrowValue\n          });\n        }\n        return item;\n      });\n    });\n  };\n  useEffect(function () {\n    setArrow(arrowArray());\n    setSelectedTabColor(selectedTab == undefined ? colors.primary.default : tracks.filter(function (c) {\n      return c.track == selectedTab;\n    }).map(function (c) {\n      return c.color;\n    })[0]);\n    setSelectedSection(sections.filter(function (c) {\n      return c.track == selectedTab;\n    }).map(function (c) {\n      return c.section;\n    })[0]);\n  }, [selectedTab, tracks]);\n  var TransferDaily = function TransferDaily(id) {\n    var existingTasks = _toConsumableArray(tasks);\n    var toTransfer = existingTasks.map(function (c) {\n      return c.id;\n    }).findIndex(function (c) {\n      return c == id;\n    });\n    db.transaction(function (tx) {\n      tx.executeSql('UPDATE tasks SET year = ?, month=?, day=? WHERE id= ?', [thisYear, thisMonth, day, id], function (txObj, resultSet) {\n        if (resultSet.rowsAffected > 0) {\n          existingTasks[toTransfer].year = thisYear;\n          existingTasks[toTransfer].month = thisMonth;\n          existingTasks[toTransfer].day = day;\n          setTasks(existingTasks);\n        }\n      }, function (txObj, error) {\n        return console.log('Error updating data', error);\n      });\n    });\n  };\n  var TransferArchive = function TransferArchive(id, reverse) {\n    var existingrecords = _toConsumableArray(statusrecords);\n    var toTransfer = existingrecords.map(function (c) {\n      return c.id;\n    }).findIndex(function (c) {\n      return c == id;\n    });\n    db.transaction(function (tx) {\n      tx.executeSql('UPDATE statusrecords SET archive=? WHERE id= ?', [reverse ? false : true, id], function (txObj, resultSet) {\n        if (resultSet.rowsAffected > 0) {\n          existingrecords[toTransfer].archive = reverse ? false : true;\n          setStatusrecords(existingrecords);\n        }\n      }, function (txObj, error) {\n        return console.log('Error updating data', error);\n      });\n    });\n  };\n  var TaskSwipeItem = function TaskSwipeItem(_ref2) {\n    var id = _ref2.id;\n    return _jsxs(View, {\n      style: {\n        flex: 1,\n        backgroundColor: 'green',\n        flexDirection: 'row'\n      },\n      children: [_jsx(View, {\n        style: {\n          width: 0.9 * width - 50,\n          paddingRight: 12,\n          justifyContent: 'center',\n          alignItems: 'flex-end',\n          backgroundColor: colors.primary.yellowgreen\n        },\n        children: _jsx(Pressable, {\n          onPress: function onPress() {\n            return TransferDaily(id);\n          },\n          children: _jsx(Feather, {\n            name: \"calendar\",\n            size: 25,\n            color: 'white'\n          })\n        })\n      }), _jsx(View, {\n        style: {\n          justifyContent: 'center',\n          alignItems: 'center',\n          flex: 1,\n          backgroundColor: 'darkred'\n        },\n        children: _jsx(Pressable, {\n          onPress: function onPress() {\n            return db.transaction(function (tx) {\n              tx.executeSql('DELETE FROM tasks WHERE id = ?', [id], function (txObj, resultSet) {\n                if (resultSet.rowsAffected > 0) {\n                  var existingTasks = _toConsumableArray(tasks).filter(function (c) {\n                    return c.id !== id;\n                  });\n                  setTasks(existingTasks);\n                }\n              }, function (txObj, error) {\n                return console.log(error);\n              });\n            });\n          },\n          children: _jsx(Feather, {\n            name: \"trash-2\",\n            size: 25,\n            color: 'white'\n          })\n        })\n      })]\n    });\n  };\n  var ArchiveTaskSwipeItem = function ArchiveTaskSwipeItem(_ref3) {\n    var id = _ref3.id;\n    return _jsx(View, {\n      style: {\n        paddingRight: 10,\n        justifyContent: 'center',\n        alignItems: 'flex-end',\n        flex: 1,\n        backgroundColor: 'darkred'\n      },\n      children: _jsx(Pressable, {\n        onPress: function onPress() {\n          return db.transaction(function (tx) {\n            tx.executeSql('DELETE FROM tasks WHERE id = ?', [id], function (txObj, resultSet) {\n              if (resultSet.rowsAffected > 0) {\n                var existingTasks = _toConsumableArray(tasks).filter(function (c) {\n                  return c.id !== id;\n                });\n                setTasks(existingTasks);\n              }\n            }, function (txObj, error) {\n              return console.log(error);\n            });\n          });\n        },\n        children: _jsx(Feather, {\n          name: \"trash-2\",\n          size: 25,\n          color: 'white'\n        })\n      })\n    });\n  };\n  var ProgressSwipeItem = function ProgressSwipeItem(_ref4) {\n    var id = _ref4.id;\n    return _jsx(View, {\n      style: {\n        paddingRight: 10,\n        justifyContent: 'center',\n        alignItems: 'flex-end',\n        flex: 1,\n        backgroundColor: 'darkred'\n      },\n      children: _jsx(Pressable, {\n        onPress: function onPress() {\n          return db.transaction(function (tx) {\n            tx.executeSql('DELETE FROM progress WHERE id = ?', [id], function (txObj, resultSet) {\n              if (resultSet.rowsAffected > 0) {\n                var existingProgress = _toConsumableArray(progress).filter(function (c) {\n                  return c.id !== id;\n                });\n                setProgress(existingProgress);\n              }\n            }, function (txObj, error) {\n              return console.log(error);\n            });\n          });\n        },\n        children: _jsx(Feather, {\n          name: \"trash-2\",\n          size: 25,\n          color: 'white'\n        })\n      })\n    });\n  };\n  var StatusSwipeItem = function StatusSwipeItem(_ref5) {\n    var id = _ref5.id,\n      reverse = _ref5.reverse;\n    return _jsxs(View, {\n      style: {\n        flex: 1,\n        backgroundColor: 'green',\n        flexDirection: 'row'\n      },\n      children: [_jsx(View, {\n        style: {\n          width: width - 90,\n          paddingRight: 12,\n          justifyContent: 'center',\n          alignItems: 'flex-end',\n          backgroundColor: colors.primary.yellowgreen\n        },\n        children: _jsx(Pressable, {\n          onPress: function onPress() {\n            return TransferArchive(id, reverse);\n          },\n          children: _jsx(Feather, {\n            name: \"archive\",\n            size: 25,\n            color: 'white'\n          })\n        })\n      }), _jsx(View, {\n        style: {\n          justifyContent: 'center',\n          alignItems: 'center',\n          flex: 1,\n          backgroundColor: 'darkred'\n        },\n        children: _jsx(Pressable, {\n          onPress: function onPress() {\n            return db.transaction(function (tx) {\n              tx.executeSql('DELETE FROM statusrecords WHERE id = ?', [id], function (txObj, resultSet) {\n                if (resultSet.rowsAffected > 0) {\n                  var existingrecords = _toConsumableArray(statusrecords).filter(function (c) {\n                    return c.id !== id;\n                  });\n                  setStatusrecords(existingrecords);\n                }\n              }, function (txObj, error) {\n                return console.log(error);\n              });\n            });\n          },\n          children: _jsx(Feather, {\n            name: \"trash-2\",\n            size: 25,\n            color: 'white'\n          })\n        })\n      })]\n    });\n  };\n  var TabItem = function TabItem(_ref6) {\n    var item = _ref6.item,\n      index = _ref6.index,\n      selected = _ref6.selected;\n    return _jsx(Pressable, {\n      onPress: function onPress() {\n        return setSelectedTab(item.track);\n      },\n      style: [container.tab, {\n        zIndex: item.track == selectedTab ? 1 : 0,\n        bottom: item.track == selectedTab ? -1 : 0,\n        borderRightWidth: item.track == selectedTab ? 0.5 : 0,\n        borderLeftWidth: item.track == selectedTab ? 0.5 : 0,\n        borderTopWidth: item.track == selectedTab ? 0.5 : 0,\n        backgroundColor: item.color !== \"\" ? paleColor(item.color) : colors.primary.default\n      }],\n      children: _jsx(Text, {\n        style: container.tabtext,\n        children: item.track\n      })\n    });\n  };\n  return _jsx(ImageBackground, {\n    source: background,\n    resizeMode: \"cover\",\n    style: container.container,\n    children: _jsxs(SafeAreaView, {\n      style: [container.container, {\n        alignItems: 'center',\n        justifyContent: 'flex-start'\n      }],\n      children: [_jsx(View, {\n        style: [container.header, {\n          borderBottomWidth: 0\n        }],\n        children: _jsx(Text, {\n          style: {\n            fontSize: 20,\n            fontFamily: 'AvenirNextCondensed-Regular'\n          },\n          children: \"TRACKS\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: {\n          flex: 1,\n          justifyContent: 'center',\n          bottom: 90,\n          position: 'absolute',\n          right: 15\n        },\n        children: _jsx(Feather, {\n          onPress: function onPress() {\n            return setNewTrackVisible(true);\n          },\n          name: \"plus-circle\",\n          size: 40,\n          color: colors.primary.purple\n        })\n      }), _jsxs(View, {\n        style: container.block,\n        children: [_jsx(View, {\n          style: {\n            height: 29,\n            zIndex: 1,\n            bottom: -1,\n            flexDirection: 'row'\n          },\n          children: _jsx(FlatList, {\n            data: [].concat(_toConsumableArray(new Set(tracks)), [{\n              'id': 'unlisted',\n              'track': 'UNLISTED',\n              'color': colors.primary.default\n            }]),\n            renderItem: function renderItem(_ref7) {\n              var item = _ref7.item,\n                index = _ref7.index;\n              return _jsx(TabItem, {\n                item: item,\n                index: index,\n                selected: selectedTab == item.track ? -0.5 : 0\n              });\n            },\n            horizontal: true,\n            keyExtractor: function keyExtractor(item, index) {\n              return index.toString();\n            },\n            contentContainerStyle: {\n              flexDirection: 'row-reverse'\n            },\n            showsHorizontalScrollIndicator: false\n          })\n        }), _jsxs(View, {\n          style: [container.listblock, {\n            backgroundColor: paleColor(selectedTabColor)\n          }],\n          children: [_jsx(FlatList, {\n            data: sections.filter(function (c) {\n              return c.track == selectedTab;\n            }),\n            renderItem: function renderItem(_ref8) {\n              var item = _ref8.item,\n                index = _ref8.index;\n              return _jsxs(View, {\n                style: {\n                  width: 0.9 * width\n                },\n                children: [_jsxs(View, {\n                  style: [container.section, {\n                    flexDirection: 'row',\n                    justifyContent: 'flex-start',\n                    alignItems: 'center',\n                    backgroundColor: paleColor(selectedTabColor)\n                  }],\n                  children: [_jsx(Text, {\n                    children: item.section\n                  }), _jsx(Pressable, {\n                    onPress: function onPress() {\n                      return updateArrowAtIndex(index, false);\n                    },\n                    style: {\n                      display: arrow.filter(function (c) {\n                        return c.index == index;\n                      }).map(function (c) {\n                        return c.arrow;\n                      })[0] == true ? \"flex\" : \"none\",\n                      position: 'absolute',\n                      right: 10\n                    },\n                    children: _jsx(MaterialIcons, {\n                      name: \"keyboard-arrow-down\",\n                      size: 25\n                    })\n                  }), _jsx(Pressable, {\n                    onPress: function onPress() {\n                      return updateArrowAtIndex(index, true);\n                    },\n                    style: {\n                      display: arrow.filter(function (c) {\n                        return c.index == index;\n                      }).map(function (c) {\n                        return c.arrow;\n                      })[0] == false ? \"flex\" : \"none\",\n                      position: 'absolute',\n                      right: 10\n                    },\n                    children: _jsx(MaterialIcons, {\n                      name: \"keyboard-arrow-up\",\n                      size: 25\n                    })\n                  })]\n                }), _jsxs(View, {\n                  style: {\n                    display: arrow.filter(function (c) {\n                      return c.index == index;\n                    }).map(function (c) {\n                      return c.arrow;\n                    })[0] == true ? 'flex' : 'none'\n                  },\n                  children: [_jsx(SwipeListView, {\n                    data: tasks.filter(function (c) {\n                      return c.section == item.section && c.track == selectedTab && c.taskState !== 2;\n                    }),\n                    renderItem: function renderItem(_ref9) {\n                      var item = _ref9.item,\n                        index = _ref9.index;\n                      return _jsx(Task, {\n                        db: db,\n                        tasks: tasks,\n                        setTasks: setTasks,\n                        tracks: tracks,\n                        setTracks: setTracks,\n                        sections: sections,\n                        date: new Date(item.year, item.month, item.day),\n                        section: item.section,\n                        task: item.task,\n                        taskState: item.taskState,\n                        time: undefined,\n                        track: selectedTab,\n                        id: item.id,\n                        trackScreen: true,\n                        archive: false,\n                        recurring: 0,\n                        tabcolor: selectedTabColor\n                      });\n                    },\n                    renderHiddenItem: function renderHiddenItem(_ref10) {\n                      var item = _ref10.item;\n                      return _jsx(TaskSwipeItem, {\n                        id: item.id\n                      });\n                    },\n                    bounces: false,\n                    rightOpenValue: -100,\n                    disableRightSwipe: true,\n                    closeOnRowBeginSwipe: true,\n                    keyExtractor: function keyExtractor(item, index) {\n                      return index.toString();\n                    }\n                  }), _jsx(SwipeListView, {\n                    data: progress.filter(function (c) {\n                      return c.list == item.section && c.track == selectedTab && c.progress !== 100;\n                    }),\n                    renderItem: function renderItem(_ref11) {\n                      var item = _ref11.item,\n                        index = _ref11.index;\n                      return _jsx(ProgressBar, {\n                        db: db,\n                        name: item.name,\n                        progress: progress,\n                        setProgress: setProgress,\n                        value: item.progress,\n                        id: item.id,\n                        color: selectedTabColor\n                      });\n                    },\n                    renderHiddenItem: function renderHiddenItem(_ref12) {\n                      var item = _ref12.item;\n                      return _jsx(ProgressSwipeItem, {\n                        id: item.id\n                      });\n                    },\n                    bounces: false,\n                    rightOpenValue: -50,\n                    disableRightSwipe: true,\n                    closeOnRowBeginSwipe: true,\n                    keyExtractor: function keyExtractor(item, index) {\n                      return index.toString();\n                    }\n                  }), _jsx(SwipeListView, {\n                    data: statusrecords.filter(function (c) {\n                      return c.section == item.section && c.track == selectedTab && c.archive == false;\n                    }),\n                    renderItem: function renderItem(_ref13) {\n                      var item = _ref13.item,\n                        index = _ref13.index;\n                      return _jsx(Status, {\n                        db: db,\n                        name: item.name,\n                        list: item.list,\n                        statuslist: statuslist,\n                        statusrecords: statusrecords,\n                        setStatusrecords: setStatusrecords,\n                        number: item.number,\n                        id: item.id\n                      });\n                    },\n                    renderHiddenItem: function renderHiddenItem(_ref14) {\n                      var item = _ref14.item;\n                      return _jsx(StatusSwipeItem, {\n                        id: item.id,\n                        reverse: false\n                      });\n                    },\n                    bounces: false,\n                    rightOpenValue: -100,\n                    disableRightSwipe: true,\n                    closeOnRowBeginSwipe: true,\n                    keyExtractor: function keyExtractor(item, index) {\n                      return index.toString();\n                    }\n                  }), _jsxs(View, {\n                    style: {\n                      flex: 1,\n                      backgroundColor: colors.primary.white,\n                      flexDirection: 'row',\n                      justifyContent: 'flex-end'\n                    },\n                    children: [_jsx(TouchableOpacity, {\n                      onPress: function onPress() {\n                        setSelectedSection(item.section);\n                        setDeleteSectionVisible(true);\n                      },\n                      style: {\n                        justifyContent: 'center',\n                        alignItems: 'flex-end',\n                        marginVertical: 2,\n                        marginHorizontal: 2\n                      },\n                      children: _jsx(Feather, {\n                        name: \"trash-2\",\n                        size: 25,\n                        color: colors.primary.purple\n                      })\n                    }), _jsx(TouchableOpacity, {\n                      onPress: function onPress() {\n                        setNewStatusVisible(true);\n                        setSelectedSection(item.section);\n                      },\n                      style: {\n                        justifyContent: 'center',\n                        alignItems: 'flex-end',\n                        marginVertical: 2,\n                        marginHorizontal: 2\n                      },\n                      children: _jsx(Entypo, {\n                        name: \"progress-full\",\n                        size: 25,\n                        color: colors.primary.purple\n                      })\n                    }), _jsx(TouchableOpacity, {\n                      onPress: function onPress() {\n                        setNewProgressVisible(true);\n                        setSelectedSection(item.section);\n                      },\n                      style: {\n                        justifyContent: 'center',\n                        alignItems: 'flex-end',\n                        marginVertical: 2,\n                        marginHorizontal: 2\n                      },\n                      children: _jsx(Entypo, {\n                        name: \"progress-two\",\n                        size: 25,\n                        color: colors.primary.purple\n                      })\n                    }), _jsx(TouchableOpacity, {\n                      onPress: function onPress() {\n                        setNewTaskVisible(true);\n                        setSelectedSection(item.section);\n                      },\n                      style: {\n                        justifyContent: 'center',\n                        alignItems: 'flex-end',\n                        marginVertical: 2,\n                        marginHorizontal: 2\n                      },\n                      children: _jsx(Feather, {\n                        name: \"check-square\",\n                        size: 25,\n                        color: colors.primary.purple\n                      })\n                    })]\n                  })]\n                }), _jsx(NewTask, {\n                  addModalVisible: newTaskVisible,\n                  setAddModalVisible: setNewTaskVisible,\n                  db: db,\n                  tasks: tasks,\n                  setTasks: setTasks,\n                  tracks: tracks,\n                  track: selectedTab,\n                  section: selectedSection,\n                  pageDate: undefined,\n                  tracksScreen: true,\n                  monthly: false\n                }), _jsx(NewProgress, {\n                  addModalVisible: newProgressVisible,\n                  setAddModalVisible: setNewProgressVisible,\n                  db: db,\n                  progress: progress,\n                  setProgress: setProgress,\n                  track: selectedTab,\n                  section: selectedSection\n                }), _jsx(NewStatus, {\n                  newStatusVisible: newStatusVisible,\n                  setNewStatusVisible: setNewStatusVisible,\n                  db: db,\n                  statuslist: statuslist,\n                  setStatuslist: setStatuslist,\n                  statusrecords: statusrecords,\n                  setStatusrecords: setStatusrecords,\n                  selectedTab: selectedTab,\n                  selectedSection: selectedSection\n                })]\n              });\n            },\n            keyExtractor: function keyExtractor(item, index) {\n              return index.toString();\n            },\n            contentContainerStyle: {\n              width: \"100%\"\n            },\n            showsHorizontalScrollIndicator: false,\n            bounces: false\n          }), _jsx(NewSection, {\n            db: db,\n            sections: sections,\n            setSections: setSections,\n            track: selectedTab,\n            newSectionVisible: newSectionVisible,\n            setNewSectionVisible: setNewSectionVisible\n          }), _jsx(NewTrack, {\n            db: db,\n            tracks: tracks,\n            setTracks: setTracks,\n            newTrackVisible: newTrackVisible,\n            setNewTrackVisible: setNewTrackVisible,\n            setSelectedTab: setSelectedTab,\n            setSelectedTabColor: setSelectedTabColor\n          }), _jsxs(View, {\n            style: {\n              width: '100%'\n            },\n            children: [_jsxs(View, {\n              style: [container.section, {\n                flexDirection: 'row',\n                justifyContent: 'flex-start',\n                alignItems: 'center',\n                borderBottomLeftRadius: 20,\n                borderBottomRightRadius: 20,\n                backgroundColor: paleColor(selectedTabColor)\n              }],\n              children: [_jsx(Text, {\n                children: \"ARCHIVES\"\n              }), _jsx(Pressable, {\n                onPress: function onPress() {\n                  return setShowArchive(true);\n                },\n                style: {\n                  display: showArchive == false ? \"flex\" : \"none\",\n                  position: 'absolute',\n                  right: 10\n                },\n                children: _jsx(MaterialIcons, {\n                  name: \"keyboard-arrow-up\",\n                  size: 25\n                })\n              }), _jsx(Pressable, {\n                onPress: function onPress() {\n                  return setShowArchive(false);\n                },\n                style: {\n                  display: showArchive == true ? \"flex\" : \"none\",\n                  position: 'absolute',\n                  right: 10\n                },\n                children: _jsx(MaterialIcons, {\n                  name: \"keyboard-arrow-down\",\n                  size: 25\n                })\n              })]\n            }), _jsxs(View, {\n              style: {\n                display: showArchive == true ? \"flex\" : \"none\",\n                maxHeight: 200,\n                justifyContent: 'flex-start'\n              },\n              children: [_jsx(SwipeListView, {\n                data: tasks.filter(function (c) {\n                  return c.track == selectedTab && c.taskState == 2;\n                }),\n                renderItem: function renderItem(_ref15) {\n                  var item = _ref15.item,\n                    index = _ref15.index;\n                  return _jsx(Task, {\n                    db: db,\n                    tasks: tasks,\n                    setTasks: setTasks,\n                    tracks: tracks,\n                    setTracks: setTracks,\n                    sections: sections,\n                    date: undefined,\n                    section: item.section,\n                    task: item.task,\n                    taskState: item.taskState,\n                    time: undefined,\n                    track: selectedTab,\n                    id: item.id,\n                    trackScreen: false,\n                    archive: true\n                  });\n                },\n                renderHiddenItem: function renderHiddenItem(_ref16) {\n                  var item = _ref16.item;\n                  return _jsx(ArchiveTaskSwipeItem, {\n                    id: item.id\n                  });\n                },\n                bounces: false,\n                rightOpenValue: -50,\n                disableRightSwipe: true,\n                closeOnRowBeginSwipe: true,\n                keyExtractor: function keyExtractor(item, index) {\n                  return index.toString();\n                }\n              }), _jsx(SwipeListView, {\n                data: progress.filter(function (c) {\n                  return c.track == selectedTab && c.progress == 100;\n                }),\n                renderItem: function renderItem(_ref17) {\n                  var item = _ref17.item,\n                    index = _ref17.index;\n                  return _jsxs(View, {\n                    style: {\n                      height: 40,\n                      width: width * 0.9,\n                      backgroundColor: colors.primary.white,\n                      flexDirection: 'row'\n                    },\n                    children: [_jsx(View, {\n                      style: {\n                        width: width * 0.9 - 140,\n                        justifyContent: 'center',\n                        paddingLeft: 10\n                      },\n                      children: _jsx(Text, {\n                        children: item.name\n                      })\n                    }), _jsx(FlatList, {\n                      horizontal: true,\n                      data: [{\n                        'name': item.name,\n                        'rate': 1\n                      }, {\n                        'name': item.name,\n                        'rate': 2\n                      }, {\n                        'name': item.name,\n                        'rate': 3\n                      }, {\n                        'name': item.name,\n                        'rate': 4\n                      }, {\n                        'name': item.name,\n                        'rate': 5\n                      }],\n                      renderItem: function renderItem(_ref18) {\n                        var item = _ref18.item,\n                          index = _ref18.index;\n                        return _jsxs(Pressable, {\n                          onPress: function onPress() {\n                            var existingprogress = _toConsumableArray(progress);\n                            var id = progress.filter(function (c) {\n                              return c.name == item.name && c.track == selectedTab;\n                            }).map(function (c) {\n                              return c.id;\n                            })[0];\n                            var progressIndex = progress.findIndex(function (c) {\n                              return c.name == item.name && c.track == selectedTab;\n                            });\n                            db.transaction(function (tx) {\n                              tx.executeSql('UPDATE progress SET rate = ? WHERE id=?', [item.rate, id], function (txObj, resultSet) {\n                                if (resultSet.rowsAffected > 0) {\n                                  existingprogress[progressIndex].rate = item.rate;\n                                  setProgress(existingprogress);\n                                }\n                              }, function (txObj, error) {\n                                return console.log('Error updating data', error);\n                              });\n                            });\n                          },\n                          style: {\n                            justifyContent: 'center'\n                          },\n                          children: [_jsx(Ionicons, {\n                            name: \"star\",\n                            size: 25,\n                            color: item.rate <= progress.filter(function (c) {\n                              return c.track == selectedTab && c.name == item.name;\n                            }).map(function (c) {\n                              return c.rate;\n                            })[0] ? selectedTabColor : 'transparent'\n                          }), _jsx(View, {\n                            style: {\n                              position: 'absolute'\n                            },\n                            children: _jsx(Ionicons, {\n                              name: \"star-outline\",\n                              size: 25\n                            })\n                          })]\n                        });\n                      },\n                      contentContainerStyle: {\n                        width: 130\n                      },\n                      scrollEnabled: false\n                    })]\n                  });\n                },\n                renderHiddenItem: function renderHiddenItem(_ref19) {\n                  var item = _ref19.item;\n                  return _jsx(ProgressSwipeItem, {\n                    id: item.id\n                  });\n                },\n                bounces: false,\n                rightOpenValue: -50,\n                disableRightSwipe: true,\n                closeOnRowBeginSwipe: true,\n                keyExtractor: function keyExtractor(item, index) {\n                  return index.toString();\n                }\n              }), _jsx(SwipeListView, {\n                data: statusrecords.filter(function (c) {\n                  return c.track == selectedTab && c.archive == true;\n                }),\n                renderItem: function renderItem(_ref20) {\n                  var item = _ref20.item,\n                    index = _ref20.index;\n                  return _jsx(Status, {\n                    db: db,\n                    name: item.name,\n                    list: item.list,\n                    statuslist: statuslist,\n                    statusrecords: statusrecords,\n                    setStatusrecords: setStatusrecords,\n                    number: item.number,\n                    id: item.id\n                  });\n                },\n                renderHiddenItem: function renderHiddenItem(_ref21) {\n                  var item = _ref21.item,\n                    index = _ref21.index;\n                  return _jsx(StatusSwipeItem, {\n                    id: item.id,\n                    reverse: true\n                  });\n                },\n                bounces: false,\n                rightOpenValue: -100,\n                disableRightSwipe: true,\n                closeOnRowBeginSwipe: true,\n                keyExtractor: function keyExtractor(item, index) {\n                  return index.toString();\n                }\n              })]\n            }), _jsx(View, {\n              style: {\n                width: '100%',\n                borderBottomLeftRadius: 20,\n                borderBottomRightRadius: 20\n              },\n              children: _jsxs(View, {\n                style: {\n                  display: selectedTab == undefined ? \"none\" : \"flex\",\n                  width: \"100%\",\n                  height: 35,\n                  flexDirection: 'row',\n                  justifyContent: 'flex-end',\n                  alignItems: 'flex-end'\n                },\n                children: [_jsx(View, {\n                  style: {\n                    display: selectedTab == 'UNLISTED' ? 'none' : 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'flex-end',\n                    marginVertical: 2,\n                    marginHorizontal: 2\n                  },\n                  children: _jsx(TouchableOpacity, {\n                    children: _jsx(Feather, {\n                      onPress: function onPress() {\n                        return setDeleteTrackVisible(true);\n                      },\n                      name: \"trash-2\",\n                      size: 30,\n                      color: colors.primary.purple\n                    })\n                  })\n                }), _jsx(View, {\n                  style: {\n                    justifyContent: 'center',\n                    alignItems: 'flex-end',\n                    marginVertical: 2,\n                    marginHorizontal: 2\n                  },\n                  children: _jsx(TouchableOpacity, {\n                    onPress: function onPress() {\n                      return setNewSectionVisible(true);\n                    },\n                    children: _jsx(Feather, {\n                      name: \"plus-circle\",\n                      size: 30,\n                      color: colors.primary.purple\n                    })\n                  })\n                }), _jsx(DeleteTrack, {\n                  deleteTrackVisible: deleteTrackVisible,\n                  setDeleteTrackVisible: setDeleteTrackVisible,\n                  tracks: tracks,\n                  setTracks: setTracks,\n                  db: db,\n                  setSelectedTab: setSelectedTab,\n                  selectedTab: selectedTab,\n                  sections: sections,\n                  setSections: setSections,\n                  tasks: tasks,\n                  setTasks: setTasks\n                }), _jsx(DeleteSection, {\n                  deleteSectionVisible: deleteSectionVisible,\n                  setDeleteSectionVisible: setDeleteSectionVisible,\n                  db: db,\n                  selectedTab: selectedTab,\n                  setSelectedTab: setSelectedTab,\n                  sections: sections,\n                  setSections: setSections,\n                  tasks: tasks,\n                  setTasks: setTasks,\n                  selectedSection: selectedSection,\n                  setSelectedSection: setSelectedSection,\n                  progress: progress,\n                  setProgress: setProgress,\n                  statusrecords: statusrecords,\n                  setStatusrecords: setStatusrecords\n                })]\n              })\n            })]\n          })]\n        })]\n      })]\n    })\n  });\n}\nexport default Tracks;","map":{"version":3,"names":["colors","container","paleColor","useEffect","useState","Feather","MaterialIcons","Entypo","Ionicons","NewSection","NewTask","Task","SwipeListView","ProgressBar","NewProgress","NewTrack","NewStatus","Status","DeleteTrack","DeleteSection","background","jsx","_jsx","jsxs","_jsxs","width","Dimensions","get","Tracks","_ref","tracks","setTracks","db","sections","setSections","tasks","setTasks","progress","setProgress","statuslist","setStatuslist","statusrecords","setStatusrecords","settings","today","Date","thisYear","getFullYear","thisMonth","getMonth","day","getDate","_useState","_useState2","_slicedToArray","selectedTab","setSelectedTab","_useState3","undefined","primary","default","filter","c","track","map","color","_useState4","selectedTabColor","setSelectedTabColor","_useState5","_useState6","newSectionVisible","setNewSectionVisible","_useState7","_useState8","newTrackVisible","setNewTrackVisible","_useState9","_useState10","newTaskVisible","setNewTaskVisible","_useState11","_useState12","deleteTrackVisible","setDeleteTrackVisible","_useState13","_useState14","deleteSectionVisible","setDeleteSectionVisible","_useState15","_useState16","newProgressVisible","setNewProgressVisible","_useState17","_useState18","newStatusVisible","setNewStatusVisible","_useState19","_useState20","selectedSection","setSelectedSection","_useState21","_useState22","showSection","setShowSection","_useState23","_useState24","showArchive","setShowArchive","arrowArray","sectionLength","length","i","push","_useState25","_useState26","arrow","setArrow","updateArrowAtIndex","index","newArrowValue","prevArrowArray","item","_objectSpread","section","TransferDaily","id","existingTasks","_toConsumableArray","toTransfer","findIndex","transaction","tx","executeSql","txObj","resultSet","rowsAffected","year","month","error","console","log","TransferArchive","reverse","existingrecords","archive","TaskSwipeItem","_ref2","View","style","flex","backgroundColor","flexDirection","children","paddingRight","justifyContent","alignItems","yellowgreen","Pressable","onPress","name","size","ArchiveTaskSwipeItem","_ref3","ProgressSwipeItem","_ref4","existingProgress","StatusSwipeItem","_ref5","TabItem","_ref6","selected","tab","zIndex","bottom","borderRightWidth","borderLeftWidth","borderTopWidth","Text","tabtext","ImageBackground","source","resizeMode","SafeAreaView","header","borderBottomWidth","fontSize","fontFamily","TouchableOpacity","position","right","purple","block","height","FlatList","data","concat","Set","renderItem","_ref7","horizontal","keyExtractor","toString","contentContainerStyle","showsHorizontalScrollIndicator","listblock","_ref8","display","taskState","_ref9","date","task","time","trackScreen","recurring","tabcolor","renderHiddenItem","_ref10","bounces","rightOpenValue","disableRightSwipe","closeOnRowBeginSwipe","list","_ref11","value","_ref12","_ref13","number","_ref14","white","marginVertical","marginHorizontal","addModalVisible","setAddModalVisible","pageDate","tracksScreen","monthly","borderBottomLeftRadius","borderBottomRightRadius","maxHeight","_ref15","_ref16","_ref17","paddingLeft","_ref18","existingprogress","progressIndex","rate","scrollEnabled","_ref19","_ref20","_ref21"],"sources":["/Users/elodie/Documents/GIT/todo/screens/Tracks.tsx"],"sourcesContent":["import { ImageBackground, View, Text, Button, TouchableOpacity, Dimensions, StyleSheet, Pressable, SafeAreaView, FlatList } from 'react-native';\nimport { colors, container, paleColor } from '../styles';\nimport { useEffect, useState } from 'react';\nimport { Feather, MaterialIcons, Entypo, Ionicons} from '@expo/vector-icons';\nimport NewSection from '../modal/NewSection';\nimport NewTask from '../modal/NewTask';\nimport Task from '../components/Task';\nimport { SwipeListView } from 'react-native-swipe-list-view';\nimport ProgressBar from '../components/ProgressBar';\nimport NewProgress from '../modal/NewProgress';\nimport NewTrack from '../modal/NewTrack';\nimport NewStatus from '../modal/NewStatus';\nimport Status from '../components/Status';\nimport DeleteTrack from '../modal/DeleteTrack';\nimport DeleteSection from '../modal/DeleteSection';\nimport background from '../assets/images/design/background.jpg';\n\nconst width = Dimensions.get('window').width;\n\nfunction Tracks({tracks, setTracks, db, sections, setSections, tasks, setTasks, \n    progress, setProgress, statuslist, setStatuslist, statusrecords, setStatusrecords, settings}) {\n\n    const today= new Date();\n    const thisYear = today.getFullYear();\n    const thisMonth = today.getMonth();\n    const day = today.getDate();\n    const [selectedTab, setSelectedTab] = useState('UNLISTED');\n    const [selectedTabColor, setSelectedTabColor] = useState(selectedTab==undefined? colors.primary.default:tracks.filter(c=>c.track==selectedTab).map(c=>c.color)[0]);\n    const [newSectionVisible, setNewSectionVisible] = useState(false);\n    const [newTrackVisible, setNewTrackVisible] = useState(false);\n    const [newTaskVisible, setNewTaskVisible] = useState(false);\n    const [deleteTrackVisible, setDeleteTrackVisible] = useState(false);\n    const [deleteSectionVisible, setDeleteSectionVisible] = useState(false);\n    const [newProgressVisible, setNewProgressVisible] = useState(false);\n    const [newStatusVisible, setNewStatusVisible] = useState(false);\n    const [selectedSection, setSelectedSection] = useState('');\n    const [showSection, setShowSection] = useState(true);\n    const [showArchive, setShowArchive] = useState(false);\n\n    const arrowArray = () => {\n        let arrowArray = [];\n        const sectionLength = sections.filter(c=>c.track==selectedTab).length;\n        for (let i=0; i<sectionLength; i++) {\n            arrowArray.push({'index':i, 'arrow':true});\n        }\n        return arrowArray;\n    }\n    const [arrow, setArrow] = useState(arrowArray());\n\n    const updateArrowAtIndex = (index, newArrowValue) => {\n        setArrow(prevArrowArray => {\n            return prevArrowArray.map(item => {\n                if (item.index === index) {\n                    return { ...item, arrow: newArrowValue };\n                }\n                return item;\n            });\n        });\n    };\n\n    useEffect(() => {\n        setArrow(arrowArray());\n        setSelectedTabColor(selectedTab==undefined? colors.primary.default:tracks.filter(c=>c.track==selectedTab).map(c=>c.color)[0]);\n        setSelectedSection(sections.filter(c=>c.track==selectedTab).map(c=>c.section)[0]);\n    }, [selectedTab,tracks]);\n\n    const TransferDaily = (id) => {\n        let existingTasks = [...tasks];\n        const toTransfer = existingTasks.map(c=>c.id).findIndex(c=>c==id);\n        db.transaction(tx=> {\n            tx.executeSql('UPDATE tasks SET year = ?, month=?, day=? WHERE id= ?', [thisYear,thisMonth,day, id],\n              (txObj, resultSet) => {\n                if (resultSet.rowsAffected > 0) {\n                  existingTasks[toTransfer].year = thisYear;\n                  existingTasks[toTransfer].month = thisMonth;\n                  existingTasks[toTransfer].day = day;\n                  setTasks(existingTasks);\n                }\n              },\n              (txObj, error) => console.log('Error updating data', error)\n            );\n        });\n    }\n\n    const TransferArchive = (id,reverse) => {\n        let existingrecords = [...statusrecords];\n        const toTransfer = existingrecords.map(c=>c.id).findIndex(c=>c==id);\n        db.transaction(tx=> {\n            tx.executeSql('UPDATE statusrecords SET archive=? WHERE id= ?', [reverse?false:true, id],\n              (txObj, resultSet) => {\n                if (resultSet.rowsAffected > 0) {\n                  existingrecords[toTransfer].archive = reverse?false:true;\n                  setStatusrecords(existingrecords);\n                }\n              },\n              (txObj, error) => console.log('Error updating data', error)\n            );\n        });\n    }\n\n    const TaskSwipeItem = ({ id }) => (\n        <View style={{ flex: 1, backgroundColor: 'green', flexDirection: 'row' }}>\n            <View style={{ width: 0.9*width -50, paddingRight: 12, justifyContent: 'center', alignItems: 'flex-end', backgroundColor: colors.primary.yellowgreen }}>\n                <Pressable onPress={()=>TransferDaily(id)}>\n                    <Feather name=\"calendar\" size={25} color={'white'} />\n                </Pressable>\n            </View>\n            <View style={{ justifyContent: 'center', alignItems: 'center', flex: 1, backgroundColor: 'darkred' }}>\n                <Pressable onPress={() => \n                db.transaction(tx => {\n                tx.executeSql('DELETE FROM tasks WHERE id = ?', [id],\n                    (txObj, resultSet) => {\n                    if (resultSet.rowsAffected > 0) {\n                        let existingTasks = [...tasks].filter(c => c.id !== id);\n                        setTasks(existingTasks);\n                    }\n                    },\n                    (txObj, error) => console.log(error)\n                );\n                })}>\n                    <Feather name=\"trash-2\" size={25} color={'white'} />\n                </Pressable>\n            </View>\n        </View>\n      );\n\n    const ArchiveTaskSwipeItem = ({ id }) => (\n            <View style={{ paddingRight:10, justifyContent: 'center', alignItems: 'flex-end', flex: 1, backgroundColor: 'darkred' }}>\n                <Pressable onPress={() => \n                db.transaction(tx => {\n                tx.executeSql('DELETE FROM tasks WHERE id = ?', [id],\n                    (txObj, resultSet) => {\n                    if (resultSet.rowsAffected > 0) {\n                        let existingTasks = [...tasks].filter(c => c.id !== id);\n                        setTasks(existingTasks);\n                    }\n                    },\n                    (txObj, error) => console.log(error)\n                );\n                })}>\n                    <Feather name=\"trash-2\" size={25} color={'white'} />\n                </Pressable>\n            </View>\n    );      \n\n    const ProgressSwipeItem = ({ id }) => (\n        <View style={{ paddingRight:10, justifyContent: 'center', alignItems: 'flex-end', flex: 1, backgroundColor: 'darkred' }}>\n            <Pressable onPress={() => \n                db.transaction(tx => {\n                    tx.executeSql('DELETE FROM progress WHERE id = ?', [id],\n                        (txObj, resultSet) => {\n                        if (resultSet.rowsAffected > 0) {\n                            let existingProgress = [...progress].filter(c => c.id !== id);\n                            setProgress(existingProgress);\n                        }\n                        },\n                        (txObj, error) => console.log(error)\n                    );\n                })}>\n                <Feather name=\"trash-2\" size={25} color={'white'} />\n            </Pressable>\n        </View>\n    );\n\n    const StatusSwipeItem = ({ id, reverse }) => (\n        <View style={{ flex: 1, backgroundColor: 'green', flexDirection: 'row' }}>\n            <View style={{ width: width - 90, paddingRight: 12, justifyContent: 'center', alignItems: 'flex-end', backgroundColor: colors.primary.yellowgreen }}>\n                <Pressable onPress={()=>TransferArchive(id,reverse)}>\n                    <Feather name=\"archive\" size={25} color={'white'} />\n                </Pressable>\n            </View>\n            <View style={{ justifyContent: 'center', alignItems: 'center', flex: 1, backgroundColor: 'darkred' }}>\n                <Pressable onPress={() => \n                db.transaction(tx => {\n                tx.executeSql('DELETE FROM statusrecords WHERE id = ?', [id],\n                    (txObj, resultSet) => {\n                    if (resultSet.rowsAffected > 0) {\n                        let existingrecords = [...statusrecords].filter(c => c.id !== id);\n                        setStatusrecords(existingrecords);\n                    }\n                    },\n                    (txObj, error) => console.log(error)\n                );\n                })}>\n                    <Feather name=\"trash-2\" size={25} color={'white'} />\n                </Pressable>\n            </View>\n        </View>\n      );\n\n    const TabItem = ({item,index, selected}) => {\n        return (\n            <Pressable onPress={()=>setSelectedTab(item.track)} style={[container.tab,{zIndex:item.track==selectedTab?1:0,bottom:item.track==selectedTab? -1:0,borderRightWidth:item.track==selectedTab? 0.5:0,borderLeftWidth:item.track==selectedTab? 0.5:0,borderTopWidth:item.track==selectedTab? 0.5:0,backgroundColor:item.color!==\"\"?paleColor(item.color):colors.primary.default}]}>\n                <Text style={container.tabtext}>\n                    {item.track}\n                </Text>\n          </Pressable>\n        );\n    };\n\n\n    return (\n        <ImageBackground source={background} resizeMode=\"cover\" style={container.container}>\n            <SafeAreaView style={[container.container,{alignItems:'center',justifyContent:'flex-start'}]}>\n                <View style={[container.header,{borderBottomWidth:0}]}>\n                    <Text style={{fontSize:20, fontFamily:'AvenirNextCondensed-Regular'}}>TRACKS</Text>\n                </View>\n                <TouchableOpacity style={{flex:1,justifyContent: 'center', bottom:90, position: 'absolute', right: 15}}>\n                    <Feather onPress={()=>setNewTrackVisible(true)} name='plus-circle' size={40} color={colors.primary.purple}  />\n                </TouchableOpacity> \n                <View style={container.block}>\n                    <View style={{height:29, zIndex:1, bottom:-1, flexDirection:'row'}}>\n                        <FlatList\n                            data={[... new Set(tracks),{'id':'unlisted','track':'UNLISTED','color':colors.primary.default}]}\n                            renderItem={({item,index}) =>  <TabItem item={item} index={index} selected={selectedTab==item.track?-0.5:0} />}\n                            horizontal={true}\n                            keyExtractor= {(item,index) => index.toString()}\n                            contentContainerStyle={{flexDirection:'row-reverse'}}\n                            showsHorizontalScrollIndicator={false}\n                        />\n                    </View>\n                    <View style={[container.listblock,{backgroundColor: paleColor(selectedTabColor),}]}>  \n                        <FlatList\n                            data={sections.filter(c=>c.track==selectedTab)} \n                            renderItem={({item,index}) => \n                            <View style={{width:0.9*width}}>\n                                <View style={[container.section,{flexDirection: 'row', justifyContent:'flex-start', alignItems: 'center', backgroundColor: paleColor(selectedTabColor)}]}> \n                                    <Text>{item.section}</Text>\n                                    <Pressable onPress={()=>updateArrowAtIndex(index,false)} style={{display:arrow.filter(c=>c.index==index).map(c=>c.arrow)[0]==true?\"flex\":\"none\",position:'absolute',right:10}}>\n                                        <MaterialIcons name=\"keyboard-arrow-down\" size={25}/>\n                                    </Pressable>\n                                    <Pressable onPress={()=>updateArrowAtIndex(index,true)}  style={{display:arrow.filter(c=>c.index==index).map(c=>c.arrow)[0]==false?\"flex\":\"none\",position:'absolute',right:10}}>\n                                        <MaterialIcons name=\"keyboard-arrow-up\" size={25}/>\n                                    </Pressable>\n                                </View>\n                                <View style={{display: arrow.filter(c=>c.index==index).map(c=>c.arrow)[0]==true?'flex':'none'}}>\n                                    <SwipeListView\n                                        data={tasks.filter(c=>(c.section==item.section && c.track==selectedTab && c.taskState!==2 ))}\n                                        renderItem={({item,index}) =>\n                                        <Task db={db} tasks={tasks} setTasks={setTasks} tracks={tracks} setTracks={setTracks} \n                                        sections={sections} date={new Date(item.year,item.month,item.day)} section={item.section} task={item.task} \n                                        taskState={item.taskState} time={undefined} track={selectedTab} id={item.id} trackScreen={true} archive={false} recurring={0} tabcolor={selectedTabColor}/>\n                                        }\n                                        renderHiddenItem={({ item }) => <TaskSwipeItem id={item.id} />} \n                                        bounces={false} \n                                        rightOpenValue={-100}\n                                        disableRightSwipe={true}\n                                        closeOnRowBeginSwipe={true}\n                                        keyExtractor= {(item,index) => index.toString()}\n                                    />\n                                    <SwipeListView\n                                        data={progress.filter(c=>(c.list==item.section && c.track==selectedTab && c.progress!==100))}\n                                        renderItem={({item,index}) =>\n                                        <ProgressBar db={db} name={item.name} progress={progress} setProgress={setProgress} value={item.progress} id={item.id} color={selectedTabColor}/>\n                                        }\n                                        renderHiddenItem={({ item }) => <ProgressSwipeItem id={item.id} />} \n                                        bounces={false} \n                                        rightOpenValue={-50}\n                                        disableRightSwipe={true}\n                                        closeOnRowBeginSwipe={true}\n                                        keyExtractor= {(item,index) => index.toString()}\n                                    />\n                                    <SwipeListView\n                                        data={statusrecords.filter(c=>(c.section==item.section && c.track==selectedTab && c.archive==false))}\n                                        renderItem={({item,index}) =>\n                                        <Status db={db} name={item.name} list={item.list} statuslist={statuslist} statusrecords={statusrecords} setStatusrecords={setStatusrecords} number={item.number} id={item.id}/>\n                                        }\n                                        renderHiddenItem={({ item }) => <StatusSwipeItem id={item.id} reverse={false}/>} \n                                        bounces={false} \n                                        rightOpenValue={-100}\n                                        disableRightSwipe={true}\n                                        closeOnRowBeginSwipe={true}\n                                        keyExtractor= {(item,index) => index.toString()}\n                                    />\n                                    <View style={{flex:1, backgroundColor: colors.primary.white, flexDirection:'row', justifyContent:'flex-end'}}>\n                                        <TouchableOpacity onPress={()=>{setSelectedSection(item.section);setDeleteSectionVisible(true)}} style={{justifyContent: 'center', alignItems:'flex-end',marginVertical:2, marginHorizontal:2}}>\n                                            <Feather name='trash-2' size={25} color={colors.primary.purple}  />\n                                        </TouchableOpacity>  \n                                        <TouchableOpacity onPress={()=>{setNewStatusVisible(true);setSelectedSection(item.section)}} style={{justifyContent: 'center', alignItems:'flex-end',marginVertical:2, marginHorizontal:2}}>\n                                            <Entypo name=\"progress-full\" size={25} color={colors.primary.purple}  />\n                                        </TouchableOpacity>\n                                        <TouchableOpacity onPress={()=>{setNewProgressVisible(true);setSelectedSection(item.section)}} style={{justifyContent: 'center', alignItems:'flex-end',marginVertical:2, marginHorizontal:2}}>\n                                            <Entypo name=\"progress-two\" size={25} color={colors.primary.purple}  />\n                                        </TouchableOpacity>\n                                        <TouchableOpacity onPress={()=>{setNewTaskVisible(true);setSelectedSection(item.section)}} style={{justifyContent: 'center', alignItems:'flex-end',marginVertical:2, marginHorizontal:2}}>\n                                            <Feather name='check-square' size={25} color={colors.primary.purple}  />\n                                        </TouchableOpacity> \n                                    </View>\n                                </View>\n                                <NewTask addModalVisible={newTaskVisible} setAddModalVisible={setNewTaskVisible} db={db} tasks={tasks} setTasks={setTasks} tracks={tracks} track={selectedTab} section={selectedSection} pageDate={undefined} tracksScreen={true} monthly={false}/>\n                                <NewProgress addModalVisible={newProgressVisible} setAddModalVisible={setNewProgressVisible} db={db} progress={progress} setProgress={setProgress} track={selectedTab} section={selectedSection}/>\n                                <NewStatus newStatusVisible={newStatusVisible} setNewStatusVisible={setNewStatusVisible} db={db} statuslist={statuslist} setStatuslist={setStatuslist} statusrecords={statusrecords} setStatusrecords={setStatusrecords} selectedTab={selectedTab} selectedSection={selectedSection}/>\n                            </View>\n                            }\n                            keyExtractor= {(item,index) => index.toString()}\n                            contentContainerStyle={{width:\"100%\"}}\n                            showsHorizontalScrollIndicator={false}\n                            bounces={false}\n                        />\n                        <NewSection db={db} sections={sections} setSections={setSections} track={selectedTab} newSectionVisible={newSectionVisible} setNewSectionVisible={setNewSectionVisible}/>\n                        <NewTrack db={db} tracks={tracks} setTracks={setTracks} newTrackVisible={newTrackVisible} setNewTrackVisible={setNewTrackVisible} setSelectedTab={setSelectedTab} setSelectedTabColor={setSelectedTabColor}/>\n                        <View style={{width:'100%'}}>\n                            <View style={[container.section,{flexDirection: 'row', justifyContent:'flex-start', alignItems: 'center', borderBottomLeftRadius:20, borderBottomRightRadius:20, backgroundColor: paleColor(selectedTabColor)}]}> \n                                <Text>ARCHIVES</Text>\n                                <Pressable onPress={()=>setShowArchive(true)} style={{display:showArchive==false?\"flex\":\"none\",position:'absolute',right:10}}>\n                                    <MaterialIcons name=\"keyboard-arrow-up\" size={25}/>\n                                </Pressable>\n                                <Pressable onPress={()=>setShowArchive(false)}  style={{display:showArchive==true?\"flex\":\"none\",position:'absolute',right:10}}>\n                                    <MaterialIcons name=\"keyboard-arrow-down\" size={25}/>\n                                </Pressable>\n                            </View>\n                            <View style={{display: showArchive==true?\"flex\":\"none\",maxHeight:200,justifyContent:'flex-start'}}>\n                                <SwipeListView\n                                        data={tasks.filter(c=>(c.track==selectedTab && c.taskState==2 ))}\n                                        renderItem={({item,index}) =>\n                                        <Task db={db} tasks={tasks} setTasks={setTasks} tracks={tracks} setTracks={setTracks} \n                                        sections={sections} date={undefined} section={item.section} task={item.task} \n                                        taskState={item.taskState} time={undefined} track={selectedTab} id={item.id} trackScreen={false} archive={true}/>\n                                        }\n                                        renderHiddenItem={({ item }) => <ArchiveTaskSwipeItem id={item.id} />} \n                                        bounces={false} \n                                        rightOpenValue={-50}\n                                        disableRightSwipe={true}\n                                        closeOnRowBeginSwipe={true}\n                                        keyExtractor= {(item,index) => index.toString()}\n                                />\n                                <SwipeListView\n                                        data={progress.filter(c=>(c.track==selectedTab && c.progress==100))}\n                                        renderItem={({item,index}) =>\n                                            <View style={{height:40,width:width*0.9,backgroundColor:colors.primary.white,flexDirection:'row'}}>\n                                                <View style={{width:width*0.9-140,justifyContent:'center',paddingLeft:10}}>\n                                                    <Text>{item.name}</Text>\n                                                </View>\n                                                <FlatList\n                                                horizontal\n                                                data={[{'name':item.name,'rate':1},{'name':item.name,'rate':2},{'name':item.name,'rate':3},{'name':item.name,'rate':4},{'name':item.name,'rate':5}]}\n                                                renderItem={({ item,index }) => \n                                                    <Pressable onPress={()=>{\n                                                        let existingprogress = [...progress]; \n                                                        const id=progress.filter(c=>(c.name==item.name && c.track==selectedTab)).map(c=>c.id)[0];\n                                                        const progressIndex = progress.findIndex(c=>(c.name==item.name && c.track==selectedTab));\n                                                        db.transaction(tx=> {\n                                                            tx.executeSql('UPDATE progress SET rate = ? WHERE id=?', [item.rate,id],\n                                                                (txObj, resultSet) => {\n                                                                if (resultSet.rowsAffected > 0) {\n                                                                    existingprogress[progressIndex].rate = item.rate;\n                                                                    setProgress(existingprogress);\n                                                                }\n                                                                },\n                                                                (txObj, error) => console.log('Error updating data', error)\n                                                            );\n                                                        });\n                                                    }} style={{justifyContent:'center'}}>\n                                                        <Ionicons name=\"star\" size={25} color={item.rate<=progress.filter(c=>(c.track==selectedTab&&c.name==item.name)).map(c=>c.rate)[0]?selectedTabColor:'transparent'}/>\n                                                        <View style={{position:'absolute'}}>\n                                                            <Ionicons name=\"star-outline\" size={25} />\n                                                        </View>\n                                                    </Pressable>\n                                                }\n                                                contentContainerStyle={{width:130}}\n                                                scrollEnabled={false}\n                                                />\n                                            </View>\n                                        }\n                                        renderHiddenItem={({ item }) => <ProgressSwipeItem id={item.id} />} \n                                        bounces={false} \n                                        rightOpenValue={-50}\n                                        disableRightSwipe={true}\n                                        closeOnRowBeginSwipe={true}\n                                        keyExtractor= {(item,index) => index.toString()}\n                                />\n                                <SwipeListView\n                                    data={statusrecords.filter(c=>(c.track==selectedTab && c.archive==true))}\n                                    renderItem={({item,index}) =>\n                                    <Status db={db} name={item.name} list={item.list} statuslist={statuslist} statusrecords={statusrecords} setStatusrecords={setStatusrecords} number={item.number} id={item.id}/>\n                                    }\n                                    renderHiddenItem={({ item,index }) => <StatusSwipeItem id={item.id} reverse={true}/>} \n                                    bounces={false} \n                                    rightOpenValue={-100}\n                                    disableRightSwipe={true}\n                                    closeOnRowBeginSwipe={true}\n                                    keyExtractor= {(item,index) => index.toString()}\n                                />\n                                \n                            </View>\n                            <View style={{width:'100%', borderBottomLeftRadius:20, borderBottomRightRadius:20}}>\n                                <View style={{ display: selectedTab==undefined? \"none\":\"flex\", width: \"100%\", height: 35, flexDirection: 'row', justifyContent: 'flex-end', alignItems: 'flex-end' }}>\n                                    <View style={{display: selectedTab=='UNLISTED'?'none':'flex',justifyContent: 'center', alignItems: 'flex-end', marginVertical: 2, marginHorizontal: 2 }}>\n                                        <TouchableOpacity>\n                                            <Feather onPress={()=>setDeleteTrackVisible(true)} name='trash-2' size={30} color={colors.primary.purple}  />\n                                        </TouchableOpacity>\n                                    </View>\n                                    <View style={{ justifyContent: 'center', alignItems: 'flex-end', marginVertical: 2, marginHorizontal: 2 }}>\n                                        <TouchableOpacity onPress={()=>setNewSectionVisible(true)}>\n                                            <Feather name='plus-circle' size={30} color={colors.primary.purple}  />\n                                        </TouchableOpacity>\n                                    </View>\n                                    <DeleteTrack deleteTrackVisible={deleteTrackVisible} setDeleteTrackVisible={setDeleteTrackVisible} tracks={tracks} setTracks={setTracks} db={db} setSelectedTab={setSelectedTab} selectedTab={selectedTab} sections={sections} setSections={setSections} tasks={tasks} setTasks={setTasks}/>\n                                    <DeleteSection deleteSectionVisible={deleteSectionVisible} setDeleteSectionVisible={setDeleteSectionVisible} db={db} selectedTab={selectedTab} setSelectedTab={setSelectedTab} sections={sections} setSections={setSections} tasks={tasks} setTasks={setTasks} selectedSection={selectedSection} setSelectedSection={setSelectedSection} progress={progress} setProgress={setProgress} statusrecords={statusrecords} setStatusrecords={setStatusrecords}/>\n                                </View>\n                            </View>\n                        </View>  \n                    </View>\n                </View>\n            </SafeAreaView>\n        </ImageBackground>\n    );\n}\n\nexport default Tracks;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}