{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { useState, useEffect } from 'react';\nimport { colors } from \"../styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar width = Dimensions.get('window').width;\nfunction Status(_ref) {\n  var db = _ref.db,\n    name = _ref.name,\n    list = _ref.list,\n    statuslist = _ref.statuslist,\n    statusrecords = _ref.statusrecords,\n    setStatusrecords = _ref.setStatusrecords,\n    number = _ref.number,\n    id = _ref.id;\n  var _useState = useState(statuslist.filter(function (c) {\n      return c.name == list;\n    }).map(function (c) {\n      return c.item;\n    })[number]),\n    _useState2 = _slicedToArray(_useState, 2),\n    status = _useState2[0],\n    setStatus = _useState2[1];\n  var _useState3 = useState(statuslist.filter(function (c) {\n      return c.name == list;\n    }).map(function (c) {\n      return c.color;\n    })[number]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    color = _useState4[0],\n    setColor = _useState4[1];\n  var lastnumber = statuslist.filter(function (c) {\n    return c.name == list;\n  }).map(function (c) {\n    return c.number;\n  }).length - 1;\n  var _useState5 = useState(number),\n    _useState6 = _slicedToArray(_useState5, 2),\n    newnumber = _useState6[0],\n    setNewnumber = _useState6[1];\n  useEffect(function () {\n    setStatus(statuslist.filter(function (c) {\n      return c.name == list;\n    }).map(function (c) {\n      return c.item;\n    })[newnumber]);\n    setColor(statuslist.filter(function (c) {\n      return c.name == list;\n    }).map(function (c) {\n      return c.color;\n    })[newnumber]);\n  }, [newnumber]);\n  var UpdateStatus = function UpdateStatus() {\n    var existingrecords = _toConsumableArray(statusrecords);\n    var indexToUpdate = existingrecords.findIndex(function (c) {\n      return c.id === id;\n    });\n    db.transaction(function (tx) {\n      tx.executeSql('UPDATE statusrecords SET number = ? WHERE id = ?', [newnumber == lastnumber ? 0 : newnumber + 1, id], function (txObj, resultSet) {\n        if (resultSet.rowsAffected > 0) {\n          existingrecords[indexToUpdate].number = newnumber == lastnumber ? 0 : newnumber + 1;\n          setStatusrecords(existingrecords);\n        }\n      }, function (txObj, error) {\n        return console.log('Error updating data', error);\n      });\n    });\n  };\n  return _jsxs(View, {\n    style: {\n      flexDirection: 'row',\n      backgroundColor: colors.primary.white,\n      width: width * 0.9,\n      height: 40,\n      flex: 1,\n      alignItems: 'center'\n    },\n    children: [_jsx(Text, {\n      style: {\n        flex: 1,\n        marginLeft: 10\n      },\n      children: name\n    }), _jsx(Pressable, {\n      onPress: function onPress() {\n        setNewnumber(newnumber == lastnumber ? 0 : newnumber + 1);\n        UpdateStatus();\n      },\n      style: {\n        backgroundColor: color == undefined ? colors.primary.gray : color,\n        borderRadius: 10,\n        height: 20,\n        justifyContent: 'center',\n        alignItems: 'center',\n        paddingHorizontal: 10,\n        margin: 10\n      },\n      children: _jsx(Text, {\n        children: status\n      })\n    })]\n  });\n}\nexport default Status;","map":{"version":3,"names":["useState","useEffect","colors","jsx","_jsx","jsxs","_jsxs","width","Dimensions","get","Status","_ref","db","name","list","statuslist","statusrecords","setStatusrecords","number","id","_useState","filter","c","map","item","_useState2","_slicedToArray","status","setStatus","_useState3","color","_useState4","setColor","lastnumber","length","_useState5","_useState6","newnumber","setNewnumber","UpdateStatus","existingrecords","_toConsumableArray","indexToUpdate","findIndex","transaction","tx","executeSql","txObj","resultSet","rowsAffected","error","console","log","View","style","flexDirection","backgroundColor","primary","white","height","flex","alignItems","children","Text","marginLeft","Pressable","onPress","undefined","gray","borderRadius","justifyContent","paddingHorizontal","margin"],"sources":["/Users/elodie/Documents/GIT/todo/components/Status.tsx"],"sourcesContent":["import { StyleSheet, Button, TouchableOpacity, Text, View, Dimensions, Pressable, ScrollView } from 'react-native';\nimport { useState, useEffect } from 'react';\nimport { container, colors} from '../styles';\n\n\nconst width = Dimensions.get('window').width;\n\nfunction Status({db, name, list, statuslist, statusrecords, setStatusrecords, number, id}) {\n\n\n  const [status, setStatus] = useState(statuslist.filter(c=>c.name==list).map(c=>c.item)[number]);\n  const [color, setColor] = useState(statuslist.filter(c=>c.name==list).map(c=>c.color)[number]);\n  const lastnumber = statuslist.filter(c=>c.name==list).map(c=>c.number).length-1;\n  const [newnumber, setNewnumber] = useState(number);\n\n  useEffect(() => {\n    setStatus(statuslist.filter(c=>c.name==list).map(c=>c.item)[newnumber]);\n    setColor(statuslist.filter(c=>c.name==list).map(c=>c.color)[newnumber]);\n  }, [newnumber]);\n\n  const UpdateStatus = () => {\n    let existingrecords=[...statusrecords];\n    const indexToUpdate = existingrecords.findIndex(c => c.id === id);\n      db.transaction(tx=> {\n        tx.executeSql('UPDATE statusrecords SET number = ? WHERE id = ?', [newnumber==lastnumber?0:newnumber+1, id],\n          (txObj, resultSet) => {\n            if (resultSet.rowsAffected > 0) {\n              existingrecords[indexToUpdate].number = newnumber==lastnumber?0:newnumber+1;\n              setStatusrecords(existingrecords);\n            }\n          },\n          (txObj, error) => console.log('Error updating data', error)\n        );\n      });\n  }\n\n  return (\n    <View style={{flexDirection:'row',backgroundColor:colors.primary.white,width:width*0.9, height:40,flex:1, alignItems:'center'}}>\n      <Text style={{flex:1,marginLeft:10}}>{name}</Text>\n      <Pressable onPress={()=>{setNewnumber(newnumber==lastnumber?0:newnumber+1);UpdateStatus()}} style={{backgroundColor:color==undefined?colors.primary.gray:color,borderRadius:10, height:20, justifyContent:'center', alignItems:'center', paddingHorizontal:10, margin:10}}>\n        <Text>{status}</Text>\n      </Pressable>\n    </View>\n  );\n}\nexport default Status;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}