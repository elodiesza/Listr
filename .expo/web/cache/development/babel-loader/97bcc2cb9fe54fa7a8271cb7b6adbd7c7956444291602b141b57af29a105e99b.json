{"ast":null,"code":"export var Utils = {\n  START_DATE: 'START_DATE',\n  END_DATE: 'END_DATE',\n  WEEKDAYS: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  MONTHS: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n  MAX_ROWS: 7,\n  MAX_COLUMNS: 7,\n  FIRST_DAY_OFFSETS: [0, -1, 5, 4, 3, 2, 1],\n  getDaysInMonth: function getDaysInMonth(month, year) {\n    var lastDayOfMonth = new Date(year, month + 1, 0);\n    return lastDayOfMonth.getDate();\n  },\n  isSameMonthAndYear: function isSameMonthAndYear(date, month, year) {\n    if (date) {\n      return date.month() === month && date.year() === year;\n    }\n    return false;\n  },\n  shallowDiff: function shallowDiff(a, b) {\n    var exclusions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    var diffs = [];\n    for (var key of Object.keys(a)) {\n      if (exclusions.includes(key)) {\n        continue;\n      }\n      if (a[key] !== b[key]) {\n        diffs.push(key);\n      }\n    }\n    return diffs;\n  },\n  compareDates: function compareDates(a, b, granularity) {\n    if (!a && !b) {\n      return true;\n    }\n    return !!a && !!b && a.isSame(b, granularity);\n  },\n  getWeekdays: function getWeekdays() {\n    var firstDay = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var from = firstDay;\n    var weekdays = [];\n    for (var i = 0; i < Utils.WEEKDAYS.length; i++) {\n      weekdays.push(Utils.WEEKDAYS[from]);\n      from = from >= Utils.WEEKDAYS.length - 1 ? 0 : from + 1;\n    }\n    return weekdays;\n  },\n  getISOWeekdaysOrder: function getISOWeekdaysOrder() {\n    var firstDay = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var from = firstDay === 0 ? 7 : firstDay;\n    var order = [];\n    for (var i = 0; i < Utils.WEEKDAYS.length; i++) {\n      order.push(from);\n      from = from >= Utils.WEEKDAYS.length ? 1 : from + 1;\n    }\n    return order;\n  }\n};","map":{"version":3,"names":["Utils","START_DATE","END_DATE","WEEKDAYS","MONTHS","MAX_ROWS","MAX_COLUMNS","FIRST_DAY_OFFSETS","getDaysInMonth","month","year","lastDayOfMonth","Date","getDate","isSameMonthAndYear","date","shallowDiff","a","b","exclusions","arguments","length","undefined","diffs","key","Object","keys","includes","push","compareDates","granularity","isSame","getWeekdays","firstDay","from","weekdays","i","getISOWeekdaysOrder","order"],"sources":["/Users/elodie/Documents/GIT/todo/node_modules/react-native-calendar-picker/CalendarPicker/Utils.js"],"sourcesContent":["/**\n * Calendar Picker Component\n *\n * Copyright 2016 Yahoo Inc.\n * Licensed under the terms of the MIT license. See LICENSE file in the project root for terms.\n */\n\nexport const Utils = {\n  START_DATE: 'START_DATE',\n  END_DATE: 'END_DATE',\n  WEEKDAYS: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  MONTHS: [\n    'January', 'February', 'March', 'April', 'May', 'June', 'July',\n    'August', 'September', 'October', 'November', 'December'\n  ],\n  MAX_ROWS: 7,\n  MAX_COLUMNS: 7,\n  FIRST_DAY_OFFSETS: [0, -1, 5, 4, 3, 2, 1],\n  getDaysInMonth: function(month, year) {\n    const lastDayOfMonth = new Date(year, month + 1, 0);\n    return lastDayOfMonth.getDate();\n  },\n  isSameMonthAndYear: function(date, month, year) {\n    if (date) {\n      return date.month() === month && date.year() === year;\n    }\n    return false;\n  },\n  // Test whether objects' values are different.\n  // `exclusions` param ignores provided keys.\n  // Returns array of keys that are different (empty array means identical).\n  shallowDiff: function(a, b, exclusions = []) {\n    const diffs = [];\n    for (let key of Object.keys(a)) {\n      if (exclusions.includes(key)) {\n        continue;\n      }\n      if (a[key] !== b[key]) {\n        diffs.push(key);\n      }\n    }\n    return diffs;\n  },\n  // Robust compare Moment dates.\n  compareDates: function(a, b, granularity) {\n    // Allow for falsy (null & undefined) equality.\n    if (!a && !b) {\n      return true;\n    }\n    return !!a && !!b && a.isSame(b, granularity);\n  },\n  getWeekdays: function(firstDay = 0) {\n    let from = firstDay;\n    const weekdays = [];\n    for (let i = 0; i < Utils.WEEKDAYS.length; i++) {\n      weekdays.push(Utils.WEEKDAYS[from]);\n      from = from >= Utils.WEEKDAYS.length - 1 ? 0 : from + 1;\n    }\n    return weekdays;\n  },\n  getISOWeekdaysOrder: function(firstDay = 0) {\n    let from = firstDay === 0 ? 7 : firstDay;\n    const order = [];\n    for (let i = 0; i < Utils.WEEKDAYS.length; i++) {\n      order.push(from);\n      from = from >= Utils.WEEKDAYS.length ? 1 : from + 1;\n    }\n    return order;\n  },\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}