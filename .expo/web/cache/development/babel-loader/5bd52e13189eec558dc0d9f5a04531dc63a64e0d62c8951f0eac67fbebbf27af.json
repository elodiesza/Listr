{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { container, colors } from \"../styles\";\nimport { MaterialIcons } from '@expo/vector-icons';\nimport Modal from 'react-native-modal';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar width = Dimensions.get('window').width;\nfunction DeleteTrack(_ref) {\n  var deleteTrackVisible = _ref.deleteTrackVisible,\n    setDeleteTrackVisible = _ref.setDeleteTrackVisible,\n    db = _ref.db,\n    tracks = _ref.tracks,\n    setTracks = _ref.setTracks,\n    selectedTab = _ref.selectedTab,\n    setSelectedTab = _ref.setSelectedTab,\n    sections = _ref.sections,\n    setSections = _ref.setSections,\n    tasks = _ref.tasks,\n    setTasks = _ref.setTasks;\n  var DeleteTrackDB = function DeleteTrackDB() {\n    var id = tracks.filter(function (c) {\n      return c.track == selectedTab;\n    }).map(function (c) {\n      return c.id;\n    })[0];\n    db.transaction(function (tx) {\n      tx.executeSql('DELETE FROM sections WHERE track = ?', [id], function (txObj, resultSet) {\n        if (resultSet.rowsAffected > 0) {\n          var existingSections = _toConsumableArray(sections).filter(function (c) {\n            return c.track !== selectedTab;\n          });\n          setSections(existingSections);\n        }\n      }, function (txObj, error) {\n        return console.log(error);\n      });\n    });\n    db.transaction(function (tx) {\n      tx.executeSql('DELETE FROM tasks WHERE track = ?', [id], function (txObj, resultSet) {\n        if (resultSet.rowsAffected > 0) {\n          var existingTasks = _toConsumableArray(tasks).filter(function (c) {\n            return c.track !== selectedTab;\n          });\n          setTasks(existingTasks);\n        }\n      }, function (txObj, error) {\n        return console.log(error);\n      });\n    });\n    db.transaction(function (tx) {\n      tx.executeSql('DELETE FROM tracks WHERE id = ?', [id], function (txObj, resultSet) {\n        if (resultSet.rowsAffected > 0) {\n          var existingTracks = _toConsumableArray(tracks).filter(function (c) {\n            return c.id !== id;\n          });\n          setTracks(existingTracks);\n          setSelectedTab(existingTracks.map(function (c) {\n            return c.track;\n          })[0]);\n        }\n      }, function (txObj, error) {\n        return console.log(error);\n      });\n    });\n    setSelectedTab('UNLISTED');\n    setDeleteTrackVisible(false);\n  };\n  return _jsx(Modal, {\n    isVisible: deleteTrackVisible,\n    onBackdropPress: function onBackdropPress() {\n      setDeleteTrackVisible(!deleteTrackVisible);\n    },\n    backdropColor: \"white\",\n    avoidKeyboard: true,\n    style: {\n      margin: 0,\n      justifyContent: 'flex-end',\n      alignItems: 'center',\n      width: width\n    },\n    children: _jsx(TouchableOpacity, {\n      onPressOut: function onPressOut() {\n        return setDeleteTrackVisible(!deleteTrackVisible);\n      },\n      activeOpacity: 1,\n      children: _jsx(TouchableWithoutFeedback, {\n        children: _jsxs(View, {\n          style: [container.newModal, {\n            alignItems: 'center'\n          }],\n          children: [_jsxs(View, {\n            style: {\n              width: \"100%\",\n              flexDirection: 'row',\n              alignItems: 'center',\n              justifyContent: 'flex-start'\n            },\n            children: [_jsx(Pressable, {\n              onPress: function onPress() {\n                return setDeleteTrackVisible(!deleteTrackVisible);\n              },\n              children: _jsx(MaterialIcons, {\n                name: \"keyboard-arrow-left\",\n                size: 25,\n                color: colors.primary.blue\n              })\n            }), _jsxs(Text, {\n              style: {\n                left: 20,\n                flexWrap: 'wrap'\n              },\n              children: [\"Delete \", selectedTab, \" and its sections/tasks definitely ?\"]\n            })]\n          }), _jsx(Pressable, {\n            onPress: function onPress() {\n              return DeleteTrackDB();\n            },\n            style: [container.button, {\n              flexDirection: 'row',\n              alignItems: 'center',\n              justifyContent: 'center',\n              height: 40,\n              width: 150,\n              marginRight: 5\n            }],\n            children: _jsx(Text, {\n              children: \" DELETE \"\n            })\n          })]\n        })\n      })\n    })\n  });\n}\n;\nexport default DeleteTrack;","map":{"version":3,"names":["container","colors","MaterialIcons","Modal","jsx","_jsx","jsxs","_jsxs","width","Dimensions","get","DeleteTrack","_ref","deleteTrackVisible","setDeleteTrackVisible","db","tracks","setTracks","selectedTab","setSelectedTab","sections","setSections","tasks","setTasks","DeleteTrackDB","id","filter","c","track","map","transaction","tx","executeSql","txObj","resultSet","rowsAffected","existingSections","_toConsumableArray","error","console","log","existingTasks","existingTracks","isVisible","onBackdropPress","backdropColor","avoidKeyboard","style","margin","justifyContent","alignItems","children","TouchableOpacity","onPressOut","activeOpacity","TouchableWithoutFeedback","View","newModal","flexDirection","Pressable","onPress","name","size","color","primary","blue","Text","left","flexWrap","button","height","marginRight"],"sources":["/Users/elodie/Documents/GIT/todo/modal/DeleteTrack.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Dimensions,TouchableWithoutFeedback,TouchableOpacity, StyleSheet, TextInput, Pressable, Text, View, FlatList } from 'react-native';\nimport { useForm, Controller, set } from 'react-hook-form';\nimport { container,colors } from '../styles';\nimport { MaterialIcons, Feather } from '@expo/vector-icons';\nimport Modal from 'react-native-modal';\n\nconst width = Dimensions.get('window').width;\n\nfunction DeleteTrack({deleteTrackVisible, setDeleteTrackVisible, db, tracks, setTracks, selectedTab, setSelectedTab, sections, setSections, tasks, setTasks}) {\n\n\n  const DeleteTrackDB = () => {\n    const id = tracks.filter((c) => c.track == selectedTab).map((c) => c.id)[0];\n    db.transaction(\n        (tx) => {\n        tx.executeSql(\n            'DELETE FROM sections WHERE track = ?',\n            [id],\n            (txObj, resultSet) => {\n            if (resultSet.rowsAffected > 0) {\n                let existingSections = [...sections].filter((c) => c.track !== selectedTab);\n                setSections(existingSections);\n            }\n            },\n            (txObj, error) => console.log(error)\n        );\n        }\n    );\n\n    db.transaction(\n        (tx) => {\n        tx.executeSql(\n            'DELETE FROM tasks WHERE track = ?',\n            [id],\n            (txObj, resultSet) => {\n            if (resultSet.rowsAffected > 0) {\n                let existingTasks = [...tasks].filter((c) => c.track !== selectedTab);\n                setTasks(existingTasks);\n            }\n            },\n            (txObj, error) => console.log(error)\n        );\n        }\n    );\n\n    db.transaction(\n        (tx) => {\n        tx.executeSql(\n            'DELETE FROM tracks WHERE id = ?',\n            [id],\n            (txObj, resultSet) => {\n            if (resultSet.rowsAffected > 0) {\n                let existingTracks = [...tracks].filter((c) => c.id !== id);\n                setTracks(existingTracks);\n                setSelectedTab(existingTracks.map(c=>c.track)[0]);\n            }\n            },\n            (txObj, error) => console.log(error)\n        );\n        }\n    );\n    setSelectedTab('UNLISTED');\n    setDeleteTrackVisible(false);\n};\n\n\n  return (\n    <Modal\n      isVisible={deleteTrackVisible}\n      onBackdropPress={() => {\n        setDeleteTrackVisible(!deleteTrackVisible);\n      }}\n        backdropColor='white'\n        avoidKeyboard={true}\n        style={{margin: 0,justifyContent:'flex-end',alignItems:'center', width:width}}\n    > \n      <TouchableOpacity onPressOut={() => setDeleteTrackVisible(!deleteTrackVisible)} activeOpacity={1}>\n        <TouchableWithoutFeedback>\n            <View style={[container.newModal,{alignItems:'center'}]}>\n                <View style={{width:\"100%\",flexDirection:'row', alignItems:'center', justifyContent:'flex-start'}}>\n                    <Pressable onPress={() => setDeleteTrackVisible(!deleteTrackVisible)}>\n                        <MaterialIcons name=\"keyboard-arrow-left\" size={25} color={colors.primary.blue}/>\n                    </Pressable>\n                    <Text style={{left:20, flexWrap:'wrap'}}>Delete {selectedTab} and its sections/tasks definitely ?</Text>\n                </View>\n                <Pressable onPress={()=>DeleteTrackDB()} style={[container.button,{flexDirection:'row', alignItems:'center',justifyContent:'center',height:40, width:150, marginRight:5}]}>\n                    <Text> DELETE </Text>\n                </Pressable>\n          </View> \n        </TouchableWithoutFeedback>\n      </TouchableOpacity>\n    </Modal>\n  );\n};\n\nexport default DeleteTrack;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}