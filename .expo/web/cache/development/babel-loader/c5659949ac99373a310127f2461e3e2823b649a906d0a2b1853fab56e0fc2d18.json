{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { useState, useEffect } from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { useForm, Controller } from 'react-hook-form';\nimport { container, colors } from \"../styles\";\nimport { Feather } from '@expo/vector-icons';\nimport ColorPicker from \"../components/ColorPicker\";\nimport uuid from 'react-native-uuid';\nimport { SelectList } from 'react-native-dropdown-select-list';\nimport Modal from 'react-native-modal';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar width = Dimensions.get('window').width;\nfunction NewStatus(_ref) {\n  var newStatusVisible = _ref.newStatusVisible,\n    setNewStatusVisible = _ref.setNewStatusVisible,\n    db = _ref.db,\n    statuslist = _ref.statuslist,\n    setStatuslist = _ref.setStatuslist,\n    statusrecords = _ref.statusrecords,\n    setStatusrecords = _ref.setStatusrecords,\n    selectedTab = _ref.selectedTab,\n    selectedSection = _ref.selectedSection;\n  var today = new Date();\n  var month = today.getMonth();\n  var year = today.getFullYear();\n  var DaysInMonth = function DaysInMonth(year, month) {\n    return new Date(year, month + 1, 0).getDate();\n  };\n  var _useForm = useForm(),\n    control1 = _useForm.control,\n    handleSubmit1 = _useForm.handleSubmit,\n    reset1 = _useForm.reset;\n  var _useForm2 = useForm(),\n    control2 = _useForm2.control,\n    handleSubmit2 = _useForm2.handleSubmit,\n    reset2 = _useForm2.reset;\n  var _useState = useState([{\n      colorPickerVisible: false,\n      picked: '',\n      value: undefined\n    }]),\n    _useState2 = _slicedToArray(_useState, 2),\n    itemlist = _useState2[0],\n    setItemlist = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedStatus = _useState4[0],\n    setSelectedStatus = _useState4[1];\n  var ListOfStatuses = function ListOfStatuses() {\n    var list = [];\n    var _loop = function _loop(i) {\n      list.push([_toConsumableArray(new Set(statuslist.map(function (c) {\n        return c.name;\n      })))[i], \" : \" + statuslist.filter(function (c) {\n        return c.name == _toConsumableArray(new Set(statuslist.map(function (c) {\n          return c.name;\n        })))[i];\n      }).map(function (c) {\n        return \" \" + c.item;\n      })]);\n    };\n    for (var i = 0; i < _toConsumableArray(new Set(statuslist.map(function (c) {\n      return c.name;\n    }))).length; i++) {\n      _loop(i);\n    }\n    return list;\n  };\n  var AddItemtolist = function AddItemtolist() {\n    setItemlist(function (prevList) {\n      return [].concat(_toConsumableArray(prevList), [{\n        colorPickerVisible: false,\n        picked: ''\n      }]);\n    });\n  };\n  var RemoveItemfromlist = function RemoveItemfromlist(index) {\n    setItemlist(function (prevList) {\n      return prevList.filter(function (_, i) {\n        return i !== index;\n      });\n    });\n  };\n  useEffect(function () {\n    if (!newStatusVisible) {\n      reset1();\n    }\n  }, [newStatusVisible, reset1]);\n  var addStatus = function () {\n    var _ref2 = _asyncToGenerator(function* (data) {\n      var existingstatuslist = _toConsumableArray(statuslist);\n      var _loop2 = function* _loop2(i) {\n        var newID = uuid.v4();\n        db.transaction(function (tx) {\n          tx.executeSql('INSERT INTO statuslist (id,name, item, color, number) VALUES (?,?,?,?,?)', [newID, data.name, itemlist[i].value, itemlist[i].picked, i], function (txtObj, stateResultSet) {\n            var newStatus = {\n              id: newID,\n              name: data.name,\n              item: itemlist[i].value,\n              color: itemlist[i].picked,\n              number: i\n            };\n            existingstatuslist.push(newStatus);\n            setStatuslist(existingstatuslist);\n          });\n        });\n      };\n      for (var i = 0; i < itemlist.length; i++) {\n        yield* _loop2(i);\n      }\n      setItemlist([{\n        colorPickerVisible: false,\n        picked: '',\n        value: undefined\n      }]);\n      setSelectedStatus(data.name);\n      reset1();\n    });\n    return function addStatus(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var addStatusrecord = function () {\n    var _ref3 = _asyncToGenerator(function* (data) {\n      var existingstatusrecords = _toConsumableArray(statusrecords);\n      var selectedList = selectedStatus;\n      var newID = uuid.v4();\n      db.transaction(function (tx) {\n        tx.executeSql('INSERT INTO statusrecords (id,name, track, section, list, number,archive) VALUES (?,?,?,?,?,?,?)', [newID, data.newrecord, selectedTab, selectedSection, selectedList, 0, false], function (txtObj, stateResultSet) {\n          var newStatus = {\n            id: newID,\n            name: data.newrecord,\n            track: selectedTab,\n            section: selectedSection,\n            list: selectedList,\n            number: 0,\n            archive: false\n          };\n          existingstatusrecords.push(newStatus);\n          setStatusrecords(existingstatusrecords);\n        });\n      });\n      setNewStatusVisible(false);\n      setSelectedStatus(selectedList);\n      reset2();\n    });\n    return function addStatusrecord(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var ItemList = function ItemList(_ref4) {\n    var item = _ref4.item,\n      index = _ref4.index;\n    var itemData = itemlist[index];\n    var colorPickerVisible = itemData.colorPickerVisible,\n      picked = itemData.picked;\n    return _jsxs(View, {\n      style: {\n        width: \"100%\",\n        justifyContent: 'flex-start',\n        alignItems: 'flex-end'\n      },\n      children: [_jsxs(View, {\n        style: {\n          flexDirection: 'row',\n          width: \"100%\",\n          justifyContent: 'flex-start',\n          alignItems: 'flex-end'\n        },\n        children: [_jsx(Pressable, {\n          onPress: function onPress() {\n            return RemoveItemfromlist(index);\n          },\n          style: {\n            display: itemlist.length === 1 ? 'none' : 'flex'\n          },\n          children: _jsx(Feather, {\n            name: \"minus-circle\",\n            size: 30,\n            color: colors.primary.purple,\n            style: {\n              marginRight: 5,\n              bottom: 5\n            }\n          })\n        }), _jsx(Controller, {\n          control: control1,\n          name: `item${index + 1}`,\n          render: function render(_ref5) {\n            var _ref5$field = _ref5.field,\n              value = _ref5$field.value,\n              onChange = _ref5$field.onChange,\n              onBlur = _ref5$field.onBlur,\n              error = _ref5.fieldState.error;\n            return _jsxs(_Fragment, {\n              children: [_jsx(TextInput, {\n                value: item.value,\n                onChangeText: function onChangeText(text) {\n                  var updatedItems = _toConsumableArray(itemlist);\n                  updatedItems[index] = _objectSpread(_objectSpread({}, item), {}, {\n                    value: text\n                  });\n                  setItemlist(updatedItems);\n                  onChange(text);\n                },\n                autoCapitalize: \"characters\",\n                onBlur: onBlur,\n                placeholder: \"STATE \" + index,\n                style: [container.textinput, {\n                  flex: 1,\n                  borderColor: error ? 'red' : '#e8e8e8'\n                }]\n              }), error && _jsx(Text, {\n                style: {\n                  color: 'red',\n                  alignSelf: 'stretch'\n                },\n                children: error.message || 'Error'\n              })]\n            });\n          },\n          rules: {\n            required: 'Input a state',\n            minLength: {\n              value: 3,\n              message: 'Task should be at least 3 characters long'\n            },\n            maxLength: {\n              value: 14,\n              message: 'Task should be max 14 characters long'\n            },\n            validate: function validate(name) {\n              if (name.includes('  ')) {\n                return 'Name should not contain consecutive spaces';\n              }\n              return true;\n            }\n          }\n        }), _jsx(Pressable, {\n          onPress: function onPress() {\n            setItemlist(function (prevList) {\n              return prevList.map(function (item, i) {\n                return i === index ? _objectSpread(_objectSpread({}, item), {}, {\n                  colorPickerVisible: !item.colorPickerVisible\n                }) : item;\n              });\n            });\n          },\n          style: {\n            justifyContent: 'center'\n          },\n          children: _jsx(View, {\n            style: [container.color, {\n              backgroundColor: picked\n            }]\n          })\n        }), _jsx(ColorPicker, {\n          colorPickerVisible: colorPickerVisible,\n          setColorPickerVisible: function setColorPickerVisible(visible) {\n            setItemlist(function (prevList) {\n              return prevList.map(function (item, i) {\n                return i === index ? _objectSpread(_objectSpread({}, item), {}, {\n                  colorPickerVisible: visible\n                }) : item;\n              });\n            });\n          },\n          picked: picked,\n          setPicked: function setPicked(value) {\n            setItemlist(function (prevList) {\n              return prevList.map(function (item, i) {\n                return i === index ? _objectSpread(_objectSpread({}, item), {}, {\n                  picked: value\n                }) : item;\n              });\n            });\n          }\n        })]\n      }), _jsx(Pressable, {\n        onPress: AddItemtolist,\n        style: {\n          display: index + 1 == itemlist.length ? 'flex' : 'none'\n        },\n        children: _jsx(Feather, {\n          name: \"plus-circle\",\n          color: colors.primary.purple,\n          size: 30,\n          style: {\n            marginRight: 5,\n            marginTop: 5\n          }\n        })\n      })]\n    });\n  };\n  return _jsx(Modal, {\n    isVisible: newStatusVisible,\n    onBackdropPress: function onBackdropPress() {\n      setNewStatusVisible(!newStatusVisible);\n      setItemlist([{\n        colorPickerVisible: false,\n        picked: '',\n        value: undefined\n      }]);\n    },\n    backdropColor: \"white\",\n    avoidKeyboard: true,\n    style: {\n      margin: 0,\n      justifyContent: 'flex-end',\n      alignItems: 'center',\n      width: width\n    },\n    children: _jsx(TouchableOpacity, {\n      onPressOut: function onPressOut() {\n        setNewStatusVisible(!newStatusVisible);\n        setItemlist([{\n          colorPickerVisible: false,\n          picked: '',\n          value: undefined\n        }]);\n      },\n      activeOpacity: 1,\n      children: _jsx(TouchableWithoutFeedback, {\n        children: _jsxs(View, {\n          style: [container.newModal, {\n            height: undefined,\n            paddingBottom: 40\n          }],\n          children: [_jsx(View, {\n            style: {\n              width: width,\n              height: 40,\n              zIndex: 2\n            },\n            children: _jsx(View, {\n              style: {\n                position: 'absolute'\n              },\n              children: _jsx(SelectList, {\n                setSelected: function setSelected(val) {\n                  return setSelectedStatus(val == \"CREATE A NEW STATUS\" ? val : val[0]);\n                },\n                data: [].concat(_toConsumableArray(ListOfStatuses()), [{\n                  value: \"CREATE A NEW STATUS\"\n                }]),\n                save: \"value\",\n                placeholder: \"select a status list\",\n                boxStyles: {\n                  backgroundColor: colors.primary.white,\n                  width: width,\n                  height: 40\n                },\n                dropdownStyles: {\n                  backgroundColor: colors.primary.white,\n                  borderRadius: 5\n                },\n                dropdownTextStyles: {\n                  fontSize: 10\n                },\n                maxHeight: 200\n              })\n            })\n          }), _jsxs(View, {\n            style: {\n              display: selectedStatus !== \"CREATE A NEW STATUS\" ? \"none\" : \"flex\",\n              width: '100%',\n              justifyContent: 'center',\n              alignItems: 'flex-start'\n            },\n            children: [_jsx(Text, {\n              style: {\n                marginTop: 10\n              },\n              children: \"NEW STATUS LIST NAME\"\n            }), _jsx(Controller, {\n              control: control1,\n              name: \"name\",\n              render: function render(_ref6) {\n                var _ref6$field = _ref6.field,\n                  value = _ref6$field.value,\n                  onChange = _ref6$field.onChange,\n                  onBlur = _ref6$field.onBlur,\n                  error = _ref6.fieldState.error;\n                return _jsxs(View, {\n                  style: {\n                    flexDirection: 'column'\n                  },\n                  children: [_jsx(TextInput, {\n                    value: value,\n                    onChangeText: onChange,\n                    autoCapitalize: \"characters\",\n                    onBlur: onBlur,\n                    placeholder: \"NAME\",\n                    style: [container.textinput, {\n                      width: width,\n                      borderColor: error ? 'red' : '#e8e8e8'\n                    }]\n                  }), error && _jsx(Text, {\n                    style: {\n                      color: 'red',\n                      alignSelf: 'stretch'\n                    },\n                    children: error.message || 'Error'\n                  })]\n                });\n              },\n              rules: {\n                required: 'Input a satus',\n                minLength: {\n                  value: 3,\n                  message: 'Task should be at least 3 characters long'\n                },\n                maxLength: {\n                  value: 14,\n                  message: 'Task should be max 14 characters long'\n                },\n                validate: function validate(name) {\n                  if (name.includes('  ')) {\n                    return 'Name should not contain consecutive spaces';\n                  }\n                  return true;\n                }\n              }\n            }), _jsx(Text, {\n              children: \"INPUT ALL STATUSES IN ORDER\"\n            }), _jsx(FlatList, {\n              data: itemlist,\n              renderItem: function renderItem(_ref7) {\n                var item = _ref7.item,\n                  index = _ref7.index;\n                return ItemList({\n                  item: item,\n                  index: index\n                });\n              },\n              keyExtractor: function keyExtractor(item, index) {\n                return index.toString();\n              },\n              contentContainerStyle: {\n                width: \"100%\",\n                alignItems: 'center',\n                justifyContent: 'center'\n              }\n            }), _jsx(Pressable, {\n              onPress: handleSubmit1(addStatus),\n              style: container.button,\n              children: _jsx(Text, {\n                children: \"CREATE NEW STATUS LIST\"\n              })\n            })]\n          }), _jsx(Text, {\n            children: \"NEW RECORD NAME\"\n          }), _jsxs(View, {\n            style: {\n              flexDirection: 'row'\n            },\n            children: [_jsx(Controller, {\n              control: control2,\n              name: \"newrecord\",\n              render: function render(_ref8) {\n                var _ref8$field = _ref8.field,\n                  value = _ref8$field.value,\n                  onChange = _ref8$field.onChange,\n                  onBlur = _ref8$field.onBlur,\n                  error = _ref8.fieldState.error;\n                return _jsxs(_Fragment, {\n                  children: [_jsx(TextInput, {\n                    value: value,\n                    onChangeText: onChange,\n                    autoCapitalize: \"characters\",\n                    onBlur: onBlur,\n                    placeholder: \"NAME\",\n                    style: [container.textinput, {\n                      borderColor: error ? 'red' : '#e8e8e8'\n                    }]\n                  }), error && _jsx(Text, {\n                    style: {\n                      color: 'red',\n                      alignSelf: 'stretch'\n                    },\n                    children: error.message || 'Error'\n                  })]\n                });\n              },\n              rules: {\n                required: 'Input a satus',\n                minLength: {\n                  value: 3,\n                  message: 'Task should be at least 3 characters long'\n                },\n                maxLength: {\n                  value: 14,\n                  message: 'Task should be max 14 characters long'\n                },\n                validate: function validate(name) {\n                  if (name.includes('  ')) {\n                    return 'Name should not contain consecutive spaces';\n                  }\n                  return true;\n                }\n              }\n            }), _jsx(Pressable, {\n              onPress: handleSubmit2(addStatusrecord),\n              style: {\n                justifyContent: 'center',\n                height: 40,\n                flex: 1,\n                alignItems: 'center'\n              },\n              children: _jsx(Feather, {\n                name: \"plus-circle\",\n                color: colors.primary.purple,\n                size: 20\n              })\n            })]\n          })]\n        })\n      })\n    })\n  });\n}\n;\nexport default NewStatus;","map":{"version":3,"names":["useState","useEffect","Dimensions","TouchableWithoutFeedback","TouchableOpacity","TextInput","Pressable","Text","View","FlatList","useForm","Controller","container","colors","Feather","ColorPicker","uuid","SelectList","Modal","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","width","get","NewStatus","_ref","newStatusVisible","setNewStatusVisible","db","statuslist","setStatuslist","statusrecords","setStatusrecords","selectedTab","selectedSection","today","Date","month","getMonth","year","getFullYear","DaysInMonth","getDate","_useForm","control1","control","handleSubmit1","handleSubmit","reset1","reset","_useForm2","control2","handleSubmit2","reset2","_useState","colorPickerVisible","picked","value","undefined","_useState2","_slicedToArray","itemlist","setItemlist","_useState3","_useState4","selectedStatus","setSelectedStatus","ListOfStatuses","list","_loop","i","push","_toConsumableArray","Set","map","c","name","filter","item","length","AddItemtolist","prevList","concat","RemoveItemfromlist","index","_","addStatus","_ref2","_asyncToGenerator","data","existingstatuslist","_loop2","newID","v4","transaction","tx","executeSql","txtObj","stateResultSet","newStatus","id","color","number","_x","apply","arguments","addStatusrecord","_ref3","existingstatusrecords","selectedList","newrecord","track","section","archive","_x2","ItemList","_ref4","itemData","style","justifyContent","alignItems","children","flexDirection","onPress","display","size","primary","purple","marginRight","bottom","render","_ref5","_ref5$field","field","onChange","onBlur","error","fieldState","onChangeText","text","updatedItems","_objectSpread","autoCapitalize","placeholder","textinput","flex","borderColor","alignSelf","message","rules","required","minLength","maxLength","validate","includes","backgroundColor","setColorPickerVisible","visible","setPicked","marginTop","isVisible","onBackdropPress","backdropColor","avoidKeyboard","margin","onPressOut","activeOpacity","newModal","height","paddingBottom","zIndex","position","setSelected","val","save","boxStyles","white","dropdownStyles","borderRadius","dropdownTextStyles","fontSize","maxHeight","_ref6","_ref6$field","renderItem","_ref7","keyExtractor","toString","contentContainerStyle","button","_ref8","_ref8$field"],"sources":["/Users/elodie/Documents/GIT/todo/modal/NewStatus.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Dimensions, TouchableWithoutFeedback,TouchableOpacity, StyleSheet, TextInput, Pressable, Text, View, FlatList } from 'react-native';\nimport { useForm, Controller, set } from 'react-hook-form';\nimport { container,colors } from '../styles';\nimport { MaterialIcons, Feather } from '@expo/vector-icons';\nimport Color from '../components/Color';\nimport ColorPicker from '../components/ColorPicker';\nimport uuid from 'react-native-uuid';\nimport { SelectList } from 'react-native-dropdown-select-list';\nimport Modal from 'react-native-modal';\n\nconst width = Dimensions.get('window').width;\n\nfunction NewStatus({newStatusVisible, setNewStatusVisible, db, statuslist, setStatuslist, statusrecords, setStatusrecords, selectedTab, selectedSection}) {\n  var today = new Date();\n  var month = today.getMonth();\n  var year = today.getFullYear();\n  const DaysInMonth = (year, month) => new Date(year, month+1, 0).getDate();\n  \n  const { control: control1, handleSubmit: handleSubmit1, reset: reset1 } = useForm();\n  const { control: control2, handleSubmit: handleSubmit2, reset: reset2 } = useForm();\n\n  const [itemlist, setItemlist] = useState([{ colorPickerVisible: false, picked: '', value: undefined }]);\n  const [selectedStatus, setSelectedStatus] = useState('');\n  \n\n  const ListOfStatuses = () => {\n    let list = [];\n    for (let i = 0; i < [...new Set(statuslist.map(c=>c.name))].length; i++) {\n      list.push([[...new Set(statuslist.map(c=>c.name))][i],\" : \"+statuslist.filter(c=>c.name==[...new Set(statuslist.map(c=>c.name))][i]).map(c=>\" \"+c.item)]);\n    }\n    return list;\n  }\n\n  const AddItemtolist = () => {\n    setItemlist((prevList) => [...prevList, { colorPickerVisible: false, picked: '' }]);\n  };\n\n  const RemoveItemfromlist = (index) => {\n    setItemlist((prevList) => (prevList.filter((_, i) => i !== index)));\n  };\n\n  useEffect(() => {\n    if (!newStatusVisible) {\n      reset1();\n    }\n  }, [newStatusVisible, reset1]);\n\n  const addStatus = async (data) => {\n    let existingstatuslist = [...statuslist]; \n      for (let i = 0; i < itemlist.length; i++) {\n        const newID=uuid.v4();\n        db.transaction((tx) => {\n            tx.executeSql(\n              'INSERT INTO statuslist (id,name, item, color, number) VALUES (?,?,?,?,?)',\n              [ newID,data.name, itemlist[i].value, itemlist[i].picked, i],\n              (txtObj, stateResultSet) => {\n                const newStatus = {\n                  id: newID,\n                  name: data.name,\n                  item: itemlist[i].value,\n                  color: itemlist[i].picked,\n                  number: i,\n                };\n                existingstatuslist.push(newStatus);\n                setStatuslist(existingstatuslist); \n              }\n            );\n        });\n      }\n    setItemlist([{ colorPickerVisible: false, picked: '', value: undefined }]);\n    setSelectedStatus(data.name);\n    reset1();\n  };\n  const addStatusrecord = async (data) => {\n    let existingstatusrecords = [...statusrecords];\n    const selectedList = selectedStatus;\n        const newID=uuid.v4();\n        db.transaction((tx) => {\n            tx.executeSql(\n              'INSERT INTO statusrecords (id,name, track, section, list, number,archive) VALUES (?,?,?,?,?,?,?)',\n              [ newID,data.newrecord, selectedTab, selectedSection, selectedList, 0,false],\n              (txtObj, stateResultSet) => {\n                const newStatus = {\n                  id: newID,\n                  name: data.newrecord,\n                  track: selectedTab,\n                  section: selectedSection,\n                  list: selectedList,\n                  number: 0,\n                  archive: false,\n                };\n                existingstatusrecords.push(newStatus);\n                setStatusrecords(existingstatusrecords); \n              }\n            );\n        });\n      setNewStatusVisible(false);\n      setSelectedStatus(selectedList)\n      reset2();\n  };\n\n  const ItemList = ({item,index}) => {\n    const itemData = itemlist[index]; \n    const { colorPickerVisible, picked } = itemData;\n    return (\n      <View style={{width:\"100%\", justifyContent:'flex-start', alignItems:'flex-end'}}>\n        <View style={{flexDirection:'row', width:\"100%\", justifyContent:'flex-start', alignItems:'flex-end'}}>\n          <Pressable onPress={() => RemoveItemfromlist(index)} style={{ display: itemlist.length === 1 ? 'none' : 'flex' }}>\n            <Feather name='minus-circle' size={30} color={colors.primary.purple} style={{ marginRight: 5, bottom: 5 }} />\n          </Pressable>\n          \n          <Controller\n          control= {control1}\n          name={`item${index + 1}`}\n          render={({field: {value, onChange, onBlur}, fieldState: {error}}) => (\n              <>\n          <TextInput\n              value={item.value}\n              onChangeText={(text) => {\n                const updatedItems = [...itemlist];\n                updatedItems[index] = { ...item, value: text };\n                setItemlist(updatedItems);\n                onChange(text);\n              }}\n              autoCapitalize = {\"characters\"}\n              onBlur={onBlur}\n              placeholder={\"STATE \"+index}\n              style={[container.textinput,{flex:1,borderColor: error ? 'red' : '#e8e8e8'}]}\n          />\n          {error && (\n              <Text style={{color: 'red', alignSelf: 'stretch'}}>{error.message || 'Error'}</Text>\n          )}\n          </>\n      )}\n      rules={{\n          required: 'Input a state',\n          minLength: {\n          value: 3,\n          message: 'Task should be at least 3 characters long',\n          },\n          maxLength: {\n          value: 14,\n          message: 'Task should be max 14 characters long',\n          },\n          validate: (name) => {\n          if (name.includes('  ')) {\n              return 'Name should not contain consecutive spaces';\n          }\n          return true;\n          }\n      }}\n      />\n        <Pressable onPress={() => {\n          setItemlist((prevList) =>\n            prevList.map((item, i) =>\n              i === index ? { ...item, colorPickerVisible: !item.colorPickerVisible } : item\n            )\n          );\n        }}  style={{ justifyContent:'center' }}>\n          <View style={[container.color,{backgroundColor:picked}]} />\n        </Pressable>\n        <ColorPicker\n          colorPickerVisible={colorPickerVisible}\n          setColorPickerVisible={(visible) => {setItemlist((prevList) =>\n              prevList.map((item, i) =>i === index ? { ...item, colorPickerVisible: visible } : item));}}\n          picked={picked}\n          setPicked={(value) => {setItemlist((prevList) =>\n              prevList.map((item, i) =>i === index ? { ...item, picked: value } : item));}}\n        />\n      </View>  \n      <Pressable onPress={AddItemtolist} style={{display:index+1==itemlist.length?'flex':'none'}}>\n        <Feather name='plus-circle' color={colors.primary.purple} size={30} style={{marginRight:5, marginTop: 5}}/>\n      </Pressable>\n    </View> \n    );\n  };\n\n\n  return (\n    <Modal\n      isVisible={newStatusVisible}\n      onBackdropPress={() => {\n        setNewStatusVisible(!newStatusVisible);\n        setItemlist([{ colorPickerVisible: false, picked: '', value: undefined }]);\n      }}\n      backdropColor='white'\n      avoidKeyboard={true}\n      style={{margin: 0,justifyContent:'flex-end',alignItems:'center', width:width}}\n    > \n      <TouchableOpacity onPressOut={() => {setNewStatusVisible(!newStatusVisible);setItemlist([{ colorPickerVisible: false, picked: '', value: undefined }]);}} activeOpacity={1}>\n        <TouchableWithoutFeedback>\n          <View style={[container.newModal,{height:undefined, paddingBottom:40}]}>\n                <View style={{width:width,height:40, zIndex:2}}>\n                  <View style={{position:'absolute'}}>\n                    <SelectList \n                    setSelected={(val) => setSelectedStatus(val==\"CREATE A NEW STATUS\"?val:val[0])} \n                    data={[...ListOfStatuses(),{value:\"CREATE A NEW STATUS\"}]} \n                    save=\"value\"\n                    placeholder='select a status list'\n                    boxStyles={{backgroundColor:colors.primary.white, width:width, height:40}}\n                    dropdownStyles={{backgroundColor:colors.primary.white,borderRadius:5}}\n                    dropdownTextStyles={{fontSize:10}}\n                    maxHeight={200}\n                    />  \n                  </View>\n                </View>\n                <View style={{display: selectedStatus!==\"CREATE A NEW STATUS\"? \"none\":\"flex\", width:'100%', justifyContent:'center', alignItems:'flex-start'}}>\n                  <Text style={{marginTop:10}}>NEW STATUS LIST NAME</Text>\n                  <Controller\n                    control= {control1}\n                    name=\"name\"\n                    render={({field: {value, onChange, onBlur}, fieldState: {error}}) => (\n                      <View style={{flexDirection:'column'}}>\n                        <TextInput\n                          value={value}\n                          onChangeText={onChange}\n                          autoCapitalize = {\"characters\"}\n                          onBlur={onBlur}\n                          placeholder=\"NAME\"\n                          style={[container.textinput,{width:width,borderColor: error ? 'red' : '#e8e8e8'}]}\n                        />\n                        {error && (\n                          <Text style={{color: 'red', alignSelf: 'stretch'}}>{error.message || 'Error'}</Text>\n                        )}\n                      </View>\n                    )}\n                    rules={{\n                      required: 'Input a satus',\n                      minLength: {\n                        value: 3,\n                        message: 'Task should be at least 3 characters long',\n                      },\n                      maxLength: {\n                        value: 14,\n                        message: 'Task should be max 14 characters long',\n                      },\n                      validate: (name) => {\n                        if (name.includes('  ')) {\n                          return 'Name should not contain consecutive spaces';\n                        }\n                        return true;\n                      }\n                    }}\n                  />\n                  <Text>INPUT ALL STATUSES IN ORDER</Text>\n                  <FlatList\n                      data={itemlist}\n                      renderItem={({item,index})=>ItemList({item,index})}\n                      keyExtractor={(item, index) => index.toString()}\n                      contentContainerStyle={{width:\"100%\", alignItems:'center', justifyContent:'center'}}\n                  />\n                  <Pressable onPress={handleSubmit1(addStatus)} style={container.button}>\n                    <Text>CREATE NEW STATUS LIST</Text>\n                  </Pressable>\n                </View>\n                <Text>NEW RECORD NAME</Text>\n                <View style={{flexDirection:'row'}}>\n                  <Controller\n                    control= {control2}\n                    name=\"newrecord\"\n                    render={({field: {value, onChange, onBlur}, fieldState: {error}}) => (\n                        <>\n                      <TextInput\n                        value={value}\n                        onChangeText={onChange}\n                        autoCapitalize = {\"characters\"}\n                        onBlur={onBlur}\n                        placeholder=\"NAME\"\n                        style={[container.textinput,{borderColor: error ? 'red' : '#e8e8e8'}]}\n                      />\n                      {error && (\n                        <Text style={{color: 'red', alignSelf: 'stretch'}}>{error.message || 'Error'}</Text>\n                      )}\n                    </>\n                    )}\n                    rules={{\n                      required: 'Input a satus',\n                      minLength: {\n                        value: 3,\n                        message: 'Task should be at least 3 characters long',\n                      },\n                      maxLength: {\n                        value: 14,\n                        message: 'Task should be max 14 characters long',\n                      },\n                      validate: (name) => {\n                        if (name.includes('  ')) {\n                          return 'Name should not contain consecutive spaces';\n                        }\n                        return true;\n                      }\n                    }}\n                  />\n                  <Pressable onPress={handleSubmit2(addStatusrecord)} style={{justifyContent:'center',height:40, flex:1, alignItems:'center'}}>\n                    <Feather name='plus-circle' color={colors.primary.purple} size={20}/>\n                  </Pressable>\n                </View>\n          </View> \n        </TouchableWithoutFeedback>\n      </TouchableOpacity>\n    </Modal>\n  );\n};\n\nexport default NewStatus;\n"],"mappings":";;;;;;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,wBAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,QAAA;AAE5C,SAASC,OAAO,EAAEC,UAAU,QAAa,iBAAiB;AAC1D,SAASC,SAAS,EAACC,MAAM;AACzB,SAAwBC,OAAO,QAAQ,oBAAoB;AAE3D,OAAOC,WAAW;AAClB,OAAOC,IAAI,MAAM,mBAAmB;AACpC,SAASC,UAAU,QAAQ,mCAAmC;AAC9D,OAAOC,KAAK,MAAM,oBAAoB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEvC,IAAMC,KAAK,GAAGvB,UAAU,CAACwB,GAAG,CAAC,QAAQ,CAAC,CAACD,KAAK;AAE5C,SAASE,SAASA,CAAAC,IAAA,EAAwI;EAAA,IAAtIC,gBAAgB,GAAAD,IAAA,CAAhBC,gBAAgB;IAAEC,mBAAmB,GAAAF,IAAA,CAAnBE,mBAAmB;IAAEC,EAAE,GAAAH,IAAA,CAAFG,EAAE;IAAEC,UAAU,GAAAJ,IAAA,CAAVI,UAAU;IAAEC,aAAa,GAAAL,IAAA,CAAbK,aAAa;IAAEC,aAAa,GAAAN,IAAA,CAAbM,aAAa;IAAEC,gBAAgB,GAAAP,IAAA,CAAhBO,gBAAgB;IAAEC,WAAW,GAAAR,IAAA,CAAXQ,WAAW;IAAEC,eAAe,GAAAT,IAAA,CAAfS,eAAe;EACrJ,IAAIC,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC;EACtB,IAAIC,KAAK,GAAGF,KAAK,CAACG,QAAQ,CAAC,CAAC;EAC5B,IAAIC,IAAI,GAAGJ,KAAK,CAACK,WAAW,CAAC,CAAC;EAC9B,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAIF,IAAI,EAAEF,KAAK;IAAA,OAAK,IAAID,IAAI,CAACG,IAAI,EAAEF,KAAK,GAAC,CAAC,EAAE,CAAC,CAAC,CAACK,OAAO,CAAC,CAAC;EAAA;EAEzE,IAAAC,QAAA,GAA0EpC,OAAO,CAAC,CAAC;IAAlEqC,QAAQ,GAAAD,QAAA,CAAjBE,OAAO;IAA0BC,aAAa,GAAAH,QAAA,CAA3BI,YAAY;IAAwBC,MAAM,GAAAL,QAAA,CAAbM,KAAK;EAC7D,IAAAC,SAAA,GAA0E3C,OAAO,CAAC,CAAC;IAAlE4C,QAAQ,GAAAD,SAAA,CAAjBL,OAAO;IAA0BO,aAAa,GAAAF,SAAA,CAA3BH,YAAY;IAAwBM,MAAM,GAAAH,SAAA,CAAbD,KAAK;EAE7D,IAAAK,SAAA,GAAgCzD,QAAQ,CAAC,CAAC;MAAE0D,kBAAkB,EAAE,KAAK;MAAEC,MAAM,EAAE,EAAE;MAAEC,KAAK,EAAEC;IAAU,CAAC,CAAC,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAN,SAAA;IAAhGO,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAC5B,IAAAI,UAAA,GAA4ClE,QAAQ,CAAC,EAAE,CAAC;IAAAmE,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAjDE,cAAc,GAAAD,UAAA;IAAEE,iBAAiB,GAAAF,UAAA;EAGxC,IAAMG,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;IAC3B,IAAIC,IAAI,GAAG,EAAE;IAAC,IAAAC,KAAA,YAAAA,MAAAC,CAAA,EAC2D;MACvEF,IAAI,CAACG,IAAI,CAAC,CAACC,kBAAA,CAAI,IAAIC,GAAG,CAAC5C,UAAU,CAAC6C,GAAG,CAAC,UAAAC,CAAC;QAAA,OAAEA,CAAC,CAACC,IAAI;MAAA,EAAC,CAAC,EAAEN,CAAC,CAAC,EAAC,KAAK,GAACzC,UAAU,CAACgD,MAAM,CAAC,UAAAF,CAAC;QAAA,OAAEA,CAAC,CAACC,IAAI,IAAEJ,kBAAA,CAAI,IAAIC,GAAG,CAAC5C,UAAU,CAAC6C,GAAG,CAAC,UAAAC,CAAC;UAAA,OAAEA,CAAC,CAACC,IAAI;QAAA,EAAC,CAAC,EAAEN,CAAC,CAAC;MAAA,EAAC,CAACI,GAAG,CAAC,UAAAC,CAAC;QAAA,OAAE,GAAG,GAACA,CAAC,CAACG,IAAI;MAAA,EAAC,CAAC,CAAC;IAC3J,CAAC;IAFD,KAAK,IAAIR,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGE,kBAAA,CAAI,IAAIC,GAAG,CAAC5C,UAAU,CAAC6C,GAAG,CAAC,UAAAC,CAAC;MAAA,OAAEA,CAAC,CAACC,IAAI;IAAA,EAAC,CAAC,EAAEG,MAAM,EAAET,CAAC,EAAE;MAAAD,KAAA,CAAAC,CAAA;IAAA;IAGvE,OAAOF,IAAI;EACb,CAAC;EAED,IAAMY,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAS;IAC1BlB,WAAW,CAAC,UAACmB,QAAQ;MAAA,UAAAC,MAAA,CAAAV,kBAAA,CAASS,QAAQ,IAAE;QAAE1B,kBAAkB,EAAE,KAAK;QAAEC,MAAM,EAAE;MAAG,CAAC;IAAA,CAAC,CAAC;EACrF,CAAC;EAED,IAAM2B,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAIC,KAAK,EAAK;IACpCtB,WAAW,CAAC,UAACmB,QAAQ;MAAA,OAAMA,QAAQ,CAACJ,MAAM,CAAC,UAACQ,CAAC,EAAEf,CAAC;QAAA,OAAKA,CAAC,KAAKc,KAAK;MAAA,EAAC;IAAA,CAAC,CAAC;EACrE,CAAC;EAEDtF,SAAS,CAAC,YAAM;IACd,IAAI,CAAC4B,gBAAgB,EAAE;MACrBsB,MAAM,CAAC,CAAC;IACV;EACF,CAAC,EAAE,CAACtB,gBAAgB,EAAEsB,MAAM,CAAC,CAAC;EAE9B,IAAMsC,SAAS;IAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,WAAOC,IAAI,EAAK;MAChC,IAAIC,kBAAkB,GAAAlB,kBAAA,CAAO3C,UAAU,CAAC;MAAC,IAAA8D,MAAA,aAAAA,OAAArB,CAAA,EACG;QACxC,IAAMsB,KAAK,GAAC/E,IAAI,CAACgF,EAAE,CAAC,CAAC;QACrBjE,EAAE,CAACkE,WAAW,CAAC,UAACC,EAAE,EAAK;UACnBA,EAAE,CAACC,UAAU,CACX,0EAA0E,EAC1E,CAAEJ,KAAK,EAACH,IAAI,CAACb,IAAI,EAAEf,QAAQ,CAACS,CAAC,CAAC,CAACb,KAAK,EAAEI,QAAQ,CAACS,CAAC,CAAC,CAACd,MAAM,EAAEc,CAAC,CAAC,EAC5D,UAAC2B,MAAM,EAAEC,cAAc,EAAK;YAC1B,IAAMC,SAAS,GAAG;cAChBC,EAAE,EAAER,KAAK;cACThB,IAAI,EAAEa,IAAI,CAACb,IAAI;cACfE,IAAI,EAAEjB,QAAQ,CAACS,CAAC,CAAC,CAACb,KAAK;cACvB4C,KAAK,EAAExC,QAAQ,CAACS,CAAC,CAAC,CAACd,MAAM;cACzB8C,MAAM,EAAEhC;YACV,CAAC;YACDoB,kBAAkB,CAACnB,IAAI,CAAC4B,SAAS,CAAC;YAClCrE,aAAa,CAAC4D,kBAAkB,CAAC;UACnC,CACF,CAAC;QACL,CAAC,CAAC;MACJ,CAAC;MAnBD,KAAK,IAAIpB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,QAAQ,CAACkB,MAAM,EAAET,CAAC,EAAE;QAAA,OAAAqB,MAAA,CAAArB,CAAA;MAAA;MAoB1CR,WAAW,CAAC,CAAC;QAAEP,kBAAkB,EAAE,KAAK;QAAEC,MAAM,EAAE,EAAE;QAAEC,KAAK,EAAEC;MAAU,CAAC,CAAC,CAAC;MAC1EQ,iBAAiB,CAACuB,IAAI,CAACb,IAAI,CAAC;MAC5B5B,MAAM,CAAC,CAAC;IACV,CAAC;IAAA,gBAzBKsC,SAASA,CAAAiB,EAAA;MAAA,OAAAhB,KAAA,CAAAiB,KAAA,OAAAC,SAAA;IAAA;EAAA,GAyBd;EACD,IAAMC,eAAe;IAAA,IAAAC,KAAA,GAAAnB,iBAAA,CAAG,WAAOC,IAAI,EAAK;MACtC,IAAImB,qBAAqB,GAAApC,kBAAA,CAAOzC,aAAa,CAAC;MAC9C,IAAM8E,YAAY,GAAG5C,cAAc;MAC/B,IAAM2B,KAAK,GAAC/E,IAAI,CAACgF,EAAE,CAAC,CAAC;MACrBjE,EAAE,CAACkE,WAAW,CAAC,UAACC,EAAE,EAAK;QACnBA,EAAE,CAACC,UAAU,CACX,kGAAkG,EAClG,CAAEJ,KAAK,EAACH,IAAI,CAACqB,SAAS,EAAE7E,WAAW,EAAEC,eAAe,EAAE2E,YAAY,EAAE,CAAC,EAAC,KAAK,CAAC,EAC5E,UAACZ,MAAM,EAAEC,cAAc,EAAK;UAC1B,IAAMC,SAAS,GAAG;YAChBC,EAAE,EAAER,KAAK;YACThB,IAAI,EAAEa,IAAI,CAACqB,SAAS;YACpBC,KAAK,EAAE9E,WAAW;YAClB+E,OAAO,EAAE9E,eAAe;YACxBkC,IAAI,EAAEyC,YAAY;YAClBP,MAAM,EAAE,CAAC;YACTW,OAAO,EAAE;UACX,CAAC;UACDL,qBAAqB,CAACrC,IAAI,CAAC4B,SAAS,CAAC;UACrCnE,gBAAgB,CAAC4E,qBAAqB,CAAC;QACzC,CACF,CAAC;MACL,CAAC,CAAC;MACJjF,mBAAmB,CAAC,KAAK,CAAC;MAC1BuC,iBAAiB,CAAC2C,YAAY,CAAC;MAC/BxD,MAAM,CAAC,CAAC;IACZ,CAAC;IAAA,gBA1BKqD,eAAeA,CAAAQ,GAAA;MAAA,OAAAP,KAAA,CAAAH,KAAA,OAAAC,SAAA;IAAA;EAAA,GA0BpB;EAED,IAAMU,QAAQ,GAAG,SAAXA,QAAQA,CAAAC,KAAA,EAAqB;IAAA,IAAhBtC,IAAI,GAAAsC,KAAA,CAAJtC,IAAI;MAACM,KAAK,GAAAgC,KAAA,CAALhC,KAAK;IAC3B,IAAMiC,QAAQ,GAAGxD,QAAQ,CAACuB,KAAK,CAAC;IAChC,IAAQ7B,kBAAkB,GAAa8D,QAAQ,CAAvC9D,kBAAkB;MAAEC,MAAM,GAAK6D,QAAQ,CAAnB7D,MAAM;IAClC,OACEnC,KAAA,CAAChB,IAAI;MAACiH,KAAK,EAAE;QAAChG,KAAK,EAAC,MAAM;QAAEiG,cAAc,EAAC,YAAY;QAAEC,UAAU,EAAC;MAAU,CAAE;MAAAC,QAAA,GAC9EpG,KAAA,CAAChB,IAAI;QAACiH,KAAK,EAAE;UAACI,aAAa,EAAC,KAAK;UAAEpG,KAAK,EAAC,MAAM;UAAEiG,cAAc,EAAC,YAAY;UAAEC,UAAU,EAAC;QAAU,CAAE;QAAAC,QAAA,GACnGxG,IAAA,CAACd,SAAS;UAACwH,OAAO,EAAE,SAAAA,QAAA;YAAA,OAAMxC,kBAAkB,CAACC,KAAK,CAAC;UAAA,CAAC;UAACkC,KAAK,EAAE;YAAEM,OAAO,EAAE/D,QAAQ,CAACkB,MAAM,KAAK,CAAC,GAAG,MAAM,GAAG;UAAO,CAAE;UAAA0C,QAAA,EAC/GxG,IAAA,CAACN,OAAO;YAACiE,IAAI,EAAC,cAAc;YAACiD,IAAI,EAAE,EAAG;YAACxB,KAAK,EAAE3F,MAAM,CAACoH,OAAO,CAACC,MAAO;YAACT,KAAK,EAAE;cAAEU,WAAW,EAAE,CAAC;cAAEC,MAAM,EAAE;YAAE;UAAE,CAAE;QAAC,CACpG,CAAC,EAEZhH,IAAA,CAACT,UAAU;UACXqC,OAAO,EAAGD,QAAS;UACnBgC,IAAI,EAAG,OAAMQ,KAAK,GAAG,CAAE,EAAE;UACzB8C,MAAM,EAAE,SAAAA,OAAAC,KAAA;YAAA,IAAAC,WAAA,GAAAD,KAAA,CAAEE,KAAK;cAAG5E,KAAK,GAAA2E,WAAA,CAAL3E,KAAK;cAAE6E,QAAQ,GAAAF,WAAA,CAARE,QAAQ;cAAEC,MAAM,GAAAH,WAAA,CAANG,MAAM;cAAgBC,KAAK,GAAAL,KAAA,CAAlBM,UAAU,CAAGD,KAAK;YAAA,OAC1DnH,KAAA,CAAAF,SAAA;cAAAsG,QAAA,GACJxG,IAAA,CAACf,SAAS;gBACNuD,KAAK,EAAEqB,IAAI,CAACrB,KAAM;gBAClBiF,YAAY,EAAE,SAAAA,aAACC,IAAI,EAAK;kBACtB,IAAMC,YAAY,GAAApE,kBAAA,CAAOX,QAAQ,CAAC;kBAClC+E,YAAY,CAACxD,KAAK,CAAC,GAAAyD,aAAA,CAAAA,aAAA,KAAQ/D,IAAI;oBAAErB,KAAK,EAAEkF;kBAAI,EAAE;kBAC9C7E,WAAW,CAAC8E,YAAY,CAAC;kBACzBN,QAAQ,CAACK,IAAI,CAAC;gBAChB,CAAE;gBACFG,cAAc,EAAI,YAAa;gBAC/BP,MAAM,EAAEA,MAAO;gBACfQ,WAAW,EAAE,QAAQ,GAAC3D,KAAM;gBAC5BkC,KAAK,EAAE,CAAC7G,SAAS,CAACuI,SAAS,EAAC;kBAACC,IAAI,EAAC,CAAC;kBAACC,WAAW,EAAEV,KAAK,GAAG,KAAK,GAAG;gBAAS,CAAC;cAAE,CAChF,CAAC,EACDA,KAAK,IACFvH,IAAA,CAACb,IAAI;gBAACkH,KAAK,EAAE;kBAACjB,KAAK,EAAE,KAAK;kBAAE8C,SAAS,EAAE;gBAAS,CAAE;gBAAA1B,QAAA,EAAEe,KAAK,CAACY,OAAO,IAAI;cAAO,CAAO,CACtF;YAAA,CACC,CAAC;UAAA,CACL;UACFC,KAAK,EAAE;YACHC,QAAQ,EAAE,eAAe;YACzBC,SAAS,EAAE;cACX9F,KAAK,EAAE,CAAC;cACR2F,OAAO,EAAE;YACT,CAAC;YACDI,SAAS,EAAE;cACX/F,KAAK,EAAE,EAAE;cACT2F,OAAO,EAAE;YACT,CAAC;YACDK,QAAQ,EAAE,SAAAA,SAAC7E,IAAI,EAAK;cACpB,IAAIA,IAAI,CAAC8E,QAAQ,CAAC,IAAI,CAAC,EAAE;gBACrB,OAAO,4CAA4C;cACvD;cACA,OAAO,IAAI;YACX;UACJ;QAAE,CACD,CAAC,EACAzI,IAAA,CAACd,SAAS;UAACwH,OAAO,EAAE,SAAAA,QAAA,EAAM;YACxB7D,WAAW,CAAC,UAACmB,QAAQ;cAAA,OACnBA,QAAQ,CAACP,GAAG,CAAC,UAACI,IAAI,EAAER,CAAC;gBAAA,OACnBA,CAAC,KAAKc,KAAK,GAAAyD,aAAA,CAAAA,aAAA,KAAQ/D,IAAI;kBAAEvB,kBAAkB,EAAE,CAACuB,IAAI,CAACvB;gBAAkB,KAAKuB,IAAI;cAAA,CAChF,CAAC;YAAA,CACH,CAAC;UACH,CAAE;UAAEwC,KAAK,EAAE;YAAEC,cAAc,EAAC;UAAS,CAAE;UAAAE,QAAA,EACrCxG,IAAA,CAACZ,IAAI;YAACiH,KAAK,EAAE,CAAC7G,SAAS,CAAC4F,KAAK,EAAC;cAACsD,eAAe,EAACnG;YAAM,CAAC;UAAE,CAAE;QAAC,CAClD,CAAC,EACZvC,IAAA,CAACL,WAAW;UACV2C,kBAAkB,EAAEA,kBAAmB;UACvCqG,qBAAqB,EAAE,SAAAA,sBAACC,OAAO,EAAK;YAAC/F,WAAW,CAAC,UAACmB,QAAQ;cAAA,OACtDA,QAAQ,CAACP,GAAG,CAAC,UAACI,IAAI,EAAER,CAAC;gBAAA,OAAIA,CAAC,KAAKc,KAAK,GAAAyD,aAAA,CAAAA,aAAA,KAAQ/D,IAAI;kBAAEvB,kBAAkB,EAAEsG;gBAAO,KAAK/E,IAAI;cAAA,EAAC;YAAA,EAAC;UAAC,CAAE;UAC/FtB,MAAM,EAAEA,MAAO;UACfsG,SAAS,EAAE,SAAAA,UAACrG,KAAK,EAAK;YAACK,WAAW,CAAC,UAACmB,QAAQ;cAAA,OACxCA,QAAQ,CAACP,GAAG,CAAC,UAACI,IAAI,EAAER,CAAC;gBAAA,OAAIA,CAAC,KAAKc,KAAK,GAAAyD,aAAA,CAAAA,aAAA,KAAQ/D,IAAI;kBAAEtB,MAAM,EAAEC;gBAAK,KAAKqB,IAAI;cAAA,EAAC;YAAA,EAAC;UAAC;QAAE,CAClF,CAAC;MAAA,CACE,CAAC,EACP7D,IAAA,CAACd,SAAS;QAACwH,OAAO,EAAE3C,aAAc;QAACsC,KAAK,EAAE;UAACM,OAAO,EAACxC,KAAK,GAAC,CAAC,IAAEvB,QAAQ,CAACkB,MAAM,GAAC,MAAM,GAAC;QAAM,CAAE;QAAA0C,QAAA,EACzFxG,IAAA,CAACN,OAAO;UAACiE,IAAI,EAAC,aAAa;UAACyB,KAAK,EAAE3F,MAAM,CAACoH,OAAO,CAACC,MAAO;UAACF,IAAI,EAAE,EAAG;UAACP,KAAK,EAAE;YAACU,WAAW,EAAC,CAAC;YAAE+B,SAAS,EAAE;UAAC;QAAE,CAAC;MAAC,CAClG,CAAC;IAAA,CACR,CAAC;EAET,CAAC;EAGD,OACE9I,IAAA,CAACF,KAAK;IACJiJ,SAAS,EAAEtI,gBAAiB;IAC5BuI,eAAe,EAAE,SAAAA,gBAAA,EAAM;MACrBtI,mBAAmB,CAAC,CAACD,gBAAgB,CAAC;MACtCoC,WAAW,CAAC,CAAC;QAAEP,kBAAkB,EAAE,KAAK;QAAEC,MAAM,EAAE,EAAE;QAAEC,KAAK,EAAEC;MAAU,CAAC,CAAC,CAAC;IAC5E,CAAE;IACFwG,aAAa,EAAC,OAAO;IACrBC,aAAa,EAAE,IAAK;IACpB7C,KAAK,EAAE;MAAC8C,MAAM,EAAE,CAAC;MAAC7C,cAAc,EAAC,UAAU;MAACC,UAAU,EAAC,QAAQ;MAAElG,KAAK,EAACA;IAAK,CAAE;IAAAmG,QAAA,EAE9ExG,IAAA,CAAChB,gBAAgB;MAACoK,UAAU,EAAE,SAAAA,WAAA,EAAM;QAAC1I,mBAAmB,CAAC,CAACD,gBAAgB,CAAC;QAACoC,WAAW,CAAC,CAAC;UAAEP,kBAAkB,EAAE,KAAK;UAAEC,MAAM,EAAE,EAAE;UAAEC,KAAK,EAAEC;QAAU,CAAC,CAAC,CAAC;MAAC,CAAE;MAAC4G,aAAa,EAAE,CAAE;MAAA7C,QAAA,EACzKxG,IAAA,CAACjB,wBAAwB;QAAAyH,QAAA,EACvBpG,KAAA,CAAChB,IAAI;UAACiH,KAAK,EAAE,CAAC7G,SAAS,CAAC8J,QAAQ,EAAC;YAACC,MAAM,EAAC9G,SAAS;YAAE+G,aAAa,EAAC;UAAE,CAAC,CAAE;UAAAhD,QAAA,GACjExG,IAAA,CAACZ,IAAI;YAACiH,KAAK,EAAE;cAAChG,KAAK,EAACA,KAAK;cAACkJ,MAAM,EAAC,EAAE;cAAEE,MAAM,EAAC;YAAC,CAAE;YAAAjD,QAAA,EAC7CxG,IAAA,CAACZ,IAAI;cAACiH,KAAK,EAAE;gBAACqD,QAAQ,EAAC;cAAU,CAAE;cAAAlD,QAAA,EACjCxG,IAAA,CAACH,UAAU;gBACX8J,WAAW,EAAE,SAAAA,YAACC,GAAG;kBAAA,OAAK3G,iBAAiB,CAAC2G,GAAG,IAAE,qBAAqB,GAACA,GAAG,GAACA,GAAG,CAAC,CAAC,CAAC,CAAC;gBAAA,CAAC;gBAC/EpF,IAAI,KAAAP,MAAA,CAAAV,kBAAA,CAAML,cAAc,CAAC,CAAC,IAAC;kBAACV,KAAK,EAAC;gBAAqB,CAAC,EAAE;gBAC1DqH,IAAI,EAAC,OAAO;gBACZ/B,WAAW,EAAC,sBAAsB;gBAClCgC,SAAS,EAAE;kBAACpB,eAAe,EAACjJ,MAAM,CAACoH,OAAO,CAACkD,KAAK;kBAAE1J,KAAK,EAACA,KAAK;kBAAEkJ,MAAM,EAAC;gBAAE,CAAE;gBAC1ES,cAAc,EAAE;kBAACtB,eAAe,EAACjJ,MAAM,CAACoH,OAAO,CAACkD,KAAK;kBAACE,YAAY,EAAC;gBAAC,CAAE;gBACtEC,kBAAkB,EAAE;kBAACC,QAAQ,EAAC;gBAAE,CAAE;gBAClCC,SAAS,EAAE;cAAI,CACd;YAAC,CACE;UAAC,CACH,CAAC,EACPhK,KAAA,CAAChB,IAAI;YAACiH,KAAK,EAAE;cAACM,OAAO,EAAE3D,cAAc,KAAG,qBAAqB,GAAE,MAAM,GAAC,MAAM;cAAE3C,KAAK,EAAC,MAAM;cAAEiG,cAAc,EAAC,QAAQ;cAAEC,UAAU,EAAC;YAAY,CAAE;YAAAC,QAAA,GAC5IxG,IAAA,CAACb,IAAI;cAACkH,KAAK,EAAE;gBAACyC,SAAS,EAAC;cAAE,CAAE;cAAAtC,QAAA,EAAC;YAAoB,CAAM,CAAC,EACxDxG,IAAA,CAACT,UAAU;cACTqC,OAAO,EAAGD,QAAS;cACnBgC,IAAI,EAAC,MAAM;cACXsD,MAAM,EAAE,SAAAA,OAAAoD,KAAA;gBAAA,IAAAC,WAAA,GAAAD,KAAA,CAAEjD,KAAK;kBAAG5E,KAAK,GAAA8H,WAAA,CAAL9H,KAAK;kBAAE6E,QAAQ,GAAAiD,WAAA,CAARjD,QAAQ;kBAAEC,MAAM,GAAAgD,WAAA,CAANhD,MAAM;kBAAgBC,KAAK,GAAA8C,KAAA,CAAlB7C,UAAU,CAAGD,KAAK;gBAAA,OAC5DnH,KAAA,CAAChB,IAAI;kBAACiH,KAAK,EAAE;oBAACI,aAAa,EAAC;kBAAQ,CAAE;kBAAAD,QAAA,GACpCxG,IAAA,CAACf,SAAS;oBACRuD,KAAK,EAAEA,KAAM;oBACbiF,YAAY,EAAEJ,QAAS;oBACvBQ,cAAc,EAAI,YAAa;oBAC/BP,MAAM,EAAEA,MAAO;oBACfQ,WAAW,EAAC,MAAM;oBAClBzB,KAAK,EAAE,CAAC7G,SAAS,CAACuI,SAAS,EAAC;sBAAC1H,KAAK,EAACA,KAAK;sBAAC4H,WAAW,EAAEV,KAAK,GAAG,KAAK,GAAG;oBAAS,CAAC;kBAAE,CACnF,CAAC,EACDA,KAAK,IACJvH,IAAA,CAACb,IAAI;oBAACkH,KAAK,EAAE;sBAACjB,KAAK,EAAE,KAAK;sBAAE8C,SAAS,EAAE;oBAAS,CAAE;oBAAA1B,QAAA,EAAEe,KAAK,CAACY,OAAO,IAAI;kBAAO,CAAO,CACpF;gBAAA,CACG,CAAC;cAAA,CACP;cACFC,KAAK,EAAE;gBACLC,QAAQ,EAAE,eAAe;gBACzBC,SAAS,EAAE;kBACT9F,KAAK,EAAE,CAAC;kBACR2F,OAAO,EAAE;gBACX,CAAC;gBACDI,SAAS,EAAE;kBACT/F,KAAK,EAAE,EAAE;kBACT2F,OAAO,EAAE;gBACX,CAAC;gBACDK,QAAQ,EAAE,SAAAA,SAAC7E,IAAI,EAAK;kBAClB,IAAIA,IAAI,CAAC8E,QAAQ,CAAC,IAAI,CAAC,EAAE;oBACvB,OAAO,4CAA4C;kBACrD;kBACA,OAAO,IAAI;gBACb;cACF;YAAE,CACH,CAAC,EACFzI,IAAA,CAACb,IAAI;cAAAqH,QAAA,EAAC;YAA2B,CAAM,CAAC,EACxCxG,IAAA,CAACX,QAAQ;cACLmF,IAAI,EAAE5B,QAAS;cACf2H,UAAU,EAAE,SAAAA,WAAAC,KAAA;gBAAA,IAAE3G,IAAI,GAAA2G,KAAA,CAAJ3G,IAAI;kBAACM,KAAK,GAAAqG,KAAA,CAALrG,KAAK;gBAAA,OAAI+B,QAAQ,CAAC;kBAACrC,IAAI,EAAJA,IAAI;kBAACM,KAAK,EAALA;gBAAK,CAAC,CAAC;cAAA,CAAC;cACnDsG,YAAY,EAAE,SAAAA,aAAC5G,IAAI,EAAEM,KAAK;gBAAA,OAAKA,KAAK,CAACuG,QAAQ,CAAC,CAAC;cAAA,CAAC;cAChDC,qBAAqB,EAAE;gBAACtK,KAAK,EAAC,MAAM;gBAAEkG,UAAU,EAAC,QAAQ;gBAAED,cAAc,EAAC;cAAQ;YAAE,CACvF,CAAC,EACFtG,IAAA,CAACd,SAAS;cAACwH,OAAO,EAAE7E,aAAa,CAACwC,SAAS,CAAE;cAACgC,KAAK,EAAE7G,SAAS,CAACoL,MAAO;cAAApE,QAAA,EACpExG,IAAA,CAACb,IAAI;gBAAAqH,QAAA,EAAC;cAAsB,CAAM;YAAC,CAC1B,CAAC;UAAA,CACR,CAAC,EACPxG,IAAA,CAACb,IAAI;YAAAqH,QAAA,EAAC;UAAe,CAAM,CAAC,EAC5BpG,KAAA,CAAChB,IAAI;YAACiH,KAAK,EAAE;cAACI,aAAa,EAAC;YAAK,CAAE;YAAAD,QAAA,GACjCxG,IAAA,CAACT,UAAU;cACTqC,OAAO,EAAGM,QAAS;cACnByB,IAAI,EAAC,WAAW;cAChBsD,MAAM,EAAE,SAAAA,OAAA4D,KAAA;gBAAA,IAAAC,WAAA,GAAAD,KAAA,CAAEzD,KAAK;kBAAG5E,KAAK,GAAAsI,WAAA,CAALtI,KAAK;kBAAE6E,QAAQ,GAAAyD,WAAA,CAARzD,QAAQ;kBAAEC,MAAM,GAAAwD,WAAA,CAANxD,MAAM;kBAAgBC,KAAK,GAAAsD,KAAA,CAAlBrD,UAAU,CAAGD,KAAK;gBAAA,OAC1DnH,KAAA,CAAAF,SAAA;kBAAAsG,QAAA,GACFxG,IAAA,CAACf,SAAS;oBACRuD,KAAK,EAAEA,KAAM;oBACbiF,YAAY,EAAEJ,QAAS;oBACvBQ,cAAc,EAAI,YAAa;oBAC/BP,MAAM,EAAEA,MAAO;oBACfQ,WAAW,EAAC,MAAM;oBAClBzB,KAAK,EAAE,CAAC7G,SAAS,CAACuI,SAAS,EAAC;sBAACE,WAAW,EAAEV,KAAK,GAAG,KAAK,GAAG;oBAAS,CAAC;kBAAE,CACvE,CAAC,EACDA,KAAK,IACJvH,IAAA,CAACb,IAAI;oBAACkH,KAAK,EAAE;sBAACjB,KAAK,EAAE,KAAK;sBAAE8C,SAAS,EAAE;oBAAS,CAAE;oBAAA1B,QAAA,EAAEe,KAAK,CAACY,OAAO,IAAI;kBAAO,CAAO,CACpF;gBAAA,CACD,CAAC;cAAA,CACD;cACFC,KAAK,EAAE;gBACLC,QAAQ,EAAE,eAAe;gBACzBC,SAAS,EAAE;kBACT9F,KAAK,EAAE,CAAC;kBACR2F,OAAO,EAAE;gBACX,CAAC;gBACDI,SAAS,EAAE;kBACT/F,KAAK,EAAE,EAAE;kBACT2F,OAAO,EAAE;gBACX,CAAC;gBACDK,QAAQ,EAAE,SAAAA,SAAC7E,IAAI,EAAK;kBAClB,IAAIA,IAAI,CAAC8E,QAAQ,CAAC,IAAI,CAAC,EAAE;oBACvB,OAAO,4CAA4C;kBACrD;kBACA,OAAO,IAAI;gBACb;cACF;YAAE,CACH,CAAC,EACFzI,IAAA,CAACd,SAAS;cAACwH,OAAO,EAAEvE,aAAa,CAACsD,eAAe,CAAE;cAACY,KAAK,EAAE;gBAACC,cAAc,EAAC,QAAQ;gBAACiD,MAAM,EAAC,EAAE;gBAAEvB,IAAI,EAAC,CAAC;gBAAEzB,UAAU,EAAC;cAAQ,CAAE;cAAAC,QAAA,EAC1HxG,IAAA,CAACN,OAAO;gBAACiE,IAAI,EAAC,aAAa;gBAACyB,KAAK,EAAE3F,MAAM,CAACoH,OAAO,CAACC,MAAO;gBAACF,IAAI,EAAE;cAAG,CAAC;YAAC,CAC5D,CAAC;UAAA,CACR,CAAC;QAAA,CACP;MAAC,CACiB;IAAC,CACX;EAAC,CACd,CAAC;AAEZ;AAAC;AAED,eAAerG,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}