{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useForm, Controller } from 'react-hook-form';\nimport { container, colors } from \"../styles\";\nimport uuid from 'react-native-uuid';\nimport Modal from 'react-native-modal';\nimport { Feather } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar width = Dimensions.get('window').width;\nfunction NewSection(_ref) {\n  var db = _ref.db,\n    sections = _ref.sections,\n    setSections = _ref.setSections,\n    track = _ref.track,\n    newSectionVisible = _ref.newSectionVisible,\n    setNewSectionVisible = _ref.setNewSectionVisible;\n  var _useForm = useForm(),\n    control = _useForm.control,\n    handleSubmit = _useForm.handleSubmit,\n    reset = _useForm.reset;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    value = _useState2[0],\n    setValue = _useState2[1];\n  var addSection = function () {\n    var _ref2 = _asyncToGenerator(function* (data) {\n      var existingsections = _toConsumableArray(sections);\n      db.transaction(function (tx) {\n        tx.executeSql('INSERT INTO sections (id,section, track) VALUES (?,?, ?)', [uuid.v4(), data.name, track], function (txtObj, stateResultSet) {\n          var newState = {\n            id: uuid.v4(),\n            section: data.name,\n            track: track\n          };\n          existingsections.push(newState);\n          setSections(existingsections);\n        });\n      });\n      setNewSectionVisible(false);\n      reset();\n    });\n    return function addSection(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsx(Modal, {\n    isVisible: newSectionVisible,\n    onBackdropPress: function onBackdropPress() {\n      setNewSectionVisible(false);\n      setValue('');\n    },\n    backdropColor: \"white\",\n    avoidKeyboard: true,\n    style: {\n      margin: 0,\n      justifyContent: 'flex-end',\n      alignItems: 'center',\n      width: width\n    },\n    children: _jsx(TouchableOpacity, {\n      onPressOut: function onPressOut() {\n        setValue('');\n        setNewSectionVisible(false);\n      },\n      activeOpacity: 1,\n      children: _jsx(TouchableWithoutFeedback, {\n        children: _jsxs(View, {\n          style: [container.newModal, {\n            flexDirection: 'row',\n            alignItems: 'flex-start',\n            justifyContent: 'center'\n          }],\n          children: [_jsx(Controller, {\n            control: control,\n            name: 'name',\n            render: function render(_ref3) {\n              var _ref3$field = _ref3.field,\n                value = _ref3$field.value,\n                onChange = _ref3$field.onChange,\n                onBlur = _ref3$field.onBlur,\n                error = _ref3.fieldState.error;\n              return _jsxs(View, {\n                style: {\n                  flexDirection: 'column'\n                },\n                children: [_jsx(TextInput, {\n                  value: value,\n                  onChangeText: onChange,\n                  autoCapitalize: \"characters\",\n                  onBlur: onBlur,\n                  placeholder: \"new section name\",\n                  style: [container.textinput, {\n                    borderColor: error ? 'red' : '#e8e8e8'\n                  }]\n                }), error && _jsx(Text, {\n                  style: {\n                    color: 'red',\n                    alignSelf: 'stretch'\n                  },\n                  children: error.message || 'Error'\n                })]\n              });\n            },\n            rules: {\n              required: 'Input a section name',\n              minLength: {\n                value: 3,\n                message: 'Task should be at least 3 characters long'\n              },\n              maxLength: {\n                value: 32,\n                message: 'Task should be max 32 characters long'\n              },\n              validate: function validate(name) {\n                if (name.includes('  ')) {\n                  return 'Name should not contain consecutive spaces';\n                }\n                return true;\n              }\n            }\n          }), _jsx(Pressable, {\n            onPress: handleSubmit(addSection),\n            style: {\n              justifyContent: 'center',\n              height: 40,\n              flex: 1,\n              alignItems: 'center'\n            },\n            children: _jsx(Feather, {\n              name: \"plus-circle\",\n              size: 20,\n              color: colors.primary.purple\n            })\n          })]\n        })\n      })\n    })\n  });\n}\n;\nexport default NewSection;","map":{"version":3,"names":["useState","Dimensions","TouchableWithoutFeedback","TouchableOpacity","TextInput","Pressable","Text","View","useForm","Controller","container","colors","uuid","Modal","Feather","jsx","_jsx","jsxs","_jsxs","width","get","NewSection","_ref","db","sections","setSections","track","newSectionVisible","setNewSectionVisible","_useForm","control","handleSubmit","reset","_useState","_useState2","_slicedToArray","value","setValue","addSection","_ref2","_asyncToGenerator","data","existingsections","_toConsumableArray","transaction","tx","executeSql","v4","name","txtObj","stateResultSet","newState","id","section","push","_x","apply","arguments","isVisible","onBackdropPress","backdropColor","avoidKeyboard","style","margin","justifyContent","alignItems","children","onPressOut","activeOpacity","newModal","flexDirection","render","_ref3","_ref3$field","field","onChange","onBlur","error","fieldState","onChangeText","autoCapitalize","placeholder","textinput","borderColor","color","alignSelf","message","rules","required","minLength","maxLength","validate","includes","onPress","height","flex","size","primary","purple"],"sources":["/Users/elodie/Documents/GIT/todo/modal/NewSection.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Platform, Dimensions, Alert, TouchableWithoutFeedback,TouchableOpacity, StyleSheet, TextInput, Pressable, Text, View, FlatList } from 'react-native';\nimport { useForm, Controller, set } from 'react-hook-form';\nimport { container,colors } from '../styles';\nimport uuid from 'react-native-uuid';\nimport Modal from 'react-native-modal';\nimport { Feather } from '@expo/vector-icons';\n\nconst width = Dimensions.get('window').width;\n\nfunction NewSection({db, sections, setSections, track, newSectionVisible, setNewSectionVisible}) {\n    const {control, handleSubmit, reset} = useForm();\n    const [value, setValue] = useState('');\n\n    const addSection = async (data) => {\n        let existingsections = [...sections]; \n            db.transaction((tx) => {\n                tx.executeSql(\n                  'INSERT INTO sections (id,section, track) VALUES (?,?, ?)',\n                  [ uuid.v4(),data.name, track],\n                  (txtObj, stateResultSet) => {\n                    const newState = {\n                      id: uuid.v4(),\n                      section: data.name,\n                      track: track,\n                    };\n                    existingsections.push(newState);\n                    setSections(existingsections); \n                  }\n                );\n            });\n        setNewSectionVisible(false);\n        reset();\n    };\n\n  return (\n    <Modal\n      isVisible={newSectionVisible}\n      onBackdropPress={() => {\n        setNewSectionVisible(false);\n        setValue('');\n      }}\n      backdropColor='white'\n      avoidKeyboard={true}\n      style={{margin: 0,justifyContent:'flex-end',alignItems:'center', width:width}}\n    > \n      <TouchableOpacity onPressOut={() => {setValue('');setNewSectionVisible(false);}} activeOpacity={1}>\n        <TouchableWithoutFeedback>\n            <View style={[container.newModal,{flexDirection:'row',alignItems:'flex-start', justifyContent:'center'}]}>\n               <Controller\n                control= {control}\n                name={'name'}\n                render={({field: {value, onChange, onBlur}, fieldState: {error}}) => (\n                  <View style={{flexDirection:'column'}}>\n                    <TextInput\n                        value={value}\n                        onChangeText={onChange}\n                        autoCapitalize = {\"characters\"}\n                        onBlur={onBlur}\n                        placeholder={\"new section name\"}\n                        style={[container.textinput,{borderColor: error ? 'red' : '#e8e8e8'}]}\n                    />\n                    {error && (\n                        <Text style={{color: 'red', alignSelf: 'stretch'}}>{error.message || 'Error'}</Text>\n                    )}\n                  </View>\n                )}\n                rules={{\n                    required: 'Input a section name',\n                    minLength: {\n                    value: 3,\n                    message: 'Task should be at least 3 characters long',\n                    },\n                    maxLength: {\n                    value: 32,\n                    message: 'Task should be max 32 characters long',\n                    },\n                    validate: (name) => {\n                    if (name.includes('  ')) {\n                        return 'Name should not contain consecutive spaces';\n                    }\n                    return true;\n                    }\n                }}\n                />\n                <Pressable onPress={handleSubmit(addSection)} style={{justifyContent:'center',height:40, flex:1, alignItems:'center'}}>\n                  <Feather name='plus-circle' size={20} color={colors.primary.purple}/>\n                </Pressable>\n            </View>  \n        </TouchableWithoutFeedback>\n      </TouchableOpacity>\n    </Modal>\n  );\n};\n\nexport default NewSection;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}