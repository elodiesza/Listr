{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { useState } from 'react';\nimport { container, colors } from \"../../styles\";\nimport { StackedBarChart } from 'react-native-chart-kit';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar width = Dimensions.get('window').width;\nfunction AnalyticsHome(_ref) {\n  var db = _ref.db,\n    tasks = _ref.tasks,\n    statusrecords = _ref.statusrecords,\n    tracks = _ref.tracks,\n    year = _ref.year,\n    month = _ref.month;\n  var _useState = useState('∞'),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedTrack = _useState2[0],\n    setSelectedTrack = _useState2[1];\n  var taskCount = ChosenTrackData(selectedTrack).filter(function (c) {\n    return c.year == year && c.month == month;\n  }).length;\n  var completedTasks = ChosenTrackData(selectedTrack).filter(function (c) {\n    return c.taskState == 2 && c.year == year && c.month == month;\n  }).length;\n  var recurringdailyTasks = ChosenTrackData(selectedTrack).filter(function (c) {\n    return c.recurring == 1 && c.year == year && c.month == month && c.monthly == false;\n  }).length;\n  var completedrecurringdailyTasks = ChosenTrackData(selectedTrack).filter(function (c) {\n    return c.taskState == 2 && c.recurring == 1 && c.year == year && c.month == month && c.monthly == false;\n  }).length;\n  var tasksData = function tasksData() {\n    var data = [];\n    var _loop = function _loop(i) {\n      var count = ChosenTrackData(selectedTrack).filter(function (c) {\n        return c.day == i && c.year == year && c.month == month;\n      }).length;\n      var completed = ChosenTrackData(selectedTrack).filter(function (c) {\n        return c.taskState == 2 && c.day == i && c.year == year && c.month == month;\n      }).length;\n      data.push({\n        day: i,\n        count: count,\n        completed: completed,\n        color: colors.primary.default\n      });\n    };\n    for (var i = 1; i <= 31; i++) {\n      _loop(i);\n    }\n    return data;\n  };\n  function transposeTasksData(data) {\n    var transposedData = new Array(31).fill(null).map(function (_) {\n      return {};\n    });\n    data.forEach(function (item) {\n      transposedData[item.day - 1] = {\n        day: item.day,\n        completed: item.completed,\n        count: item.count,\n        completedcolor: colors.primary.default,\n        color: colors.primary.defaultdark\n      };\n    });\n    return transposedData;\n  }\n  function ChosenTrackData(pick) {\n    if (pick == '∞') {\n      return tasks;\n    } else if (pick == '☀') {\n      return tasks.filter(function (t) {\n        return t.track == undefined || t.track == 'DAILY' || t.track == 'all';\n      });\n    } else {\n      return tasks.filter(function (t) {\n        return t.track == pick;\n      });\n    }\n  }\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'flex-start',\n      alignItems: 'center'\n    },\n    children: [_jsx(FlatList, {\n      data: [{\n        'track': '∞',\n        'color': '#ffffff'\n      }, {\n        'track': '☀',\n        'color': '#D3DDDF'\n      }].concat(_toConsumableArray(new Set(tracks))),\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return _jsx(Pressable, {\n          onPress: function onPress() {\n            return setSelectedTrack(item.track);\n          },\n          style: [container.color, {\n            borderColor: selectedTrack == item.track ? colors.primary.purple : colors.primary.gray,\n            borderWidth: selectedTrack == item.track ? 2 : 1,\n            backgroundColor: item.color\n          }],\n          children: _jsx(Text, {\n            style: container.title,\n            children: item.track[0]\n          })\n        });\n      },\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      },\n      horizontal: true,\n      contentContainerStyle: {\n        height: 40,\n        margin: 10\n      }\n    }), _jsx(View, {\n      children: _jsx(Text, {\n        style: container.headertitle,\n        children: selectedTrack == '☀' ? 'Daily ☀' : selectedTrack\n      })\n    }), _jsxs(View, {\n      style: {\n        flex: 10,\n        width: '90%'\n      },\n      children: [_jsxs(View, {\n        style: container.statblock,\n        children: [_jsxs(View, {\n          style: {\n            alignItems: 'center'\n          },\n          children: [_jsx(Text, {\n            style: container.headerdate,\n            children: \"Recorded tasks\"\n          }), _jsx(Text, {\n            style: container.keyNumber,\n            children: taskCount\n          })]\n        }), _jsxs(View, {\n          style: {\n            alignItems: 'center'\n          },\n          children: [_jsx(Text, {\n            style: container.headerdate,\n            children: \"Completed tasks\"\n          }), _jsx(Text, {\n            style: container.keyNumber,\n            children: completedTasks\n          })]\n        })]\n      }), _jsx(View, {\n        style: {\n          alignItems: 'center'\n        },\n        children: _jsx(StackedBarChart, {\n          style: container.statblock,\n          data: {\n            labels: tasksData().map(function (t) {\n              return t.day;\n            }),\n            data: transposeTasksData(tasksData().map(function (t) {\n              return t;\n            })).map(function (t) {\n              return [t.completed, t.count - t.completed];\n            }),\n            barColors: [colors.primary.defaultdark, colors.primary.default]\n          },\n          xLabelsOffset: -5,\n          yLabelsOffset: -10,\n          width: width * 0.8,\n          withHorizontalLabels: true,\n          decimalPlaces: 0,\n          height: 160,\n          hideLegend: true,\n          stackedBar: true,\n          chartConfig: {\n            color: function color() {\n              var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n              return `rgba(26, 255, 146, ${opacity})`;\n            },\n            barPercentage: 0.2,\n            backgroundGradientFrom: colors.primary.default,\n            backgroundGradientTo: colors.primary.white,\n            decimalPlaces: 0,\n            useShadowColorFromDataset: false,\n            fillShadowGradient: colors.primary.defaultdark,\n            fillShadowGradientOpacity: 1,\n            propsForBackgroundLines: {\n              strokeDasharray: '',\n              strokeWidth: 1,\n              stroke: colors.primary.default,\n              strokeOpacity: 0.2\n            },\n            propsForLabels: {\n              fontSize: 6\n            },\n            labelColor: function labelColor() {\n              var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n              return `rgba(0, 0, 0, ${opacity})`;\n            }\n          }\n        })\n      }), _jsxs(View, {\n        style: container.statblock,\n        children: [_jsxs(View, {\n          style: {\n            alignItems: 'center'\n          },\n          children: [_jsx(Text, {\n            style: container.headerdate,\n            children: \"Recurring daily\"\n          }), _jsx(Text, {\n            style: container.headerdate,\n            children: \"tasks\"\n          }), _jsx(Text, {\n            style: container.keyNumber,\n            children: recurringdailyTasks\n          })]\n        }), _jsxs(View, {\n          style: {\n            alignItems: 'center'\n          },\n          children: [_jsx(Text, {\n            style: container.headerdate,\n            children: \"Completed recurring\"\n          }), _jsx(Text, {\n            style: container.headerdate,\n            children: \"daily tasks\"\n          }), _jsxs(Text, {\n            style: [container.keyNumber, {\n              display: recurringdailyTasks == 0 ? 'none' : 'flex'\n            }],\n            children: [(completedrecurringdailyTasks * 100 / recurringdailyTasks).toFixed(0), \"%\"]\n          })]\n        })]\n      })]\n    })]\n  });\n}\nexport default AnalyticsHome;","map":{"version":3,"names":["useState","container","colors","StackedBarChart","jsx","_jsx","jsxs","_jsxs","width","Dimensions","get","AnalyticsHome","_ref","db","tasks","statusrecords","tracks","year","month","_useState","_useState2","_slicedToArray","selectedTrack","setSelectedTrack","taskCount","ChosenTrackData","filter","c","length","completedTasks","taskState","recurringdailyTasks","recurring","monthly","completedrecurringdailyTasks","tasksData","data","_loop","i","count","day","completed","push","color","primary","default","transposeTasksData","transposedData","Array","fill","map","_","forEach","item","completedcolor","defaultdark","pick","t","track","undefined","View","style","flex","justifyContent","alignItems","children","FlatList","concat","_toConsumableArray","Set","renderItem","_ref2","Pressable","onPress","borderColor","purple","gray","borderWidth","backgroundColor","Text","title","keyExtractor","id","horizontal","contentContainerStyle","height","margin","headertitle","statblock","headerdate","keyNumber","labels","barColors","xLabelsOffset","yLabelsOffset","withHorizontalLabels","decimalPlaces","hideLegend","stackedBar","chartConfig","opacity","arguments","barPercentage","backgroundGradientFrom","backgroundGradientTo","white","useShadowColorFromDataset","fillShadowGradient","fillShadowGradientOpacity","propsForBackgroundLines","strokeDasharray","strokeWidth","stroke","strokeOpacity","propsForLabels","fontSize","labelColor","display","toFixed"],"sources":["/Users/elodie/Documents/GIT/todo/screens/Analytics/AnalyticsHome.tsx"],"sourcesContent":["import { FlatList, TextInput, TouchableOpacity, Button, Text, View, Dimensions, Pressable } from 'react-native';\nimport { useState, useEffect } from 'react';\nimport { Feather, Octicons } from '@expo/vector-icons';\nimport { SwipeListView } from 'react-native-swipe-list-view';\nimport { container, colors } from '../../styles';\nimport Task from '../../components/Task';\nimport uuid from 'react-native-uuid';\nimport { useForm, Controller, set } from 'react-hook-form';\nimport {KeyboardAwareScrollView} from 'react-native-keyboard-aware-scrollview'\nimport {StackedBarChart, LineChart, PieChart} from 'react-native-chart-kit';\n\nconst width = Dimensions.get('window').width;\n\nfunction AnalyticsHome({db, tasks, statusrecords, tracks, year, month}) {\n    \n\n\n    const [selectedTrack, setSelectedTrack] = useState('∞');\n    const taskCount= ChosenTrackData(selectedTrack).filter(c=>(c.year==year && c.month==month)).length;\n    const completedTasks = ChosenTrackData(selectedTrack).filter(c => (c.taskState==2 && c.year==year && c.month==month)).length;\n    const recurringdailyTasks = ChosenTrackData(selectedTrack).filter(c => (c.recurring==1 && c.year==year && c.month==month && c.monthly==false)).length;\n    const completedrecurringdailyTasks = ChosenTrackData(selectedTrack).filter(c => (c.taskState==2 && c.recurring==1 && c.year==year && c.month==month && c.monthly==false)).length;\n\n    const tasksData = () => {\n        let data = [];\n        for (let i=1; i<=31; i++) {\n            let count = ChosenTrackData(selectedTrack).filter(c => (c.day==i && c.year==year && c.month==month)).length;\n            let completed = ChosenTrackData(selectedTrack).filter(c => (c.taskState==2 && c.day==i && c.year==year && c.month==month)).length;\n            data.push({day:i, count:count, completed:completed, color:colors.primary.default});\n        }\n        return data;\n    }\n\n    function transposeTasksData(data) {\n        const transposedData = new Array(31).fill(null).map(_ => ({}));\n    \n        data.forEach(item => {\n            transposedData[item.day - 1] = {\n                day: item.day,\n                completed: item.completed,\n                count: item.count,\n                completedcolor: colors.primary.default,\n                color: colors.primary.defaultdark,\n            };\n        });\n    \n        return transposedData;\n    }\n\n\n    function ChosenTrackData(pick) {\n        if (pick=='∞') {\n            return tasks;\n        } \n        else if(pick=='☀'){\n            return tasks.filter(t => (t.track==undefined || t.track=='DAILY' || t.track=='all'));\n        }\n        else {\n            return tasks.filter(t => t.track==pick);\n        }\n    }\n\n  return (\n    <View style={{flex:1,justifyContent:'flex-start',alignItems:'center'}}>\n        <FlatList\n            data={[{'track':'∞','color':'#ffffff'},{'track':'☀','color':'#D3DDDF'},...new Set(tracks)]}\n            renderItem={({item}) => (\n                <Pressable onPress={()=>setSelectedTrack(item.track)} style={[container.color,{borderColor:selectedTrack==item.track?colors.primary.purple:colors.primary.gray, borderWidth:selectedTrack==item.track?2:1, backgroundColor:item.color}]}>\n                    <Text style={container.title}>{item.track[0]}</Text>\n                </Pressable>\n            )}\n            keyExtractor={item => item.id}\n            horizontal={true}\n            contentContainerStyle={{height:40, margin:10}}\n        />\n        <View>\n            <Text style={container.headertitle}>{selectedTrack=='☀'?'Daily ☀':selectedTrack}</Text>\n        </View>\n        <View style={{flex:10, width:'90%'}}>\n            <View style={container.statblock}>\n                <View style={{alignItems:'center'}}>\n                    <Text style={container.headerdate}>Recorded tasks</Text>\n                    <Text style={container.keyNumber}>{taskCount}</Text>\n                </View>\n                <View style={{alignItems:'center'}}>\n                    <Text style={container.headerdate}>Completed tasks</Text>\n                    <Text style={container.keyNumber}>{completedTasks}</Text>\n                </View>\n            </View>\n            <View style={{alignItems:'center'}}>\n                    <StackedBarChart\n                        style={container.statblock}\n                        data={\n                            {\n                                labels: tasksData().map(t=>t.day),\n                                data: transposeTasksData(tasksData().map(t=>t)).map(t=>[t.completed,t.count-t.completed]),\n                                barColors: [colors.primary.defaultdark, colors.primary.default],\n                            }\n                        }\n                        xLabelsOffset={-5}\n                        yLabelsOffset={-10}\n                        width={width*0.8}\n                        withHorizontalLabels={true}\n                        decimalPlaces={0}\n                        height={160}\n                        hideLegend={true}\n                        stackedBar={true}\n                        chartConfig = {{\n                            color: (opacity = 1) => `rgba(26, 255, 146, ${opacity})`,\n                            barPercentage: 0.2,\n                            backgroundGradientFrom: colors.primary.default,\n                            backgroundGradientTo: colors.primary.white,\n                            decimalPlaces: 0,\n                            useShadowColorFromDataset: false,\n                            fillShadowGradient: colors.primary.defaultdark,\n                            fillShadowGradientOpacity: 1,\n                            propsForBackgroundLines: {\n                                strokeDasharray: '', \n                                strokeWidth: 1,\n                                stroke: colors.primary.default,\n                                strokeOpacity: 0.2,\n                            },\n                            propsForLabels: {\n                                fontSize: 6,\n                            },\n                            labelColor: (opacity = 1) => `rgba(0, 0, 0, ${opacity})`,\n                        }}\n                    />\n            </View>\n            <View style={container.statblock}>\n                <View style={{alignItems:'center'}}>\n                    <Text style={container.headerdate}>Recurring daily</Text>\n                    <Text style={container.headerdate}>tasks</Text>\n                    <Text style={container.keyNumber}>{recurringdailyTasks}</Text>\n                </View>\n                <View style={{alignItems:'center'}}>\n                    <Text style={container.headerdate}>Completed recurring</Text>\n                    <Text style={container.headerdate}>daily tasks</Text>\n                    <Text style={[container.keyNumber,{display: recurringdailyTasks==0?'none':'flex'}]}>{(completedrecurringdailyTasks*100/recurringdailyTasks).toFixed(0)}%</Text>\n                </View>\n\n            </View>\n        </View>\n        \n    </View>\n  );\n}\nexport default AnalyticsHome;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}