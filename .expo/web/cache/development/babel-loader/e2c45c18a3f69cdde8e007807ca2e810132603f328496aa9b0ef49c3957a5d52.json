{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { useState, useEffect } from 'react';\nimport NewTask from \"../modal/NewTask\";\nimport { Feather, Octicons } from '@expo/vector-icons';\nimport { SwipeListView } from 'react-native-swipe-list-view';\nimport { container, colors, paleColor } from \"../styles\";\nimport Task from \"./Task\";\nimport uuid from 'react-native-uuid';\nimport { useForm, Controller } from 'react-hook-form';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar width = Dimensions.get('window').width;\nvar height = Dimensions.get('window').height;\nfunction TodayTasks(_ref) {\n  var db = _ref.db,\n    tasks = _ref.tasks,\n    setTasks = _ref.setTasks,\n    tracks = _ref.tracks,\n    setTracks = _ref.setTracks,\n    load = _ref.load,\n    loadx = _ref.loadx,\n    date = _ref.date,\n    sections = _ref.sections;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isKeyboardOpen = _useState2[0],\n    setIsKeyboardOpen = _useState2[1];\n  var openKeyboardAnimationValue = new Animated.Value(0);\n  var closeKeyboardAnimationValue = new Animated.Value(1);\n  var startOpenAnimation = function startOpenAnimation() {\n    Animated.timing(openKeyboardAnimationValue, {\n      toValue: 1,\n      duration: 300,\n      easing: Easing.ease,\n      useNativeDriver: false\n    }).start();\n  };\n  var startCloseAnimation = function startCloseAnimation() {\n    Animated.timing(closeKeyboardAnimationValue, {\n      toValue: 1,\n      duration: 300,\n      easing: Easing.ease,\n      useNativeDriver: false\n    }).start();\n  };\n  useEffect(function () {\n    if (isKeyboardOpen) {\n      startOpenAnimation();\n    } else {\n      startCloseAnimation();\n    }\n  }, [isKeyboardOpen]);\n  useEffect(function () {\n    var keyboardDidShowListener = Keyboard.addListener('keyboardDidShow', function () {\n      setIsKeyboardOpen(true);\n    });\n    var keyboardDidHideListener = Keyboard.addListener('keyboardDidHide', function () {\n      setIsKeyboardOpen(false);\n    });\n    return function () {\n      keyboardDidShowListener.remove();\n      keyboardDidHideListener.remove();\n    };\n  }, []);\n  var today = new Date();\n  var month = today.getMonth();\n  var year = today.getFullYear();\n  var day = today.getDate();\n  console.log(today);\n  var tabstitles = _toConsumableArray(new Set(tracks.map(function (c) {\n    return c.track;\n  })));\n  var tabstitleslength = tabstitles.length;\n  var _useForm = useForm(),\n    control = _useForm.control,\n    handleSubmit = _useForm.handleSubmit,\n    reset = _useForm.reset;\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    logs = _useState4[0],\n    setLogs = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isLoading = _useState6[0],\n    setIsLoading = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    addModalVisible = _useState8[0],\n    setAddModalVisible = _useState8[1];\n  var _useState9 = useState('DAILY'),\n    _useState10 = _slicedToArray(_useState9, 2),\n    selectedTab = _useState10[0],\n    setSelectedTab = _useState10[1];\n  var _useState11 = useState(selectedTab == undefined ? colors.primary.default : tracks.filter(function (c) {\n      return c.track == selectedTab;\n    }).map(function (c) {\n      return c.color;\n    })[0]),\n    _useState12 = _slicedToArray(_useState11, 2),\n    selectedTabColor = _useState12[0],\n    setSelectedTabColor = _useState12[1];\n  var _useState13 = useState(''),\n    _useState14 = _slicedToArray(_useState13, 2),\n    value = _useState14[0],\n    setValue = _useState14[1];\n  useEffect(function () {\n    db.transaction(function (tx) {\n      tx.executeSql('CREATE TABLE IF NOT EXISTS logs (id TEXT PRIMARY KEY, year INTEGER, month INTEGER, day INTEGER, UNIQUE(year,month,day))');\n    });\n    db.transaction(function (tx) {\n      tx.executeSql('SELECT * FROM logs', null, function (txObj, resultSet) {\n        return setLogs(resultSet.rows._array);\n      }, function (txObj, error) {\n        return console.log('error selecting logs');\n      });\n    });\n    setIsLoading(false);\n  }, []);\n  useEffect(function () {\n    if (!isLoading && tasks.length > 0 && logs.filter(function (c) {\n      return c.year == year && c.month == month && c.day == day;\n    })[0] == undefined) {\n      if (logs.length > 0) {\n        var existingLogs = _toConsumableArray(logs);\n        var lastLogIndex = logs.length - 1;\n        var lastLog = logs[lastLogIndex];\n        db.transaction(function (tx) {\n          tx.executeSql('INSERT INTO logs (id,year,month,day) values (?,?,?,?)', [uuid.v4(), year, month, day], function (txtObj, resultSet) {\n            existingLogs.push({\n              id: uuid.v4(),\n              year: year,\n              month: month,\n              day: day\n            });\n            setLogs(existingLogs);\n          });\n        });\n        var existingTasks = _toConsumableArray(tasks);\n        var existingRecurringTasks = existingTasks.length == 0 ? '' : existingTasks.filter(function (c) {\n          return c.recurring == 1 && c.monthly == false && c.year == lastLog.year && c.month == lastLog.month && c.day == lastLog.day;\n        });\n        existingLogs = [];\n        if (lastLog !== undefined) {\n          var daysBetweenLastAndToday = Math.floor((today.getTime() - new Date(lastLog.year, lastLog.month, lastLog.day).getTime()) / (1000 * 60 * 60 * 24));\n          for (var j = 1; j < daysBetweenLastAndToday + 1; j++) {\n            var newDate = new Date(new Date(lastLog.year, lastLog.month, lastLog.day).getTime() + j * 1000 * 60 * 60 * 24);\n            var _loop = function _loop() {\n              var newTask = existingRecurringTasks[i].task;\n              var copytrack = existingRecurringTasks[i].track;\n              var copyTime = existingRecurringTasks[i].time;\n              db.transaction(function (tx) {\n                tx.executeSql('INSERT INTO tasks (id,task,year,month,day,taskState,recurring,monthly,track,time, section) values (?,?,?,?,?,?,?,?,?,?,?)', [uuid.v4(), newTask, newDate.getFullYear(), newDate.getMonth(), newDate.getDate(), 0, 1, false, copytrack, copyTime, undefined], function (txtObj, resultSet) {\n                  existingTasks.push({\n                    id: uuid.v4(),\n                    task: newTask,\n                    year: newDate.getFullYear(),\n                    month: newDate.getMonth(),\n                    day: newDate.getDate(),\n                    taskState: 0,\n                    recurring: 1,\n                    monthly: false,\n                    track: copytrack,\n                    time: copyTime,\n                    section: undefined\n                  });\n                  setTasks(existingTasks);\n                });\n              });\n            };\n            for (var i = 0; i < existingRecurringTasks.length; i++) {\n              _loop();\n            }\n          }\n          setTasks(existingTasks);\n        }\n      } else {\n        var _existingLogs = _toConsumableArray(logs);\n        if (_existingLogs.filter(function (c) {\n          return c.year == year && c.month == month && c.day == day;\n        })[0] == undefined && isLoading == false) {\n          db.transaction(function (tx) {\n            tx.executeSql('INSERT INTO logs (id,year,month,day) values (?,?,?,?)', [uuid.v4(), year, month, day], function (txtObj, resultSet) {\n              _existingLogs.push({\n                id: uuid.v4(),\n                year: year,\n                month: month,\n                day: day\n              });\n              setLogs(_existingLogs);\n            });\n          });\n        }\n      }\n    }\n  }, [isLoading, logs]);\n  if (isLoading) {\n    return _jsx(View, {\n      children: _jsx(Text, {\n        children: \" Is Loading...\"\n      })\n    });\n  }\n  var addTask = function () {\n    var _ref2 = _asyncToGenerator(function* (data) {\n      var existingTasks = _toConsumableArray(tasks);\n      db.transaction(function (tx) {\n        tx.executeSql('INSERT INTO tasks (id,task,year,month,day,taskState,recurring, monthly, track, time, section) values (?,?,?,?,?,?,?,?,?,?,?)', [uuid.v4(), data.task, date.getFullYear(), date.getMonth(), date.getDate(), 0, 0, false, selectedTab == 'all' ? 'DAILY' : selectedTab, null, undefined], function (txtObj, resultSet) {\n          existingTasks.push({\n            id: uuid.v4(),\n            task: data.task,\n            year: date.getFullYear(),\n            month: date.getMonth(),\n            day: date.getDate(),\n            taskState: 0,\n            recurring: 0,\n            monthly: false,\n            track: selectedTab == 'all' ? 'DAILY' : selectedTab,\n            time: null,\n            section: undefined\n          });\n          setTasks(existingTasks);\n        }, function (txtObj, error) {\n          return console.warn('Error inserting data:', error);\n        });\n      });\n      loadx(!load);\n      reset();\n    });\n    return function addTask(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var dailyData = tasks.filter(function (c) {\n    return c.day == date.getDate() && c.month == date.getMonth() && c.year == date.getFullYear();\n  });\n  var DeleteItem = function DeleteItem(_ref3) {\n    var id = _ref3.id;\n    return _jsx(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'flex-end',\n        paddingRight: 25,\n        backgroundColor: 'darkred'\n      },\n      children: _jsx(Pressable, {\n        onPress: function onPress() {\n          return db.transaction(function (tx) {\n            tx.executeSql('DELETE FROM tasks WHERE id = ?', [id], function (txObj, resultSet) {\n              if (resultSet.rowsAffected > 0) {\n                var existingTasks = _toConsumableArray(tasks).filter(function (task) {\n                  return task.id !== id;\n                });\n                setTasks(existingTasks);\n              }\n            }, function (txObj, error) {\n              return console.log(error);\n            });\n          });\n        },\n        children: _jsx(Feather, {\n          name: \"trash-2\",\n          size: 25,\n          color: 'white'\n        })\n      })\n    });\n  };\n  var TabItem = function TabItem(_ref4) {\n    var item = _ref4.item,\n      index = _ref4.index,\n      selected = _ref4.selected;\n    return _jsx(Pressable, {\n      onPress: function onPress() {\n        return setSelectedTab(item.track);\n      },\n      style: [container.tab, {\n        zIndex: item.track == selectedTab ? 1 : 0,\n        bottom: item.track == selectedTab ? 0 : 1,\n        borderRightWidth: item.track == selectedTab ? 0.5 : 0,\n        borderLeftWidth: item.track == selectedTab ? 0.5 : 0,\n        borderTopWidth: item.track == selectedTab ? 0.5 : 0,\n        backgroundColor: item.color !== \"\" ? paleColor(item.color) : colors.primary.default\n      }],\n      children: _jsx(Text, {\n        style: container.tabtext,\n        children: item.track\n      })\n    });\n  };\n  return _jsxs(View, {\n    style: container.body,\n    children: [_jsxs(View, {\n      style: container.block,\n      children: [_jsxs(View, {\n        style: {\n          zIndex: 1,\n          bottom: -1,\n          flexDirection: 'row'\n        },\n        children: [_jsx(View, {\n          style: {\n            flex: 1,\n            flexDirection: 'row'\n          },\n          children: _jsx(FlatList, {\n            data: [].concat(_toConsumableArray(new Set(tracks)), [{\n              'id': 'daily',\n              'track': 'DAILY',\n              'color': colors.primary.default\n            }]),\n            renderItem: function renderItem(_ref5) {\n              var item = _ref5.item,\n                index = _ref5.index;\n              return _jsx(TabItem, {\n                item: item,\n                index: index,\n                selected: selectedTab == item.track ? -0.5 : 0\n              });\n            },\n            horizontal: true,\n            bounces: true,\n            keyExtractor: function keyExtractor(item, index) {\n              return index.toString();\n            },\n            contentContainerStyle: {\n              flexDirection: 'row-reverse',\n              justifyContent: 'flex-start',\n              alignItems: 'flex-end',\n              paddingLeft: 10\n            },\n            showsHorizontalScrollIndicator: false\n          })\n        }), _jsx(Pressable, {\n          onPress: function onPress() {\n            return setSelectedTab('all');\n          },\n          children: _jsx(Octicons, {\n            name: \"stack\",\n            size: 23,\n            style: {\n              marginHorizontal: 10,\n              marginTop: 3\n            }\n          })\n        })]\n      }), _jsxs(Animated.View, {\n        style: [container.listblock, {\n          marginBottom: isKeyboardOpen ? openKeyboardAnimationValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0, height * 3 / 10]\n          }) : closeKeyboardAnimationValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [height * 3 / 10, 0]\n          }),\n          backgroundColor: colors.primary.white\n        }],\n        children: [_jsx(SwipeListView, {\n          data: selectedTab == 'all' ? dailyData : selectedTab == 'DAILY' ? dailyData.filter(function (c) {\n            return c.track == undefined || c.track == 'DAILY' || c.track == 'UNLISTED';\n          }) : dailyData.filter(function (c) {\n            return c.track == selectedTab;\n          }),\n          scrollEnabled: true,\n          renderItem: function renderItem(_ref6) {\n            var item = _ref6.item;\n            return _jsx(Task, {\n              db: db,\n              tasks: tasks,\n              setTasks: setTasks,\n              tracks: tracks,\n              setTracks: setTracks,\n              sections: sections,\n              date: date,\n              task: item.task,\n              taskState: item.taskState,\n              id: item.id,\n              track: item.track,\n              time: item.time,\n              section: item.section,\n              trackScreen: false,\n              archive: false,\n              recurring: item.recurring,\n              tabcolor: item.track == undefined ? colors.primary.defaultdark : tracks.filter(function (c) {\n                return c.track == item.track;\n              }).map(function (c) {\n                return c.color;\n              })[0]\n            });\n          },\n          renderHiddenItem: function renderHiddenItem(_ref7) {\n            var item = _ref7.item;\n            return _jsx(DeleteItem, {\n              id: item.id\n            });\n          },\n          bounces: false,\n          rightOpenValue: -80,\n          disableRightSwipe: true,\n          closeOnRowBeginSwipe: true,\n          contentContainerStyle: {\n            marginTop: 1\n          }\n        }), _jsxs(View, {\n          style: {\n            width: '100%',\n            flexDirection: 'row',\n            height: 40,\n            paddingLeft: 15,\n            alignItems: 'center',\n            borderTopWidth: 1,\n            borderTopColor: colors.primary.gray\n          },\n          children: [_jsx(Controller, {\n            control: control,\n            name: \"task\",\n            render: function render(_ref8) {\n              var _ref8$field = _ref8.field,\n                value = _ref8$field.value,\n                onChange = _ref8$field.onChange,\n                onBlur = _ref8$field.onBlur,\n                error = _ref8.fieldState.error;\n              return _jsxs(View, {\n                style: {\n                  flex: 1,\n                  flexDirection: 'column'\n                },\n                children: [_jsx(TextInput, {\n                  value: value,\n                  onChangeText: onChange,\n                  onBlur: onBlur,\n                  placeholder: \"Insert new task in this track for this day\",\n                  style: {\n                    flex: 1,\n                    height: 40,\n                    borderColor: error ? 'red' : '#e8e8e8'\n                  }\n                }), error && _jsx(Text, {\n                  style: {\n                    color: 'red',\n                    alignSelf: 'stretch'\n                  },\n                  children: error.message || 'Error'\n                })]\n              });\n            },\n            rules: {\n              required: 'Input a Habit',\n              minLength: {\n                value: 3,\n                message: 'Task should be at least 3 characters long'\n              },\n              maxLength: {\n                value: 50,\n                message: 'Task should be max 50 characters long'\n              }\n            }\n          }), _jsx(Pressable, {\n            onPress: handleSubmit(addTask),\n            style: {\n              marginHorizontal: 10\n            },\n            children: _jsx(Feather, {\n              name: \"plus-circle\",\n              size: 20,\n              color: colors.primary.purple\n            })\n          })]\n        })]\n      })]\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return setAddModalVisible(true);\n      },\n      style: {\n        justifyContent: 'center',\n        position: 'absolute',\n        bottom: 55,\n        right: 15,\n        flex: 1\n      },\n      children: _jsx(Feather, {\n        name: \"plus-circle\",\n        size: 40,\n        color: colors.primary.purple\n      })\n    }), _jsx(NewTask, {\n      addModalVisible: addModalVisible === true,\n      setAddModalVisible: setAddModalVisible,\n      db: db,\n      tasks: tasks,\n      setTasks: setTasks,\n      tracks: tracks,\n      track: undefined,\n      section: undefined,\n      pageDate: date,\n      tracksScreen: false,\n      monthly: false\n    })]\n  });\n}\nexport default TodayTasks;","map":{"version":3,"names":["useState","useEffect","NewTask","Feather","Octicons","SwipeListView","container","colors","paleColor","Task","uuid","useForm","Controller","jsx","_jsx","jsxs","_jsxs","width","Dimensions","get","height","TodayTasks","_ref","db","tasks","setTasks","tracks","setTracks","load","loadx","date","sections","_useState","_useState2","_slicedToArray","isKeyboardOpen","setIsKeyboardOpen","openKeyboardAnimationValue","Animated","Value","closeKeyboardAnimationValue","startOpenAnimation","timing","toValue","duration","easing","Easing","ease","useNativeDriver","start","startCloseAnimation","keyboardDidShowListener","Keyboard","addListener","keyboardDidHideListener","remove","today","Date","month","getMonth","year","getFullYear","day","getDate","console","log","tabstitles","_toConsumableArray","Set","map","c","track","tabstitleslength","length","_useForm","control","handleSubmit","reset","_useState3","_useState4","logs","setLogs","_useState5","_useState6","isLoading","setIsLoading","_useState7","_useState8","addModalVisible","setAddModalVisible","_useState9","_useState10","selectedTab","setSelectedTab","_useState11","undefined","primary","default","filter","color","_useState12","selectedTabColor","setSelectedTabColor","_useState13","_useState14","value","setValue","transaction","tx","executeSql","txObj","resultSet","rows","_array","error","existingLogs","lastLogIndex","lastLog","v4","txtObj","push","id","existingTasks","existingRecurringTasks","recurring","monthly","daysBetweenLastAndToday","Math","floor","getTime","j","newDate","_loop","newTask","i","task","copytrack","copyTime","time","taskState","section","View","children","Text","addTask","_ref2","_asyncToGenerator","data","warn","_x","apply","arguments","dailyData","DeleteItem","_ref3","style","flex","justifyContent","alignItems","paddingRight","backgroundColor","Pressable","onPress","rowsAffected","name","size","TabItem","_ref4","item","index","selected","tab","zIndex","bottom","borderRightWidth","borderLeftWidth","borderTopWidth","tabtext","body","block","flexDirection","FlatList","concat","renderItem","_ref5","horizontal","bounces","keyExtractor","toString","contentContainerStyle","paddingLeft","showsHorizontalScrollIndicator","marginHorizontal","marginTop","listblock","marginBottom","interpolate","inputRange","outputRange","white","scrollEnabled","_ref6","trackScreen","archive","tabcolor","defaultdark","renderHiddenItem","_ref7","rightOpenValue","disableRightSwipe","closeOnRowBeginSwipe","borderTopColor","gray","render","_ref8","_ref8$field","field","onChange","onBlur","fieldState","TextInput","onChangeText","placeholder","borderColor","alignSelf","message","rules","required","minLength","maxLength","purple","TouchableOpacity","position","right","pageDate","tracksScreen"],"sources":["/Users/elodie/Documents/GIT/todo/components/TodayTasks.tsx"],"sourcesContent":["import { Animated, Easing, Keyboard, FlatList, TextInput, TouchableOpacity, Text, View, Dimensions, Pressable } from 'react-native';\nimport { useState, useEffect } from 'react';\nimport NewTask from '../modal/NewTask';\nimport { Feather, Octicons } from '@expo/vector-icons';\nimport { SwipeListView } from 'react-native-swipe-list-view';\nimport { container, colors, paleColor } from '../styles';\nimport Task from './Task';\nimport uuid from 'react-native-uuid';\nimport { useForm, Controller, set } from 'react-hook-form';\n\nconst width = Dimensions.get('window').width;\nconst height = Dimensions.get('window').height;\n\nfunction TodayTasks({db, tasks, setTasks, tracks, setTracks, load, loadx, date, sections}) {\n  \n  const [isKeyboardOpen, setIsKeyboardOpen] = useState(false);\n  const openKeyboardAnimationValue = new Animated.Value(0);\n  const closeKeyboardAnimationValue = new Animated.Value(1);\n  \n    const startOpenAnimation = () => {\n      Animated.timing(openKeyboardAnimationValue, {\n        toValue: 1,\n        duration: 300,\n        easing: Easing.ease,\n        useNativeDriver: false,\n      }).start();\n    };\n    \n    const startCloseAnimation = () => {\n      Animated.timing(closeKeyboardAnimationValue, {\n        toValue: 1,\n        duration: 300,\n        easing: Easing.ease,\n        useNativeDriver: false,\n      }).start();\n    };\n\n    useEffect(() => {\n      if (isKeyboardOpen) {\n        startOpenAnimation();\n      } else {\n        startCloseAnimation();\n      }\n    }, [isKeyboardOpen]);\n\n  useEffect(() => {\n    const keyboardDidShowListener = Keyboard.addListener('keyboardDidShow', () => {\n      setIsKeyboardOpen(true);\n    });\n\n    const keyboardDidHideListener = Keyboard.addListener('keyboardDidHide', () => {\n      setIsKeyboardOpen(false);\n    });\n\n    return () => {\n      keyboardDidShowListener.remove();\n      keyboardDidHideListener.remove();\n    };\n  }, []);\n\n  const today = new Date();\n  const month = today.getMonth();\n  const year = today.getFullYear();\n  const day = today.getDate();\n\n  console.log(today);\n\n  const tabstitles =[... new Set(tracks.map(c => c.track))];\n  const tabstitleslength = tabstitles.length;\n\n  const {control, handleSubmit, reset} = useForm();\n\n  const [logs, setLogs] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [addModalVisible, setAddModalVisible] = useState(false);\n  const [selectedTab, setSelectedTab] = useState('DAILY');\n  const [selectedTabColor, setSelectedTabColor] = useState(selectedTab==undefined? colors.primary.default:tracks.filter(c=>c.track==selectedTab).map(c=>c.color)[0]);\n  const [value, setValue] = useState('');\n\n  useEffect(() => {\n      db.transaction(tx => {\n        tx.executeSql('CREATE TABLE IF NOT EXISTS logs (id TEXT PRIMARY KEY, year INTEGER, month INTEGER, day INTEGER, UNIQUE(year,month,day))')\n      });\n  \n      db.transaction(tx => {\n        tx.executeSql('SELECT * FROM logs', null,\n        (txObj, resultSet) => setLogs(resultSet.rows._array),\n        (txObj, error) => console.log('error selecting logs')\n        );\n      });\n      setIsLoading(false);\n    },[]);\n\n    useEffect(() => {\n      if (!isLoading && tasks.length > 0 && logs.filter(c=>(c.year==year && c.month==month && c.day==day))[0]==undefined) {\n        if(logs.length > 0){\n          let existingLogs = [...logs]; \n          let lastLogIndex = logs.length-1;\n          let lastLog = logs[lastLogIndex]; \n            db.transaction(tx => {\n              tx.executeSql('INSERT INTO logs (id,year,month,day) values (?,?,?,?)',[ uuid.v4(),year,month,day],\n                (txtObj,resultSet)=> {    \n                  existingLogs.push({ id: uuid.v4(), year:year, month:month, day:day});\n                  setLogs(existingLogs);                      \n                },\n              );\n            });\n\n            let existingTasks=[...tasks];\n\n            let existingRecurringTasks=(existingTasks.length==0)? '':existingTasks.filter(c=>(c.recurring==1 && c.monthly==false && c.year==lastLog.year && c.month==lastLog.month && c.day==lastLog.day));\n            existingLogs=[];\n\n            if (lastLog!==undefined) {\n              var daysBetweenLastAndToday = Math.floor((today.getTime() - new Date(lastLog.year,lastLog.month,lastLog.day).getTime())/(1000*60*60*24));\n              for(var j=1;j<daysBetweenLastAndToday+1;j++){\n                var newDate= new Date(new Date(lastLog.year,lastLog.month,lastLog.day).getTime()+j*1000*60*60*24);\n                for (var i=0; i<existingRecurringTasks.length;i++){    \n                  let newTask=existingRecurringTasks[i].task;\n                  let copytrack=existingRecurringTasks[i].track;\n                  let copyTime=existingRecurringTasks[i].time;\n                  db.transaction(tx => {\n                    tx.executeSql('INSERT INTO tasks (id,task,year,month,day,taskState,recurring,monthly,track,time, section) values (?,?,?,?,?,?,?,?,?,?,?)',\n                    [ uuid.v4(),newTask,newDate.getFullYear(),newDate.getMonth(),newDate.getDate(),0,1,false,copytrack,copyTime,undefined],\n                      (txtObj,resultSet)=> {   \n                        existingTasks.push({ id: uuid.v4(), task: newTask, year:newDate.getFullYear(), month:newDate.getMonth(), day:newDate.getDate(), taskState:0, recurring:1, monthly:false, track:copytrack, time:copyTime, section: undefined});\n                        setTasks(existingTasks);\n                      },\n                    );\n                  });\n                }\n              }\n              setTasks(existingTasks);\n            }\n        }\n        else {\n          let existingLogs = [...logs];  \n          if(existingLogs.filter(c=>(c.year==year && c.month==month && c.day==day))[0]==undefined && isLoading==false){\n            db.transaction(tx => {\n              tx.executeSql('INSERT INTO logs (id,year,month,day) values (?,?,?,?)',\n              [ uuid.v4(),year,month,day],\n                (txtObj,resultSet)=> {    \n                  existingLogs.push({ id: uuid.v4(), year:year, month:month, day:day});\n                  setLogs(existingLogs);\n                },\n              );\n            });\n          }\n        }\n      }\n    },[isLoading, logs]);\n\n    if (isLoading) {\n      return (\n        <View>\n          <Text> Is Loading...</Text>\n        </View>\n      )\n  }\n\n\n  const addTask = async (data) => {\n    let existingTasks = [...tasks]; \n    db.transaction((tx) => {\n      tx.executeSql('INSERT INTO tasks (id,task,year,month,day,taskState,recurring, monthly, track, time, section) values (?,?,?,?,?,?,?,?,?,?,?)',\n      [uuid.v4(),data.task,date.getFullYear(),date.getMonth(),date.getDate(),0,0,false,selectedTab=='all'?'DAILY':selectedTab,null,undefined],\n      (txtObj,resultSet)=> {    \n        existingTasks.push({ id: uuid.v4(), task: data.task, year:date.getFullYear(), month:date.getMonth(), day:date.getDate(), taskState:0, recurring:0, \n          monthly:false, track:selectedTab=='all'?'DAILY':selectedTab, time:null, section: undefined});\n        setTasks(existingTasks);\n      },\n      (txtObj, error) => console.warn('Error inserting data:', error)\n      );\n    });\n    loadx(!load);\n    reset();\n  };\n\n  const dailyData = tasks.filter(c=>(c.day==date.getDate() && c.month==date.getMonth() && c.year==date.getFullYear()));\n\n  const DeleteItem = ({ id }) => (\n    <View style={{flex: 1,justifyContent: 'center', alignItems: 'flex-end', paddingRight: 25, backgroundColor:'darkred'}}>\n      <Pressable onPress={ () =>\n        db.transaction(tx=> {\n          tx.executeSql('DELETE FROM tasks WHERE id = ?', [id],\n            (txObj, resultSet) => {\n              if (resultSet.rowsAffected > 0) {\n                let existingTasks = [...tasks].filter(task => task.id !==id);\n                setTasks(existingTasks);\n              }\n            },\n            (txObj, error) => console.log(error)\n          );       \n        })  \n      }>\n          <Feather name=\"trash-2\" size={25} color={'white'}/>\n      </Pressable> \n    </View>\n  );\n  const TabItem = ({item,index, selected}) => {\n    return (\n        <Pressable onPress={()=>setSelectedTab(item.track)} style={[container.tab,{zIndex:item.track==selectedTab?1:0,bottom:item.track==selectedTab? 0:1,borderRightWidth:item.track==selectedTab? 0.5:0,borderLeftWidth:item.track==selectedTab? 0.5:0,borderTopWidth:item.track==selectedTab? 0.5:0,backgroundColor:item.color!==\"\"?paleColor(item.color):colors.primary.default}]}>\n            <Text style={container.tabtext}>\n                {item.track}\n            </Text>\n      </Pressable>\n    );\n};\n\n  return (\n\n      <View style={container.body}>\n        <View style={container.block}>\n          <View style={{zIndex:1, bottom:-1,flexDirection:'row'}}>\n            <View style={{flex:1,flexDirection:'row'}}>\n              <FlatList\n                data={[... new Set(tracks),{'id':'daily','track':'DAILY','color':colors.primary.default}]} \n                renderItem={({item,index}) => \n                  <TabItem item={item} index={index} selected={selectedTab==item.track?-0.5:0} />\n                }\n                horizontal={true}\n                bounces={true}\n                keyExtractor= {(item,index) => index.toString()}\n                contentContainerStyle={{flexDirection:'row-reverse',justifyContent:'flex-start',alignItems:'flex-end',paddingLeft:10}}\n                showsHorizontalScrollIndicator={false}\n              />\n            </View>\n            <Pressable onPress={()=> setSelectedTab('all')}>\n              <Octicons name='stack' size={23} style={{marginHorizontal:10,marginTop:3}}/>\n            </Pressable>\n          </View>\n          <Animated.View\n            style={[\n              container.listblock,\n              {\n                marginBottom: isKeyboardOpen\n                  ? openKeyboardAnimationValue.interpolate({\n                      inputRange: [0, 1],\n                      outputRange: [0, height * 3 / 10],\n                    })\n                  : closeKeyboardAnimationValue.interpolate({\n                      inputRange: [0, 1],\n                      outputRange: [height * 3 / 10, 0],\n                    }),\n                backgroundColor: colors.primary.white\n              }\n            ]}\n          >\n            <SwipeListView \n              data={selectedTab=='all'? dailyData : selectedTab=='DAILY'? dailyData.filter(c=>(c.track==undefined || c.track=='DAILY' || c.track=='UNLISTED')) : dailyData.filter(c=>(c.track==selectedTab))} \n              scrollEnabled={true} \n              renderItem={({ item }) => \n                <Task db={db} tasks={tasks} setTasks={setTasks} tracks={tracks} setTracks={setTracks} \n                  sections={sections} date={date} task={item.task} taskState={item.taskState} id={item.id} track={item.track} \n                  time={item.time} section={item.section} trackScreen={false} archive={false} recurring={item.recurring} tabcolor={item.track==undefined? colors.primary.defaultdark:tracks.filter(c=>c.track==item.track).map(c=>c.color)[0]}/>} \n                  renderHiddenItem={({ item }) => <DeleteItem id={item.id} \n                />} \n              bounces={false} \n              rightOpenValue={-80}\n              disableRightSwipe={true}\n              closeOnRowBeginSwipe={true}\n              contentContainerStyle={{marginTop:1}}\n              />\n            <View style={{width:'100%',flexDirection:'row', height:40, paddingLeft:15, alignItems:'center', borderTopWidth:1,borderTopColor:colors.primary.gray}}>\n              <Controller\n                control= {control}\n                name=\"task\"\n                render={({field: {value, onChange, onBlur}, fieldState: {error}}) => (\n                  <View style={{flex:1,flexDirection:'column'}}>\n                    <TextInput\n                      value={value}\n                      onChangeText={onChange}\n                      onBlur={onBlur}\n                      placeholder=\"Insert new task in this track for this day\"\n                      style={{flex:1,height:40, borderColor: error ? 'red' : '#e8e8e8'}}\n                    />\n                    {error && (\n                      <Text style={{color: 'red', alignSelf: 'stretch'}}>{error.message || 'Error'}</Text>\n                    )}\n                  </View>\n                )}\n                rules={{\n                  required: 'Input a Habit',\n                  minLength: {\n                    value: 3,\n                    message: 'Task should be at least 3 characters long',\n                  },\n                  maxLength: {\n                    value: 50,\n                    message: 'Task should be max 50 characters long',\n                  },\n                }}\n              />\n              <Pressable onPress={handleSubmit(addTask)} style={{marginHorizontal:10}}>\n                <Feather name=\"plus-circle\" size={20} color={colors.primary.purple}/>\n              </Pressable>\n            </View>\n          </Animated.View>\n\n        </View>\n        <TouchableOpacity onPress={() => setAddModalVisible(true)} style={{justifyContent: 'center', position: 'absolute', bottom:55, right: 15, flex: 1}}>\n          <Feather name='plus-circle' size={40} color={colors.primary.purple} />\n        </TouchableOpacity> \n        <NewTask\n        addModalVisible={addModalVisible===true}\n        setAddModalVisible={setAddModalVisible}\n        db={db}\n        tasks={tasks}\n        setTasks={setTasks}\n        tracks={tracks}\n        track={undefined}\n        section={undefined}\n        pageDate={date}\n        tracksScreen={false}\n        monthly={false}\n      />\n      </View>\n      \n\n  );\n}\nexport default TodayTasks;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}