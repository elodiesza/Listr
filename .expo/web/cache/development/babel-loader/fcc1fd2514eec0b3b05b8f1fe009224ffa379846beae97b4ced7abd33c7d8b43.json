{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport PropTypes from 'prop-types';\nimport { Utils } from \"./Utils\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Month(props) {\n  var months = props.months,\n    month = props.currentMonth,\n    year = props.currentYear,\n    styles = props.styles,\n    onSelectMonth = props.onSelectMonth,\n    textStyle = props.textStyle,\n    minDate = props.minDate,\n    maxDate = props.maxDate;\n  var MONTHS = months || Utils.MONTHS;\n  var monthName = MONTHS[month];\n  var monthOutOfRange;\n  var monthIsBeforeMin = false;\n  var monthIsAfterMax = false;\n  var monthIsDisabled = false;\n  if (maxDate && maxDate.year() === year) {\n    monthIsAfterMax = month > maxDate.month();\n  }\n  if (minDate && minDate.year() === year) {\n    monthIsBeforeMin = month < minDate.month();\n  }\n  monthOutOfRange = monthIsAfterMax || monthIsBeforeMin || monthIsDisabled;\n  var onSelect = function onSelect() {\n    var _year = year;\n    if (minDate && year < minDate.year()) {\n      _year = minDate.year();\n    }\n    if (maxDate && year > maxDate.year()) {\n      _year = maxDate.year();\n    }\n    onSelectMonth({\n      month: month,\n      year: _year\n    });\n  };\n  return _jsx(View, {\n    style: [styles.monthContainer],\n    children: !monthOutOfRange ? _jsx(TouchableOpacity, {\n      onPress: onSelect,\n      children: _jsx(Text, {\n        style: [styles.monthText, textStyle],\n        children: monthName\n      })\n    }) : _jsx(Text, {\n      style: [textStyle, styles.disabledText],\n      children: monthName\n    })\n  });\n}\nMonth.propTypes = {\n  styles: PropTypes.shape({}),\n  currentMonth: PropTypes.number,\n  currentYear: PropTypes.number,\n  onSelectMonth: PropTypes.func\n};","map":{"version":3,"names":["React","View","Text","TouchableOpacity","PropTypes","Utils","jsx","_jsx","Month","props","months","month","currentMonth","year","currentYear","styles","onSelectMonth","textStyle","minDate","maxDate","MONTHS","monthName","monthOutOfRange","monthIsBeforeMin","monthIsAfterMax","monthIsDisabled","onSelect","_year","style","monthContainer","children","onPress","monthText","disabledText","propTypes","shape","number","func"],"sources":["/Users/elodie/Documents/GIT/todo/node_modules/react-native-calendar-picker/CalendarPicker/Month.js"],"sourcesContent":["import React from 'react';\nimport {\n  View,\n  Text,\n  TouchableOpacity\n} from 'react-native';\nimport PropTypes from 'prop-types';\nimport { Utils } from './Utils';\n\nexport default function Month(props) {\n  const {\n    months,\n    currentMonth: month,\n    currentYear: year,\n    styles,\n    onSelectMonth,\n    textStyle,\n    minDate,\n    maxDate,\n  } = props;\n\n  const MONTHS = months || Utils.MONTHS; // English Month Array\n  const monthName = MONTHS[month];\n\n  let monthOutOfRange;\n  let monthIsBeforeMin = false;\n  let monthIsAfterMax = false;\n  let monthIsDisabled = false;\n\n  // Check whether month is outside of min/max range.\n  if (maxDate && (maxDate.year() === year)) {\n    monthIsAfterMax = month > maxDate.month();\n  }\n  if (minDate && (minDate.year() === year)) {\n    monthIsBeforeMin = month < minDate.month();\n  }\n\n  // ToDo: disabledMonths props to disable months separate from disabledDates\n\n  monthOutOfRange = monthIsAfterMax || monthIsBeforeMin || monthIsDisabled;\n\n  const onSelect = () => {\n    let _year = year;\n    if (minDate && (year < minDate.year())) {\n      _year = minDate.year();\n    }\n    if (maxDate && (year > maxDate.year())) {\n      _year = maxDate.year();\n    }\n    onSelectMonth({month, year: _year});\n  };\n\n  return (\n    <View style={[styles.monthContainer]}>\n      { !monthOutOfRange ?\n        <TouchableOpacity\n          onPress={onSelect}>\n          <Text style={[styles.monthText, textStyle]}>\n            { monthName }\n          </Text>\n        </TouchableOpacity>\n        :\n        <Text style={[textStyle, styles.disabledText]}>\n          { monthName }\n        </Text>\n      }\n    </View>\n  );\n}\n\nMonth.propTypes = {\n  styles: PropTypes.shape({}),\n  currentMonth: PropTypes.number,\n  currentYear: PropTypes.number,\n  onSelectMonth: PropTypes.func,\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAM1B,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,KAAK;AAAkB,SAAAC,GAAA,IAAAC,IAAA;AAEhC,eAAe,SAASC,KAAKA,CAACC,KAAK,EAAE;EACnC,IACEC,MAAM,GAQJD,KAAK,CARPC,MAAM;IACQC,KAAK,GAOjBF,KAAK,CAPPG,YAAY;IACCC,IAAI,GAMfJ,KAAK,CANPK,WAAW;IACXC,MAAM,GAKJN,KAAK,CALPM,MAAM;IACNC,aAAa,GAIXP,KAAK,CAJPO,aAAa;IACbC,SAAS,GAGPR,KAAK,CAHPQ,SAAS;IACTC,OAAO,GAELT,KAAK,CAFPS,OAAO;IACPC,OAAO,GACLV,KAAK,CADPU,OAAO;EAGT,IAAMC,MAAM,GAAGV,MAAM,IAAIL,KAAK,CAACe,MAAM;EACrC,IAAMC,SAAS,GAAGD,MAAM,CAACT,KAAK,CAAC;EAE/B,IAAIW,eAAe;EACnB,IAAIC,gBAAgB,GAAG,KAAK;EAC5B,IAAIC,eAAe,GAAG,KAAK;EAC3B,IAAIC,eAAe,GAAG,KAAK;EAG3B,IAAIN,OAAO,IAAKA,OAAO,CAACN,IAAI,CAAC,CAAC,KAAKA,IAAK,EAAE;IACxCW,eAAe,GAAGb,KAAK,GAAGQ,OAAO,CAACR,KAAK,CAAC,CAAC;EAC3C;EACA,IAAIO,OAAO,IAAKA,OAAO,CAACL,IAAI,CAAC,CAAC,KAAKA,IAAK,EAAE;IACxCU,gBAAgB,GAAGZ,KAAK,GAAGO,OAAO,CAACP,KAAK,CAAC,CAAC;EAC5C;EAIAW,eAAe,GAAGE,eAAe,IAAID,gBAAgB,IAAIE,eAAe;EAExE,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAA,EAAS;IACrB,IAAIC,KAAK,GAAGd,IAAI;IAChB,IAAIK,OAAO,IAAKL,IAAI,GAAGK,OAAO,CAACL,IAAI,CAAC,CAAE,EAAE;MACtCc,KAAK,GAAGT,OAAO,CAACL,IAAI,CAAC,CAAC;IACxB;IACA,IAAIM,OAAO,IAAKN,IAAI,GAAGM,OAAO,CAACN,IAAI,CAAC,CAAE,EAAE;MACtCc,KAAK,GAAGR,OAAO,CAACN,IAAI,CAAC,CAAC;IACxB;IACAG,aAAa,CAAC;MAACL,KAAK,EAALA,KAAK;MAAEE,IAAI,EAAEc;IAAK,CAAC,CAAC;EACrC,CAAC;EAED,OACEpB,IAAA,CAACN,IAAI;IAAC2B,KAAK,EAAE,CAACb,MAAM,CAACc,cAAc,CAAE;IAAAC,QAAA,EACjC,CAACR,eAAe,GAChBf,IAAA,CAACJ,gBAAgB;MACf4B,OAAO,EAAEL,QAAS;MAAAI,QAAA,EAClBvB,IAAA,CAACL,IAAI;QAAC0B,KAAK,EAAE,CAACb,MAAM,CAACiB,SAAS,EAAEf,SAAS,CAAE;QAAAa,QAAA,EACvCT;MAAS,CACP;IAAC,CACS,CAAC,GAEnBd,IAAA,CAACL,IAAI;MAAC0B,KAAK,EAAE,CAACX,SAAS,EAAEF,MAAM,CAACkB,YAAY,CAAE;MAAAH,QAAA,EAC1CT;IAAS,CACP;EAAC,CAEL,CAAC;AAEX;AAEAb,KAAK,CAAC0B,SAAS,GAAG;EAChBnB,MAAM,EAAEX,SAAS,CAAC+B,KAAK,CAAC,CAAC,CAAC,CAAC;EAC3BvB,YAAY,EAAER,SAAS,CAACgC,MAAM;EAC9BtB,WAAW,EAAEV,SAAS,CAACgC,MAAM;EAC7BpB,aAAa,EAAEZ,SAAS,CAACiC;AAC3B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}